
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Profile
 * 
 */
export type Profile = $Result.DefaultSelection<Prisma.$ProfilePayload>
/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Session
 * 
 */
export type Session = $Result.DefaultSelection<Prisma.$SessionPayload>
/**
 * Model Address
 * 
 */
export type Address = $Result.DefaultSelection<Prisma.$AddressPayload>
/**
 * Model CateringRequest
 * 
 */
export type CateringRequest = $Result.DefaultSelection<Prisma.$CateringRequestPayload>
/**
 * Model Dispatch
 * 
 */
export type Dispatch = $Result.DefaultSelection<Prisma.$DispatchPayload>
/**
 * Model FileUpload
 * 
 */
export type FileUpload = $Result.DefaultSelection<Prisma.$FileUploadPayload>
/**
 * Model OnDemand
 * 
 */
export type OnDemand = $Result.DefaultSelection<Prisma.$OnDemandPayload>
/**
 * Model UserAddress
 * 
 */
export type UserAddress = $Result.DefaultSelection<Prisma.$UserAddressPayload>
/**
 * Model VerificationToken
 * 
 */
export type VerificationToken = $Result.DefaultSelection<Prisma.$VerificationTokenPayload>
/**
 * Model FormSubmission
 * 
 */
export type FormSubmission = $Result.DefaultSelection<Prisma.$FormSubmissionPayload>
/**
 * Model LeadCapture
 * 
 */
export type LeadCapture = $Result.DefaultSelection<Prisma.$LeadCapturePayload>
/**
 * Model JobApplication
 * 
 */
export type JobApplication = $Result.DefaultSelection<Prisma.$JobApplicationPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const UserType: {
  VENDOR: 'VENDOR',
  CLIENT: 'CLIENT',
  DRIVER: 'DRIVER',
  ADMIN: 'ADMIN',
  HELPDESK: 'HELPDESK',
  SUPER_ADMIN: 'SUPER_ADMIN'
};

export type UserType = (typeof UserType)[keyof typeof UserType]


export const UserStatus: {
  ACTIVE: 'ACTIVE',
  PENDING: 'PENDING',
  DELETED: 'DELETED'
};

export type UserStatus = (typeof UserStatus)[keyof typeof UserStatus]


export const DriverStatus: {
  ARRIVED_AT_VENDOR: 'ARRIVED_AT_VENDOR',
  EN_ROUTE_TO_CLIENT: 'EN_ROUTE_TO_CLIENT',
  ARRIVED_TO_CLIENT: 'ARRIVED_TO_CLIENT',
  ASSIGNED: 'ASSIGNED',
  COMPLETED: 'COMPLETED'
};

export type DriverStatus = (typeof DriverStatus)[keyof typeof DriverStatus]


export const CateringNeedHost: {
  YES: 'YES',
  NO: 'NO'
};

export type CateringNeedHost = (typeof CateringNeedHost)[keyof typeof CateringNeedHost]


export const CateringStatus: {
  ACTIVE: 'ACTIVE',
  ASSIGNED: 'ASSIGNED',
  CANCELLED: 'CANCELLED',
  COMPLETED: 'COMPLETED'
};

export type CateringStatus = (typeof CateringStatus)[keyof typeof CateringStatus]


export const OnDemandStatus: {
  ACTIVE: 'ACTIVE',
  ASSIGNED: 'ASSIGNED',
  CANCELLED: 'CANCELLED',
  COMPLETED: 'COMPLETED'
};

export type OnDemandStatus = (typeof OnDemandStatus)[keyof typeof OnDemandStatus]


export const VehicleType: {
  CAR: 'CAR',
  VAN: 'VAN',
  TRUCK: 'TRUCK'
};

export type VehicleType = (typeof VehicleType)[keyof typeof VehicleType]


export const ApplicationStatus: {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  INTERVIEWING: 'INTERVIEWING'
};

export type ApplicationStatus = (typeof ApplicationStatus)[keyof typeof ApplicationStatus]


export const FormType: {
  FOOD: 'FOOD',
  FLOWER: 'FLOWER',
  BAKERY: 'BAKERY',
  SPECIALTY: 'SPECIALTY'
};

export type FormType = (typeof FormType)[keyof typeof FormType]

}

export type UserType = $Enums.UserType

export const UserType: typeof $Enums.UserType

export type UserStatus = $Enums.UserStatus

export const UserStatus: typeof $Enums.UserStatus

export type DriverStatus = $Enums.DriverStatus

export const DriverStatus: typeof $Enums.DriverStatus

export type CateringNeedHost = $Enums.CateringNeedHost

export const CateringNeedHost: typeof $Enums.CateringNeedHost

export type CateringStatus = $Enums.CateringStatus

export const CateringStatus: typeof $Enums.CateringStatus

export type OnDemandStatus = $Enums.OnDemandStatus

export const OnDemandStatus: typeof $Enums.OnDemandStatus

export type VehicleType = $Enums.VehicleType

export const VehicleType: typeof $Enums.VehicleType

export type ApplicationStatus = $Enums.ApplicationStatus

export const ApplicationStatus: typeof $Enums.ApplicationStatus

export type FormType = $Enums.FormType

export const FormType: typeof $Enums.FormType

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Profiles
 * const profiles = await prisma.profile.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Profiles
   * const profiles = await prisma.profile.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.profile`: Exposes CRUD operations for the **Profile** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Profiles
    * const profiles = await prisma.profile.findMany()
    * ```
    */
  get profile(): Prisma.ProfileDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.session`: Exposes CRUD operations for the **Session** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.session.findMany()
    * ```
    */
  get session(): Prisma.SessionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.address`: Exposes CRUD operations for the **Address** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Addresses
    * const addresses = await prisma.address.findMany()
    * ```
    */
  get address(): Prisma.AddressDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.cateringRequest`: Exposes CRUD operations for the **CateringRequest** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CateringRequests
    * const cateringRequests = await prisma.cateringRequest.findMany()
    * ```
    */
  get cateringRequest(): Prisma.CateringRequestDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.dispatch`: Exposes CRUD operations for the **Dispatch** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Dispatches
    * const dispatches = await prisma.dispatch.findMany()
    * ```
    */
  get dispatch(): Prisma.DispatchDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.fileUpload`: Exposes CRUD operations for the **FileUpload** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FileUploads
    * const fileUploads = await prisma.fileUpload.findMany()
    * ```
    */
  get fileUpload(): Prisma.FileUploadDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.onDemand`: Exposes CRUD operations for the **OnDemand** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OnDemands
    * const onDemands = await prisma.onDemand.findMany()
    * ```
    */
  get onDemand(): Prisma.OnDemandDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.userAddress`: Exposes CRUD operations for the **UserAddress** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserAddresses
    * const userAddresses = await prisma.userAddress.findMany()
    * ```
    */
  get userAddress(): Prisma.UserAddressDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.verificationToken`: Exposes CRUD operations for the **VerificationToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more VerificationTokens
    * const verificationTokens = await prisma.verificationToken.findMany()
    * ```
    */
  get verificationToken(): Prisma.VerificationTokenDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.formSubmission`: Exposes CRUD operations for the **FormSubmission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more FormSubmissions
    * const formSubmissions = await prisma.formSubmission.findMany()
    * ```
    */
  get formSubmission(): Prisma.FormSubmissionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.leadCapture`: Exposes CRUD operations for the **LeadCapture** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more LeadCaptures
    * const leadCaptures = await prisma.leadCapture.findMany()
    * ```
    */
  get leadCapture(): Prisma.LeadCaptureDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.jobApplication`: Exposes CRUD operations for the **JobApplication** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more JobApplications
    * const jobApplications = await prisma.jobApplication.findMany()
    * ```
    */
  get jobApplication(): Prisma.JobApplicationDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Profile: 'Profile',
    Account: 'Account',
    Session: 'Session',
    Address: 'Address',
    CateringRequest: 'CateringRequest',
    Dispatch: 'Dispatch',
    FileUpload: 'FileUpload',
    OnDemand: 'OnDemand',
    UserAddress: 'UserAddress',
    VerificationToken: 'VerificationToken',
    FormSubmission: 'FormSubmission',
    LeadCapture: 'LeadCapture',
    JobApplication: 'JobApplication'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "profile" | "account" | "session" | "address" | "cateringRequest" | "dispatch" | "fileUpload" | "onDemand" | "userAddress" | "verificationToken" | "formSubmission" | "leadCapture" | "jobApplication"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Profile: {
        payload: Prisma.$ProfilePayload<ExtArgs>
        fields: Prisma.ProfileFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProfileFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProfileFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findFirst: {
            args: Prisma.ProfileFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProfileFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          findMany: {
            args: Prisma.ProfileFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          create: {
            args: Prisma.ProfileCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          createMany: {
            args: Prisma.ProfileCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProfileCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          delete: {
            args: Prisma.ProfileDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          update: {
            args: Prisma.ProfileUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          deleteMany: {
            args: Prisma.ProfileDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProfileUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProfileUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>[]
          }
          upsert: {
            args: Prisma.ProfileUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProfilePayload>
          }
          aggregate: {
            args: Prisma.ProfileAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProfile>
          }
          groupBy: {
            args: Prisma.ProfileGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProfileGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProfileCountArgs<ExtArgs>
            result: $Utils.Optional<ProfileCountAggregateOutputType> | number
          }
        }
      }
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Session: {
        payload: Prisma.$SessionPayload<ExtArgs>
        fields: Prisma.SessionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SessionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SessionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findFirst: {
            args: Prisma.SessionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SessionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          findMany: {
            args: Prisma.SessionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          create: {
            args: Prisma.SessionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          createMany: {
            args: Prisma.SessionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SessionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          delete: {
            args: Prisma.SessionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          update: {
            args: Prisma.SessionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          deleteMany: {
            args: Prisma.SessionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SessionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.SessionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>[]
          }
          upsert: {
            args: Prisma.SessionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SessionPayload>
          }
          aggregate: {
            args: Prisma.SessionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSession>
          }
          groupBy: {
            args: Prisma.SessionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SessionCountArgs<ExtArgs>
            result: $Utils.Optional<SessionCountAggregateOutputType> | number
          }
        }
      }
      Address: {
        payload: Prisma.$AddressPayload<ExtArgs>
        fields: Prisma.AddressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AddressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AddressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          findFirst: {
            args: Prisma.AddressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AddressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          findMany: {
            args: Prisma.AddressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>[]
          }
          create: {
            args: Prisma.AddressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          createMany: {
            args: Prisma.AddressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AddressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>[]
          }
          delete: {
            args: Prisma.AddressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          update: {
            args: Prisma.AddressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          deleteMany: {
            args: Prisma.AddressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AddressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AddressUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>[]
          }
          upsert: {
            args: Prisma.AddressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AddressPayload>
          }
          aggregate: {
            args: Prisma.AddressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAddress>
          }
          groupBy: {
            args: Prisma.AddressGroupByArgs<ExtArgs>
            result: $Utils.Optional<AddressGroupByOutputType>[]
          }
          count: {
            args: Prisma.AddressCountArgs<ExtArgs>
            result: $Utils.Optional<AddressCountAggregateOutputType> | number
          }
        }
      }
      CateringRequest: {
        payload: Prisma.$CateringRequestPayload<ExtArgs>
        fields: Prisma.CateringRequestFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CateringRequestFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CateringRequestPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CateringRequestFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CateringRequestPayload>
          }
          findFirst: {
            args: Prisma.CateringRequestFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CateringRequestPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CateringRequestFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CateringRequestPayload>
          }
          findMany: {
            args: Prisma.CateringRequestFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CateringRequestPayload>[]
          }
          create: {
            args: Prisma.CateringRequestCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CateringRequestPayload>
          }
          createMany: {
            args: Prisma.CateringRequestCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CateringRequestCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CateringRequestPayload>[]
          }
          delete: {
            args: Prisma.CateringRequestDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CateringRequestPayload>
          }
          update: {
            args: Prisma.CateringRequestUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CateringRequestPayload>
          }
          deleteMany: {
            args: Prisma.CateringRequestDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CateringRequestUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CateringRequestUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CateringRequestPayload>[]
          }
          upsert: {
            args: Prisma.CateringRequestUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CateringRequestPayload>
          }
          aggregate: {
            args: Prisma.CateringRequestAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCateringRequest>
          }
          groupBy: {
            args: Prisma.CateringRequestGroupByArgs<ExtArgs>
            result: $Utils.Optional<CateringRequestGroupByOutputType>[]
          }
          count: {
            args: Prisma.CateringRequestCountArgs<ExtArgs>
            result: $Utils.Optional<CateringRequestCountAggregateOutputType> | number
          }
        }
      }
      Dispatch: {
        payload: Prisma.$DispatchPayload<ExtArgs>
        fields: Prisma.DispatchFieldRefs
        operations: {
          findUnique: {
            args: Prisma.DispatchFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DispatchPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.DispatchFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DispatchPayload>
          }
          findFirst: {
            args: Prisma.DispatchFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DispatchPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.DispatchFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DispatchPayload>
          }
          findMany: {
            args: Prisma.DispatchFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DispatchPayload>[]
          }
          create: {
            args: Prisma.DispatchCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DispatchPayload>
          }
          createMany: {
            args: Prisma.DispatchCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.DispatchCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DispatchPayload>[]
          }
          delete: {
            args: Prisma.DispatchDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DispatchPayload>
          }
          update: {
            args: Prisma.DispatchUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DispatchPayload>
          }
          deleteMany: {
            args: Prisma.DispatchDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.DispatchUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.DispatchUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DispatchPayload>[]
          }
          upsert: {
            args: Prisma.DispatchUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$DispatchPayload>
          }
          aggregate: {
            args: Prisma.DispatchAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateDispatch>
          }
          groupBy: {
            args: Prisma.DispatchGroupByArgs<ExtArgs>
            result: $Utils.Optional<DispatchGroupByOutputType>[]
          }
          count: {
            args: Prisma.DispatchCountArgs<ExtArgs>
            result: $Utils.Optional<DispatchCountAggregateOutputType> | number
          }
        }
      }
      FileUpload: {
        payload: Prisma.$FileUploadPayload<ExtArgs>
        fields: Prisma.FileUploadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FileUploadFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FileUploadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FileUploadFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FileUploadPayload>
          }
          findFirst: {
            args: Prisma.FileUploadFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FileUploadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FileUploadFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FileUploadPayload>
          }
          findMany: {
            args: Prisma.FileUploadFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FileUploadPayload>[]
          }
          create: {
            args: Prisma.FileUploadCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FileUploadPayload>
          }
          createMany: {
            args: Prisma.FileUploadCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FileUploadCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FileUploadPayload>[]
          }
          delete: {
            args: Prisma.FileUploadDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FileUploadPayload>
          }
          update: {
            args: Prisma.FileUploadUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FileUploadPayload>
          }
          deleteMany: {
            args: Prisma.FileUploadDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FileUploadUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FileUploadUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FileUploadPayload>[]
          }
          upsert: {
            args: Prisma.FileUploadUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FileUploadPayload>
          }
          aggregate: {
            args: Prisma.FileUploadAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFileUpload>
          }
          groupBy: {
            args: Prisma.FileUploadGroupByArgs<ExtArgs>
            result: $Utils.Optional<FileUploadGroupByOutputType>[]
          }
          count: {
            args: Prisma.FileUploadCountArgs<ExtArgs>
            result: $Utils.Optional<FileUploadCountAggregateOutputType> | number
          }
        }
      }
      OnDemand: {
        payload: Prisma.$OnDemandPayload<ExtArgs>
        fields: Prisma.OnDemandFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OnDemandFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OnDemandPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OnDemandFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OnDemandPayload>
          }
          findFirst: {
            args: Prisma.OnDemandFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OnDemandPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OnDemandFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OnDemandPayload>
          }
          findMany: {
            args: Prisma.OnDemandFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OnDemandPayload>[]
          }
          create: {
            args: Prisma.OnDemandCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OnDemandPayload>
          }
          createMany: {
            args: Prisma.OnDemandCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OnDemandCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OnDemandPayload>[]
          }
          delete: {
            args: Prisma.OnDemandDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OnDemandPayload>
          }
          update: {
            args: Prisma.OnDemandUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OnDemandPayload>
          }
          deleteMany: {
            args: Prisma.OnDemandDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OnDemandUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OnDemandUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OnDemandPayload>[]
          }
          upsert: {
            args: Prisma.OnDemandUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OnDemandPayload>
          }
          aggregate: {
            args: Prisma.OnDemandAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOnDemand>
          }
          groupBy: {
            args: Prisma.OnDemandGroupByArgs<ExtArgs>
            result: $Utils.Optional<OnDemandGroupByOutputType>[]
          }
          count: {
            args: Prisma.OnDemandCountArgs<ExtArgs>
            result: $Utils.Optional<OnDemandCountAggregateOutputType> | number
          }
        }
      }
      UserAddress: {
        payload: Prisma.$UserAddressPayload<ExtArgs>
        fields: Prisma.UserAddressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserAddressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserAddressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>
          }
          findFirst: {
            args: Prisma.UserAddressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserAddressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>
          }
          findMany: {
            args: Prisma.UserAddressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>[]
          }
          create: {
            args: Prisma.UserAddressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>
          }
          createMany: {
            args: Prisma.UserAddressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserAddressCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>[]
          }
          delete: {
            args: Prisma.UserAddressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>
          }
          update: {
            args: Prisma.UserAddressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>
          }
          deleteMany: {
            args: Prisma.UserAddressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserAddressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserAddressUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>[]
          }
          upsert: {
            args: Prisma.UserAddressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserAddressPayload>
          }
          aggregate: {
            args: Prisma.UserAddressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserAddress>
          }
          groupBy: {
            args: Prisma.UserAddressGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserAddressGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserAddressCountArgs<ExtArgs>
            result: $Utils.Optional<UserAddressCountAggregateOutputType> | number
          }
        }
      }
      VerificationToken: {
        payload: Prisma.$VerificationTokenPayload<ExtArgs>
        fields: Prisma.VerificationTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.VerificationTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.VerificationTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findFirst: {
            args: Prisma.VerificationTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.VerificationTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          findMany: {
            args: Prisma.VerificationTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          create: {
            args: Prisma.VerificationTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          createMany: {
            args: Prisma.VerificationTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.VerificationTokenCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          delete: {
            args: Prisma.VerificationTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          update: {
            args: Prisma.VerificationTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          deleteMany: {
            args: Prisma.VerificationTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.VerificationTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.VerificationTokenUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>[]
          }
          upsert: {
            args: Prisma.VerificationTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$VerificationTokenPayload>
          }
          aggregate: {
            args: Prisma.VerificationTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateVerificationToken>
          }
          groupBy: {
            args: Prisma.VerificationTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.VerificationTokenCountArgs<ExtArgs>
            result: $Utils.Optional<VerificationTokenCountAggregateOutputType> | number
          }
        }
      }
      FormSubmission: {
        payload: Prisma.$FormSubmissionPayload<ExtArgs>
        fields: Prisma.FormSubmissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FormSubmissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FormSubmissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>
          }
          findFirst: {
            args: Prisma.FormSubmissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FormSubmissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>
          }
          findMany: {
            args: Prisma.FormSubmissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>[]
          }
          create: {
            args: Prisma.FormSubmissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>
          }
          createMany: {
            args: Prisma.FormSubmissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FormSubmissionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>[]
          }
          delete: {
            args: Prisma.FormSubmissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>
          }
          update: {
            args: Prisma.FormSubmissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>
          }
          deleteMany: {
            args: Prisma.FormSubmissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FormSubmissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.FormSubmissionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>[]
          }
          upsert: {
            args: Prisma.FormSubmissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FormSubmissionPayload>
          }
          aggregate: {
            args: Prisma.FormSubmissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFormSubmission>
          }
          groupBy: {
            args: Prisma.FormSubmissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<FormSubmissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.FormSubmissionCountArgs<ExtArgs>
            result: $Utils.Optional<FormSubmissionCountAggregateOutputType> | number
          }
        }
      }
      LeadCapture: {
        payload: Prisma.$LeadCapturePayload<ExtArgs>
        fields: Prisma.LeadCaptureFieldRefs
        operations: {
          findUnique: {
            args: Prisma.LeadCaptureFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadCapturePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.LeadCaptureFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadCapturePayload>
          }
          findFirst: {
            args: Prisma.LeadCaptureFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadCapturePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.LeadCaptureFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadCapturePayload>
          }
          findMany: {
            args: Prisma.LeadCaptureFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadCapturePayload>[]
          }
          create: {
            args: Prisma.LeadCaptureCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadCapturePayload>
          }
          createMany: {
            args: Prisma.LeadCaptureCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.LeadCaptureCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadCapturePayload>[]
          }
          delete: {
            args: Prisma.LeadCaptureDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadCapturePayload>
          }
          update: {
            args: Prisma.LeadCaptureUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadCapturePayload>
          }
          deleteMany: {
            args: Prisma.LeadCaptureDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.LeadCaptureUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.LeadCaptureUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadCapturePayload>[]
          }
          upsert: {
            args: Prisma.LeadCaptureUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$LeadCapturePayload>
          }
          aggregate: {
            args: Prisma.LeadCaptureAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLeadCapture>
          }
          groupBy: {
            args: Prisma.LeadCaptureGroupByArgs<ExtArgs>
            result: $Utils.Optional<LeadCaptureGroupByOutputType>[]
          }
          count: {
            args: Prisma.LeadCaptureCountArgs<ExtArgs>
            result: $Utils.Optional<LeadCaptureCountAggregateOutputType> | number
          }
        }
      }
      JobApplication: {
        payload: Prisma.$JobApplicationPayload<ExtArgs>
        fields: Prisma.JobApplicationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.JobApplicationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.JobApplicationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>
          }
          findFirst: {
            args: Prisma.JobApplicationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.JobApplicationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>
          }
          findMany: {
            args: Prisma.JobApplicationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>[]
          }
          create: {
            args: Prisma.JobApplicationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>
          }
          createMany: {
            args: Prisma.JobApplicationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.JobApplicationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>[]
          }
          delete: {
            args: Prisma.JobApplicationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>
          }
          update: {
            args: Prisma.JobApplicationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>
          }
          deleteMany: {
            args: Prisma.JobApplicationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.JobApplicationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.JobApplicationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>[]
          }
          upsert: {
            args: Prisma.JobApplicationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$JobApplicationPayload>
          }
          aggregate: {
            args: Prisma.JobApplicationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateJobApplication>
          }
          groupBy: {
            args: Prisma.JobApplicationGroupByArgs<ExtArgs>
            result: $Utils.Optional<JobApplicationGroupByOutputType>[]
          }
          count: {
            args: Prisma.JobApplicationCountArgs<ExtArgs>
            result: $Utils.Optional<JobApplicationCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    profile?: ProfileOmit
    account?: AccountOmit
    session?: SessionOmit
    address?: AddressOmit
    cateringRequest?: CateringRequestOmit
    dispatch?: DispatchOmit
    fileUpload?: FileUploadOmit
    onDemand?: OnDemandOmit
    userAddress?: UserAddressOmit
    verificationToken?: VerificationTokenOmit
    formSubmission?: FormSubmissionOmit
    leadCapture?: LeadCaptureOmit
    jobApplication?: JobApplicationOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ProfileCountOutputType
   */

  export type ProfileCountOutputType = {
    accounts: number
    createdAddresses: number
    cateringRequests: number
    driverDispatches: number
    userDispatches: number
    fileUploads: number
    jobApplications: number
    onDemandRequests: number
    sessions: number
    userAddresses: number
  }

  export type ProfileCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | ProfileCountOutputTypeCountAccountsArgs
    createdAddresses?: boolean | ProfileCountOutputTypeCountCreatedAddressesArgs
    cateringRequests?: boolean | ProfileCountOutputTypeCountCateringRequestsArgs
    driverDispatches?: boolean | ProfileCountOutputTypeCountDriverDispatchesArgs
    userDispatches?: boolean | ProfileCountOutputTypeCountUserDispatchesArgs
    fileUploads?: boolean | ProfileCountOutputTypeCountFileUploadsArgs
    jobApplications?: boolean | ProfileCountOutputTypeCountJobApplicationsArgs
    onDemandRequests?: boolean | ProfileCountOutputTypeCountOnDemandRequestsArgs
    sessions?: boolean | ProfileCountOutputTypeCountSessionsArgs
    userAddresses?: boolean | ProfileCountOutputTypeCountUserAddressesArgs
  }

  // Custom InputTypes
  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProfileCountOutputType
     */
    select?: ProfileCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountAccountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountCreatedAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AddressWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountCateringRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CateringRequestWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountDriverDispatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DispatchWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountUserDispatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DispatchWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountFileUploadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileUploadWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountJobApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobApplicationWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountOnDemandRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OnDemandWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
  }

  /**
   * ProfileCountOutputType without action
   */
  export type ProfileCountOutputTypeCountUserAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserAddressWhereInput
  }


  /**
   * Count Type AddressCountOutputType
   */

  export type AddressCountOutputType = {
    cateringDeliveryRequests: number
    cateringPickupRequests: number
    onDemandDeliveryRequests: number
    onDemandPickupRequests: number
    userAddresses: number
  }

  export type AddressCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cateringDeliveryRequests?: boolean | AddressCountOutputTypeCountCateringDeliveryRequestsArgs
    cateringPickupRequests?: boolean | AddressCountOutputTypeCountCateringPickupRequestsArgs
    onDemandDeliveryRequests?: boolean | AddressCountOutputTypeCountOnDemandDeliveryRequestsArgs
    onDemandPickupRequests?: boolean | AddressCountOutputTypeCountOnDemandPickupRequestsArgs
    userAddresses?: boolean | AddressCountOutputTypeCountUserAddressesArgs
  }

  // Custom InputTypes
  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AddressCountOutputType
     */
    select?: AddressCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeCountCateringDeliveryRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CateringRequestWhereInput
  }

  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeCountCateringPickupRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CateringRequestWhereInput
  }

  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeCountOnDemandDeliveryRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OnDemandWhereInput
  }

  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeCountOnDemandPickupRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OnDemandWhereInput
  }

  /**
   * AddressCountOutputType without action
   */
  export type AddressCountOutputTypeCountUserAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserAddressWhereInput
  }


  /**
   * Count Type CateringRequestCountOutputType
   */

  export type CateringRequestCountOutputType = {
    dispatches: number
    fileUploads: number
  }

  export type CateringRequestCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dispatches?: boolean | CateringRequestCountOutputTypeCountDispatchesArgs
    fileUploads?: boolean | CateringRequestCountOutputTypeCountFileUploadsArgs
  }

  // Custom InputTypes
  /**
   * CateringRequestCountOutputType without action
   */
  export type CateringRequestCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequestCountOutputType
     */
    select?: CateringRequestCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CateringRequestCountOutputType without action
   */
  export type CateringRequestCountOutputTypeCountDispatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DispatchWhereInput
  }

  /**
   * CateringRequestCountOutputType without action
   */
  export type CateringRequestCountOutputTypeCountFileUploadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileUploadWhereInput
  }


  /**
   * Count Type OnDemandCountOutputType
   */

  export type OnDemandCountOutputType = {
    dispatches: number
    fileUploads: number
  }

  export type OnDemandCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dispatches?: boolean | OnDemandCountOutputTypeCountDispatchesArgs
    fileUploads?: boolean | OnDemandCountOutputTypeCountFileUploadsArgs
  }

  // Custom InputTypes
  /**
   * OnDemandCountOutputType without action
   */
  export type OnDemandCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemandCountOutputType
     */
    select?: OnDemandCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OnDemandCountOutputType without action
   */
  export type OnDemandCountOutputTypeCountDispatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DispatchWhereInput
  }

  /**
   * OnDemandCountOutputType without action
   */
  export type OnDemandCountOutputTypeCountFileUploadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileUploadWhereInput
  }


  /**
   * Count Type JobApplicationCountOutputType
   */

  export type JobApplicationCountOutputType = {
    fileUploads: number
  }

  export type JobApplicationCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fileUploads?: boolean | JobApplicationCountOutputTypeCountFileUploadsArgs
  }

  // Custom InputTypes
  /**
   * JobApplicationCountOutputType without action
   */
  export type JobApplicationCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplicationCountOutputType
     */
    select?: JobApplicationCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * JobApplicationCountOutputType without action
   */
  export type JobApplicationCountOutputTypeCountFileUploadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileUploadWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Profile
   */

  export type AggregateProfile = {
    _count: ProfileCountAggregateOutputType | null
    _avg: ProfileAvgAggregateOutputType | null
    _sum: ProfileSumAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  export type ProfileAvgAggregateOutputType = {
    headCount: number | null
  }

  export type ProfileSumAggregateOutputType = {
    headCount: number | null
  }

  export type ProfileMinAggregateOutputType = {
    id: string | null
    guid: string | null
    name: string | null
    email: string | null
    image: string | null
    type: $Enums.UserType | null
    companyName: string | null
    contactName: string | null
    contactNumber: string | null
    website: string | null
    street1: string | null
    street2: string | null
    city: string | null
    state: string | null
    zip: string | null
    locationNumber: string | null
    parkingLoading: string | null
    timeNeeded: string | null
    cateringBrokerage: string | null
    frequency: string | null
    provide: string | null
    headCount: number | null
    status: $Enums.UserStatus | null
    sideNotes: string | null
    confirmationCode: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isTemporaryPassword: boolean | null
    deletedAt: Date | null
  }

  export type ProfileMaxAggregateOutputType = {
    id: string | null
    guid: string | null
    name: string | null
    email: string | null
    image: string | null
    type: $Enums.UserType | null
    companyName: string | null
    contactName: string | null
    contactNumber: string | null
    website: string | null
    street1: string | null
    street2: string | null
    city: string | null
    state: string | null
    zip: string | null
    locationNumber: string | null
    parkingLoading: string | null
    timeNeeded: string | null
    cateringBrokerage: string | null
    frequency: string | null
    provide: string | null
    headCount: number | null
    status: $Enums.UserStatus | null
    sideNotes: string | null
    confirmationCode: string | null
    createdAt: Date | null
    updatedAt: Date | null
    isTemporaryPassword: boolean | null
    deletedAt: Date | null
  }

  export type ProfileCountAggregateOutputType = {
    id: number
    guid: number
    name: number
    email: number
    image: number
    type: number
    companyName: number
    contactName: number
    contactNumber: number
    website: number
    street1: number
    street2: number
    city: number
    state: number
    zip: number
    locationNumber: number
    parkingLoading: number
    counties: number
    timeNeeded: number
    cateringBrokerage: number
    frequency: number
    provide: number
    headCount: number
    status: number
    sideNotes: number
    confirmationCode: number
    createdAt: number
    updatedAt: number
    isTemporaryPassword: number
    deletedAt: number
    _all: number
  }


  export type ProfileAvgAggregateInputType = {
    headCount?: true
  }

  export type ProfileSumAggregateInputType = {
    headCount?: true
  }

  export type ProfileMinAggregateInputType = {
    id?: true
    guid?: true
    name?: true
    email?: true
    image?: true
    type?: true
    companyName?: true
    contactName?: true
    contactNumber?: true
    website?: true
    street1?: true
    street2?: true
    city?: true
    state?: true
    zip?: true
    locationNumber?: true
    parkingLoading?: true
    timeNeeded?: true
    cateringBrokerage?: true
    frequency?: true
    provide?: true
    headCount?: true
    status?: true
    sideNotes?: true
    confirmationCode?: true
    createdAt?: true
    updatedAt?: true
    isTemporaryPassword?: true
    deletedAt?: true
  }

  export type ProfileMaxAggregateInputType = {
    id?: true
    guid?: true
    name?: true
    email?: true
    image?: true
    type?: true
    companyName?: true
    contactName?: true
    contactNumber?: true
    website?: true
    street1?: true
    street2?: true
    city?: true
    state?: true
    zip?: true
    locationNumber?: true
    parkingLoading?: true
    timeNeeded?: true
    cateringBrokerage?: true
    frequency?: true
    provide?: true
    headCount?: true
    status?: true
    sideNotes?: true
    confirmationCode?: true
    createdAt?: true
    updatedAt?: true
    isTemporaryPassword?: true
    deletedAt?: true
  }

  export type ProfileCountAggregateInputType = {
    id?: true
    guid?: true
    name?: true
    email?: true
    image?: true
    type?: true
    companyName?: true
    contactName?: true
    contactNumber?: true
    website?: true
    street1?: true
    street2?: true
    city?: true
    state?: true
    zip?: true
    locationNumber?: true
    parkingLoading?: true
    counties?: true
    timeNeeded?: true
    cateringBrokerage?: true
    frequency?: true
    provide?: true
    headCount?: true
    status?: true
    sideNotes?: true
    confirmationCode?: true
    createdAt?: true
    updatedAt?: true
    isTemporaryPassword?: true
    deletedAt?: true
    _all?: true
  }

  export type ProfileAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profile to aggregate.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Profiles
    **/
    _count?: true | ProfileCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProfileAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProfileSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProfileMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProfileMaxAggregateInputType
  }

  export type GetProfileAggregateType<T extends ProfileAggregateArgs> = {
        [P in keyof T & keyof AggregateProfile]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProfile[P]>
      : GetScalarType<T[P], AggregateProfile[P]>
  }




  export type ProfileGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProfileWhereInput
    orderBy?: ProfileOrderByWithAggregationInput | ProfileOrderByWithAggregationInput[]
    by: ProfileScalarFieldEnum[] | ProfileScalarFieldEnum
    having?: ProfileScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProfileCountAggregateInputType | true
    _avg?: ProfileAvgAggregateInputType
    _sum?: ProfileSumAggregateInputType
    _min?: ProfileMinAggregateInputType
    _max?: ProfileMaxAggregateInputType
  }

  export type ProfileGroupByOutputType = {
    id: string
    guid: string | null
    name: string | null
    email: string
    image: string | null
    type: $Enums.UserType
    companyName: string | null
    contactName: string | null
    contactNumber: string | null
    website: string | null
    street1: string | null
    street2: string | null
    city: string | null
    state: string | null
    zip: string | null
    locationNumber: string | null
    parkingLoading: string | null
    counties: JsonValue | null
    timeNeeded: string | null
    cateringBrokerage: string | null
    frequency: string | null
    provide: string | null
    headCount: number | null
    status: $Enums.UserStatus
    sideNotes: string | null
    confirmationCode: string | null
    createdAt: Date
    updatedAt: Date
    isTemporaryPassword: boolean
    deletedAt: Date | null
    _count: ProfileCountAggregateOutputType | null
    _avg: ProfileAvgAggregateOutputType | null
    _sum: ProfileSumAggregateOutputType | null
    _min: ProfileMinAggregateOutputType | null
    _max: ProfileMaxAggregateOutputType | null
  }

  type GetProfileGroupByPayload<T extends ProfileGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProfileGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProfileGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProfileGroupByOutputType[P]>
            : GetScalarType<T[P], ProfileGroupByOutputType[P]>
        }
      >
    >


  export type ProfileSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    guid?: boolean
    name?: boolean
    email?: boolean
    image?: boolean
    type?: boolean
    companyName?: boolean
    contactName?: boolean
    contactNumber?: boolean
    website?: boolean
    street1?: boolean
    street2?: boolean
    city?: boolean
    state?: boolean
    zip?: boolean
    locationNumber?: boolean
    parkingLoading?: boolean
    counties?: boolean
    timeNeeded?: boolean
    cateringBrokerage?: boolean
    frequency?: boolean
    provide?: boolean
    headCount?: boolean
    status?: boolean
    sideNotes?: boolean
    confirmationCode?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isTemporaryPassword?: boolean
    deletedAt?: boolean
    accounts?: boolean | Profile$accountsArgs<ExtArgs>
    createdAddresses?: boolean | Profile$createdAddressesArgs<ExtArgs>
    cateringRequests?: boolean | Profile$cateringRequestsArgs<ExtArgs>
    driverDispatches?: boolean | Profile$driverDispatchesArgs<ExtArgs>
    userDispatches?: boolean | Profile$userDispatchesArgs<ExtArgs>
    fileUploads?: boolean | Profile$fileUploadsArgs<ExtArgs>
    jobApplications?: boolean | Profile$jobApplicationsArgs<ExtArgs>
    onDemandRequests?: boolean | Profile$onDemandRequestsArgs<ExtArgs>
    sessions?: boolean | Profile$sessionsArgs<ExtArgs>
    userAddresses?: boolean | Profile$userAddressesArgs<ExtArgs>
    _count?: boolean | ProfileCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    guid?: boolean
    name?: boolean
    email?: boolean
    image?: boolean
    type?: boolean
    companyName?: boolean
    contactName?: boolean
    contactNumber?: boolean
    website?: boolean
    street1?: boolean
    street2?: boolean
    city?: boolean
    state?: boolean
    zip?: boolean
    locationNumber?: boolean
    parkingLoading?: boolean
    counties?: boolean
    timeNeeded?: boolean
    cateringBrokerage?: boolean
    frequency?: boolean
    provide?: boolean
    headCount?: boolean
    status?: boolean
    sideNotes?: boolean
    confirmationCode?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isTemporaryPassword?: boolean
    deletedAt?: boolean
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    guid?: boolean
    name?: boolean
    email?: boolean
    image?: boolean
    type?: boolean
    companyName?: boolean
    contactName?: boolean
    contactNumber?: boolean
    website?: boolean
    street1?: boolean
    street2?: boolean
    city?: boolean
    state?: boolean
    zip?: boolean
    locationNumber?: boolean
    parkingLoading?: boolean
    counties?: boolean
    timeNeeded?: boolean
    cateringBrokerage?: boolean
    frequency?: boolean
    provide?: boolean
    headCount?: boolean
    status?: boolean
    sideNotes?: boolean
    confirmationCode?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isTemporaryPassword?: boolean
    deletedAt?: boolean
  }, ExtArgs["result"]["profile"]>

  export type ProfileSelectScalar = {
    id?: boolean
    guid?: boolean
    name?: boolean
    email?: boolean
    image?: boolean
    type?: boolean
    companyName?: boolean
    contactName?: boolean
    contactNumber?: boolean
    website?: boolean
    street1?: boolean
    street2?: boolean
    city?: boolean
    state?: boolean
    zip?: boolean
    locationNumber?: boolean
    parkingLoading?: boolean
    counties?: boolean
    timeNeeded?: boolean
    cateringBrokerage?: boolean
    frequency?: boolean
    provide?: boolean
    headCount?: boolean
    status?: boolean
    sideNotes?: boolean
    confirmationCode?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    isTemporaryPassword?: boolean
    deletedAt?: boolean
  }

  export type ProfileOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "guid" | "name" | "email" | "image" | "type" | "companyName" | "contactName" | "contactNumber" | "website" | "street1" | "street2" | "city" | "state" | "zip" | "locationNumber" | "parkingLoading" | "counties" | "timeNeeded" | "cateringBrokerage" | "frequency" | "provide" | "headCount" | "status" | "sideNotes" | "confirmationCode" | "createdAt" | "updatedAt" | "isTemporaryPassword" | "deletedAt", ExtArgs["result"]["profile"]>
  export type ProfileInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    accounts?: boolean | Profile$accountsArgs<ExtArgs>
    createdAddresses?: boolean | Profile$createdAddressesArgs<ExtArgs>
    cateringRequests?: boolean | Profile$cateringRequestsArgs<ExtArgs>
    driverDispatches?: boolean | Profile$driverDispatchesArgs<ExtArgs>
    userDispatches?: boolean | Profile$userDispatchesArgs<ExtArgs>
    fileUploads?: boolean | Profile$fileUploadsArgs<ExtArgs>
    jobApplications?: boolean | Profile$jobApplicationsArgs<ExtArgs>
    onDemandRequests?: boolean | Profile$onDemandRequestsArgs<ExtArgs>
    sessions?: boolean | Profile$sessionsArgs<ExtArgs>
    userAddresses?: boolean | Profile$userAddressesArgs<ExtArgs>
    _count?: boolean | ProfileCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProfileIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ProfileIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ProfilePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Profile"
    objects: {
      accounts: Prisma.$AccountPayload<ExtArgs>[]
      createdAddresses: Prisma.$AddressPayload<ExtArgs>[]
      cateringRequests: Prisma.$CateringRequestPayload<ExtArgs>[]
      driverDispatches: Prisma.$DispatchPayload<ExtArgs>[]
      userDispatches: Prisma.$DispatchPayload<ExtArgs>[]
      fileUploads: Prisma.$FileUploadPayload<ExtArgs>[]
      jobApplications: Prisma.$JobApplicationPayload<ExtArgs>[]
      onDemandRequests: Prisma.$OnDemandPayload<ExtArgs>[]
      sessions: Prisma.$SessionPayload<ExtArgs>[]
      userAddresses: Prisma.$UserAddressPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      guid: string | null
      name: string | null
      email: string
      image: string | null
      type: $Enums.UserType
      companyName: string | null
      contactName: string | null
      contactNumber: string | null
      website: string | null
      street1: string | null
      street2: string | null
      city: string | null
      state: string | null
      zip: string | null
      locationNumber: string | null
      parkingLoading: string | null
      counties: Prisma.JsonValue | null
      timeNeeded: string | null
      cateringBrokerage: string | null
      frequency: string | null
      provide: string | null
      headCount: number | null
      status: $Enums.UserStatus
      sideNotes: string | null
      confirmationCode: string | null
      createdAt: Date
      updatedAt: Date
      isTemporaryPassword: boolean
      deletedAt: Date | null
    }, ExtArgs["result"]["profile"]>
    composites: {}
  }

  type ProfileGetPayload<S extends boolean | null | undefined | ProfileDefaultArgs> = $Result.GetResult<Prisma.$ProfilePayload, S>

  type ProfileCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProfileFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProfileCountAggregateInputType | true
    }

  export interface ProfileDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Profile'], meta: { name: 'Profile' } }
    /**
     * Find zero or one Profile that matches the filter.
     * @param {ProfileFindUniqueArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProfileFindUniqueArgs>(args: SelectSubset<T, ProfileFindUniqueArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Profile that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProfileFindUniqueOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProfileFindUniqueOrThrowArgs>(args: SelectSubset<T, ProfileFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProfileFindFirstArgs>(args?: SelectSubset<T, ProfileFindFirstArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Profile that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindFirstOrThrowArgs} args - Arguments to find a Profile
     * @example
     * // Get one Profile
     * const profile = await prisma.profile.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProfileFindFirstOrThrowArgs>(args?: SelectSubset<T, ProfileFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Profiles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Profiles
     * const profiles = await prisma.profile.findMany()
     * 
     * // Get first 10 Profiles
     * const profiles = await prisma.profile.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const profileWithIdOnly = await prisma.profile.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProfileFindManyArgs>(args?: SelectSubset<T, ProfileFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Profile.
     * @param {ProfileCreateArgs} args - Arguments to create a Profile.
     * @example
     * // Create one Profile
     * const Profile = await prisma.profile.create({
     *   data: {
     *     // ... data to create a Profile
     *   }
     * })
     * 
     */
    create<T extends ProfileCreateArgs>(args: SelectSubset<T, ProfileCreateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Profiles.
     * @param {ProfileCreateManyArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProfileCreateManyArgs>(args?: SelectSubset<T, ProfileCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Profiles and returns the data saved in the database.
     * @param {ProfileCreateManyAndReturnArgs} args - Arguments to create many Profiles.
     * @example
     * // Create many Profiles
     * const profile = await prisma.profile.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Profiles and only return the `id`
     * const profileWithIdOnly = await prisma.profile.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProfileCreateManyAndReturnArgs>(args?: SelectSubset<T, ProfileCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Profile.
     * @param {ProfileDeleteArgs} args - Arguments to delete one Profile.
     * @example
     * // Delete one Profile
     * const Profile = await prisma.profile.delete({
     *   where: {
     *     // ... filter to delete one Profile
     *   }
     * })
     * 
     */
    delete<T extends ProfileDeleteArgs>(args: SelectSubset<T, ProfileDeleteArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Profile.
     * @param {ProfileUpdateArgs} args - Arguments to update one Profile.
     * @example
     * // Update one Profile
     * const profile = await prisma.profile.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProfileUpdateArgs>(args: SelectSubset<T, ProfileUpdateArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Profiles.
     * @param {ProfileDeleteManyArgs} args - Arguments to filter Profiles to delete.
     * @example
     * // Delete a few Profiles
     * const { count } = await prisma.profile.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProfileDeleteManyArgs>(args?: SelectSubset<T, ProfileDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProfileUpdateManyArgs>(args: SelectSubset<T, ProfileUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Profiles and returns the data updated in the database.
     * @param {ProfileUpdateManyAndReturnArgs} args - Arguments to update many Profiles.
     * @example
     * // Update many Profiles
     * const profile = await prisma.profile.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Profiles and only return the `id`
     * const profileWithIdOnly = await prisma.profile.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProfileUpdateManyAndReturnArgs>(args: SelectSubset<T, ProfileUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Profile.
     * @param {ProfileUpsertArgs} args - Arguments to update or create a Profile.
     * @example
     * // Update or create a Profile
     * const profile = await prisma.profile.upsert({
     *   create: {
     *     // ... data to create a Profile
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Profile we want to update
     *   }
     * })
     */
    upsert<T extends ProfileUpsertArgs>(args: SelectSubset<T, ProfileUpsertArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Profiles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileCountArgs} args - Arguments to filter Profiles to count.
     * @example
     * // Count the number of Profiles
     * const count = await prisma.profile.count({
     *   where: {
     *     // ... the filter for the Profiles we want to count
     *   }
     * })
    **/
    count<T extends ProfileCountArgs>(
      args?: Subset<T, ProfileCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProfileCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProfileAggregateArgs>(args: Subset<T, ProfileAggregateArgs>): Prisma.PrismaPromise<GetProfileAggregateType<T>>

    /**
     * Group by Profile.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProfileGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProfileGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProfileGroupByArgs['orderBy'] }
        : { orderBy?: ProfileGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProfileGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProfileGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Profile model
   */
  readonly fields: ProfileFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Profile.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProfileClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    accounts<T extends Profile$accountsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$accountsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    createdAddresses<T extends Profile$createdAddressesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$createdAddressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cateringRequests<T extends Profile$cateringRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$cateringRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    driverDispatches<T extends Profile$driverDispatchesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$driverDispatchesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userDispatches<T extends Profile$userDispatchesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$userDispatchesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    fileUploads<T extends Profile$fileUploadsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$fileUploadsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    jobApplications<T extends Profile$jobApplicationsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$jobApplicationsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    onDemandRequests<T extends Profile$onDemandRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$onDemandRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sessions<T extends Profile$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, Profile$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userAddresses<T extends Profile$userAddressesArgs<ExtArgs> = {}>(args?: Subset<T, Profile$userAddressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Profile model
   */
  interface ProfileFieldRefs {
    readonly id: FieldRef<"Profile", 'String'>
    readonly guid: FieldRef<"Profile", 'String'>
    readonly name: FieldRef<"Profile", 'String'>
    readonly email: FieldRef<"Profile", 'String'>
    readonly image: FieldRef<"Profile", 'String'>
    readonly type: FieldRef<"Profile", 'UserType'>
    readonly companyName: FieldRef<"Profile", 'String'>
    readonly contactName: FieldRef<"Profile", 'String'>
    readonly contactNumber: FieldRef<"Profile", 'String'>
    readonly website: FieldRef<"Profile", 'String'>
    readonly street1: FieldRef<"Profile", 'String'>
    readonly street2: FieldRef<"Profile", 'String'>
    readonly city: FieldRef<"Profile", 'String'>
    readonly state: FieldRef<"Profile", 'String'>
    readonly zip: FieldRef<"Profile", 'String'>
    readonly locationNumber: FieldRef<"Profile", 'String'>
    readonly parkingLoading: FieldRef<"Profile", 'String'>
    readonly counties: FieldRef<"Profile", 'Json'>
    readonly timeNeeded: FieldRef<"Profile", 'String'>
    readonly cateringBrokerage: FieldRef<"Profile", 'String'>
    readonly frequency: FieldRef<"Profile", 'String'>
    readonly provide: FieldRef<"Profile", 'String'>
    readonly headCount: FieldRef<"Profile", 'Int'>
    readonly status: FieldRef<"Profile", 'UserStatus'>
    readonly sideNotes: FieldRef<"Profile", 'String'>
    readonly confirmationCode: FieldRef<"Profile", 'String'>
    readonly createdAt: FieldRef<"Profile", 'DateTime'>
    readonly updatedAt: FieldRef<"Profile", 'DateTime'>
    readonly isTemporaryPassword: FieldRef<"Profile", 'Boolean'>
    readonly deletedAt: FieldRef<"Profile", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Profile findUnique
   */
  export type ProfileFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findUniqueOrThrow
   */
  export type ProfileFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile findFirst
   */
  export type ProfileFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findFirstOrThrow
   */
  export type ProfileFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profile to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Profiles.
     */
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile findMany
   */
  export type ProfileFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter, which Profiles to fetch.
     */
    where?: ProfileWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Profiles to fetch.
     */
    orderBy?: ProfileOrderByWithRelationInput | ProfileOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Profiles.
     */
    cursor?: ProfileWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Profiles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Profiles.
     */
    skip?: number
    distinct?: ProfileScalarFieldEnum | ProfileScalarFieldEnum[]
  }

  /**
   * Profile create
   */
  export type ProfileCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to create a Profile.
     */
    data: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
  }

  /**
   * Profile createMany
   */
  export type ProfileCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Profiles.
     */
    data: ProfileCreateManyInput | ProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Profile createManyAndReturn
   */
  export type ProfileCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * The data used to create many Profiles.
     */
    data: ProfileCreateManyInput | ProfileCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Profile update
   */
  export type ProfileUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The data needed to update a Profile.
     */
    data: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
    /**
     * Choose, which Profile to update.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile updateMany
   */
  export type ProfileUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Profiles.
     */
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyInput>
    /**
     * Filter which Profiles to update
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to update.
     */
    limit?: number
  }

  /**
   * Profile updateManyAndReturn
   */
  export type ProfileUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * The data used to update Profiles.
     */
    data: XOR<ProfileUpdateManyMutationInput, ProfileUncheckedUpdateManyInput>
    /**
     * Filter which Profiles to update
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to update.
     */
    limit?: number
  }

  /**
   * Profile upsert
   */
  export type ProfileUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * The filter to search for the Profile to update in case it exists.
     */
    where: ProfileWhereUniqueInput
    /**
     * In case the Profile found by the `where` argument doesn't exist, create a new Profile with this data.
     */
    create: XOR<ProfileCreateInput, ProfileUncheckedCreateInput>
    /**
     * In case the Profile was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProfileUpdateInput, ProfileUncheckedUpdateInput>
  }

  /**
   * Profile delete
   */
  export type ProfileDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    /**
     * Filter which Profile to delete.
     */
    where: ProfileWhereUniqueInput
  }

  /**
   * Profile deleteMany
   */
  export type ProfileDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Profiles to delete
     */
    where?: ProfileWhereInput
    /**
     * Limit how many Profiles to delete.
     */
    limit?: number
  }

  /**
   * Profile.accounts
   */
  export type Profile$accountsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    cursor?: AccountWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Profile.createdAddresses
   */
  export type Profile$createdAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    where?: AddressWhereInput
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    cursor?: AddressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Profile.cateringRequests
   */
  export type Profile$cateringRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    where?: CateringRequestWhereInput
    orderBy?: CateringRequestOrderByWithRelationInput | CateringRequestOrderByWithRelationInput[]
    cursor?: CateringRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CateringRequestScalarFieldEnum | CateringRequestScalarFieldEnum[]
  }

  /**
   * Profile.driverDispatches
   */
  export type Profile$driverDispatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    where?: DispatchWhereInput
    orderBy?: DispatchOrderByWithRelationInput | DispatchOrderByWithRelationInput[]
    cursor?: DispatchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DispatchScalarFieldEnum | DispatchScalarFieldEnum[]
  }

  /**
   * Profile.userDispatches
   */
  export type Profile$userDispatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    where?: DispatchWhereInput
    orderBy?: DispatchOrderByWithRelationInput | DispatchOrderByWithRelationInput[]
    cursor?: DispatchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DispatchScalarFieldEnum | DispatchScalarFieldEnum[]
  }

  /**
   * Profile.fileUploads
   */
  export type Profile$fileUploadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    where?: FileUploadWhereInput
    orderBy?: FileUploadOrderByWithRelationInput | FileUploadOrderByWithRelationInput[]
    cursor?: FileUploadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FileUploadScalarFieldEnum | FileUploadScalarFieldEnum[]
  }

  /**
   * Profile.jobApplications
   */
  export type Profile$jobApplicationsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    where?: JobApplicationWhereInput
    orderBy?: JobApplicationOrderByWithRelationInput | JobApplicationOrderByWithRelationInput[]
    cursor?: JobApplicationWhereUniqueInput
    take?: number
    skip?: number
    distinct?: JobApplicationScalarFieldEnum | JobApplicationScalarFieldEnum[]
  }

  /**
   * Profile.onDemandRequests
   */
  export type Profile$onDemandRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    where?: OnDemandWhereInput
    orderBy?: OnDemandOrderByWithRelationInput | OnDemandOrderByWithRelationInput[]
    cursor?: OnDemandWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OnDemandScalarFieldEnum | OnDemandScalarFieldEnum[]
  }

  /**
   * Profile.sessions
   */
  export type Profile$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    cursor?: SessionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Profile.userAddresses
   */
  export type Profile$userAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    where?: UserAddressWhereInput
    orderBy?: UserAddressOrderByWithRelationInput | UserAddressOrderByWithRelationInput[]
    cursor?: UserAddressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserAddressScalarFieldEnum | UserAddressScalarFieldEnum[]
  }

  /**
   * Profile without action
   */
  export type ProfileDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
  }


  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountAvgAggregateOutputType = {
    expiresAt: number | null
  }

  export type AccountSumAggregateOutputType = {
    expiresAt: number | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refreshToken: string | null
    accessToken: string | null
    expiresAt: number | null
    tokenType: string | null
    scope: string | null
    idToken: string | null
    sessionState: string | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    type: string | null
    provider: string | null
    providerAccountId: string | null
    refreshToken: string | null
    accessToken: string | null
    expiresAt: number | null
    tokenType: string | null
    scope: string | null
    idToken: string | null
    sessionState: string | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    userId: number
    type: number
    provider: number
    providerAccountId: number
    refreshToken: number
    accessToken: number
    expiresAt: number
    tokenType: number
    scope: number
    idToken: number
    sessionState: number
    _all: number
  }


  export type AccountAvgAggregateInputType = {
    expiresAt?: true
  }

  export type AccountSumAggregateInputType = {
    expiresAt?: true
  }

  export type AccountMinAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refreshToken?: true
    accessToken?: true
    expiresAt?: true
    tokenType?: true
    scope?: true
    idToken?: true
    sessionState?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refreshToken?: true
    accessToken?: true
    expiresAt?: true
    tokenType?: true
    scope?: true
    idToken?: true
    sessionState?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    userId?: true
    type?: true
    provider?: true
    providerAccountId?: true
    refreshToken?: true
    accessToken?: true
    expiresAt?: true
    tokenType?: true
    scope?: true
    idToken?: true
    sessionState?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AccountAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AccountSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _avg?: AccountAvgAggregateInputType
    _sum?: AccountSumAggregateInputType
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refreshToken: string | null
    accessToken: string | null
    expiresAt: number | null
    tokenType: string | null
    scope: string | null
    idToken: string | null
    sessionState: string | null
    _count: AccountCountAggregateOutputType | null
    _avg: AccountAvgAggregateOutputType | null
    _sum: AccountSumAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refreshToken?: boolean
    accessToken?: boolean
    expiresAt?: boolean
    tokenType?: boolean
    scope?: boolean
    idToken?: boolean
    sessionState?: boolean
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refreshToken?: boolean
    accessToken?: boolean
    expiresAt?: boolean
    tokenType?: boolean
    scope?: boolean
    idToken?: boolean
    sessionState?: boolean
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refreshToken?: boolean
    accessToken?: boolean
    expiresAt?: boolean
    tokenType?: boolean
    scope?: boolean
    idToken?: boolean
    sessionState?: boolean
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["account"]>

  export type AccountSelectScalar = {
    id?: boolean
    userId?: boolean
    type?: boolean
    provider?: boolean
    providerAccountId?: boolean
    refreshToken?: boolean
    accessToken?: boolean
    expiresAt?: boolean
    tokenType?: boolean
    scope?: boolean
    idToken?: boolean
    sessionState?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "type" | "provider" | "providerAccountId" | "refreshToken" | "accessToken" | "expiresAt" | "tokenType" | "scope" | "idToken" | "sessionState", ExtArgs["result"]["account"]>
  export type AccountInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type AccountIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type AccountIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {
      user: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      type: string
      provider: string
      providerAccountId: string
      refreshToken: string | null
      accessToken: string | null
      expiresAt: number | null
      tokenType: string | null
      scope: string | null
      idToken: string | null
      sessionState: string | null
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts and returns the data updated in the database.
     * @param {AccountUpdateManyAndReturnArgs} args - Arguments to update many Accounts.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccountUpdateManyAndReturnArgs>(args: SelectSubset<T, AccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly userId: FieldRef<"Account", 'String'>
    readonly type: FieldRef<"Account", 'String'>
    readonly provider: FieldRef<"Account", 'String'>
    readonly providerAccountId: FieldRef<"Account", 'String'>
    readonly refreshToken: FieldRef<"Account", 'String'>
    readonly accessToken: FieldRef<"Account", 'String'>
    readonly expiresAt: FieldRef<"Account", 'Int'>
    readonly tokenType: FieldRef<"Account", 'String'>
    readonly scope: FieldRef<"Account", 'String'>
    readonly idToken: FieldRef<"Account", 'String'>
    readonly sessionState: FieldRef<"Account", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account updateManyAndReturn
   */
  export type AccountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to delete.
     */
    limit?: number
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AccountInclude<ExtArgs> | null
  }


  /**
   * Model Session
   */

  export type AggregateSession = {
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  export type SessionMinAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: string | null
    expires: Date | null
  }

  export type SessionMaxAggregateOutputType = {
    id: string | null
    sessionToken: string | null
    userId: string | null
    expires: Date | null
  }

  export type SessionCountAggregateOutputType = {
    id: number
    sessionToken: number
    userId: number
    expires: number
    _all: number
  }


  export type SessionMinAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
  }

  export type SessionMaxAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
  }

  export type SessionCountAggregateInputType = {
    id?: true
    sessionToken?: true
    userId?: true
    expires?: true
    _all?: true
  }

  export type SessionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Session to aggregate.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sessions
    **/
    _count?: true | SessionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionMaxAggregateInputType
  }

  export type GetSessionAggregateType<T extends SessionAggregateArgs> = {
        [P in keyof T & keyof AggregateSession]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSession[P]>
      : GetScalarType<T[P], AggregateSession[P]>
  }




  export type SessionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SessionWhereInput
    orderBy?: SessionOrderByWithAggregationInput | SessionOrderByWithAggregationInput[]
    by: SessionScalarFieldEnum[] | SessionScalarFieldEnum
    having?: SessionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionCountAggregateInputType | true
    _min?: SessionMinAggregateInputType
    _max?: SessionMaxAggregateInputType
  }

  export type SessionGroupByOutputType = {
    id: string
    sessionToken: string
    userId: string
    expires: Date
    _count: SessionCountAggregateOutputType | null
    _min: SessionMinAggregateOutputType | null
    _max: SessionMaxAggregateOutputType | null
  }

  type GetSessionGroupByPayload<T extends SessionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionGroupByOutputType[P]>
            : GetScalarType<T[P], SessionGroupByOutputType[P]>
        }
      >
    >


  export type SessionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["session"]>

  export type SessionSelectScalar = {
    id?: boolean
    sessionToken?: boolean
    userId?: boolean
    expires?: boolean
  }

  export type SessionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sessionToken" | "userId" | "expires", ExtArgs["result"]["session"]>
  export type SessionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type SessionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type SessionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $SessionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Session"
    objects: {
      user: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sessionToken: string
      userId: string
      expires: Date
    }, ExtArgs["result"]["session"]>
    composites: {}
  }

  type SessionGetPayload<S extends boolean | null | undefined | SessionDefaultArgs> = $Result.GetResult<Prisma.$SessionPayload, S>

  type SessionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<SessionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionCountAggregateInputType | true
    }

  export interface SessionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Session'], meta: { name: 'Session' } }
    /**
     * Find zero or one Session that matches the filter.
     * @param {SessionFindUniqueArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SessionFindUniqueArgs>(args: SelectSubset<T, SessionFindUniqueArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Session that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {SessionFindUniqueOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SessionFindUniqueOrThrowArgs>(args: SelectSubset<T, SessionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SessionFindFirstArgs>(args?: SelectSubset<T, SessionFindFirstArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Session that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindFirstOrThrowArgs} args - Arguments to find a Session
     * @example
     * // Get one Session
     * const session = await prisma.session.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SessionFindFirstOrThrowArgs>(args?: SelectSubset<T, SessionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.session.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.session.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionWithIdOnly = await prisma.session.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SessionFindManyArgs>(args?: SelectSubset<T, SessionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Session.
     * @param {SessionCreateArgs} args - Arguments to create a Session.
     * @example
     * // Create one Session
     * const Session = await prisma.session.create({
     *   data: {
     *     // ... data to create a Session
     *   }
     * })
     * 
     */
    create<T extends SessionCreateArgs>(args: SelectSubset<T, SessionCreateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {SessionCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SessionCreateManyArgs>(args?: SelectSubset<T, SessionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {SessionCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const session = await prisma.session.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends SessionCreateManyAndReturnArgs>(args?: SelectSubset<T, SessionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Session.
     * @param {SessionDeleteArgs} args - Arguments to delete one Session.
     * @example
     * // Delete one Session
     * const Session = await prisma.session.delete({
     *   where: {
     *     // ... filter to delete one Session
     *   }
     * })
     * 
     */
    delete<T extends SessionDeleteArgs>(args: SelectSubset<T, SessionDeleteArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Session.
     * @param {SessionUpdateArgs} args - Arguments to update one Session.
     * @example
     * // Update one Session
     * const session = await prisma.session.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SessionUpdateArgs>(args: SelectSubset<T, SessionUpdateArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {SessionDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.session.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SessionDeleteManyArgs>(args?: SelectSubset<T, SessionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SessionUpdateManyArgs>(args: SelectSubset<T, SessionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {SessionUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const session = await prisma.session.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `id`
     * const sessionWithIdOnly = await prisma.session.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends SessionUpdateManyAndReturnArgs>(args: SelectSubset<T, SessionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Session.
     * @param {SessionUpsertArgs} args - Arguments to update or create a Session.
     * @example
     * // Update or create a Session
     * const session = await prisma.session.upsert({
     *   create: {
     *     // ... data to create a Session
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Session we want to update
     *   }
     * })
     */
    upsert<T extends SessionUpsertArgs>(args: SelectSubset<T, SessionUpsertArgs<ExtArgs>>): Prisma__SessionClient<$Result.GetResult<Prisma.$SessionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.session.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends SessionCountArgs>(
      args?: Subset<T, SessionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionAggregateArgs>(args: Subset<T, SessionAggregateArgs>): Prisma.PrismaPromise<GetSessionAggregateType<T>>

    /**
     * Group by Session.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SessionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SessionGroupByArgs['orderBy'] }
        : { orderBy?: SessionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SessionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Session model
   */
  readonly fields: SessionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Session.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SessionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Session model
   */
  interface SessionFieldRefs {
    readonly id: FieldRef<"Session", 'String'>
    readonly sessionToken: FieldRef<"Session", 'String'>
    readonly userId: FieldRef<"Session", 'String'>
    readonly expires: FieldRef<"Session", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Session findUnique
   */
  export type SessionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findUniqueOrThrow
   */
  export type SessionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session findFirst
   */
  export type SessionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findFirstOrThrow
   */
  export type SessionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Session to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sessions.
     */
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session findMany
   */
  export type SessionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter, which Sessions to fetch.
     */
    where?: SessionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sessions to fetch.
     */
    orderBy?: SessionOrderByWithRelationInput | SessionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sessions.
     */
    cursor?: SessionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sessions.
     */
    skip?: number
    distinct?: SessionScalarFieldEnum | SessionScalarFieldEnum[]
  }

  /**
   * Session create
   */
  export type SessionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to create a Session.
     */
    data: XOR<SessionCreateInput, SessionUncheckedCreateInput>
  }

  /**
   * Session createMany
   */
  export type SessionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Session createManyAndReturn
   */
  export type SessionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to create many Sessions.
     */
    data: SessionCreateManyInput | SessionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session update
   */
  export type SessionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The data needed to update a Session.
     */
    data: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
    /**
     * Choose, which Session to update.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session updateMany
   */
  export type SessionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
  }

  /**
   * Session updateManyAndReturn
   */
  export type SessionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * The data used to update Sessions.
     */
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyInput>
    /**
     * Filter which Sessions to update
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Session upsert
   */
  export type SessionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * The filter to search for the Session to update in case it exists.
     */
    where: SessionWhereUniqueInput
    /**
     * In case the Session found by the `where` argument doesn't exist, create a new Session with this data.
     */
    create: XOR<SessionCreateInput, SessionUncheckedCreateInput>
    /**
     * In case the Session was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SessionUpdateInput, SessionUncheckedUpdateInput>
  }

  /**
   * Session delete
   */
  export type SessionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
    /**
     * Filter which Session to delete.
     */
    where: SessionWhereUniqueInput
  }

  /**
   * Session deleteMany
   */
  export type SessionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sessions to delete
     */
    where?: SessionWhereInput
    /**
     * Limit how many Sessions to delete.
     */
    limit?: number
  }

  /**
   * Session without action
   */
  export type SessionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Session
     */
    select?: SessionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Session
     */
    omit?: SessionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SessionInclude<ExtArgs> | null
  }


  /**
   * Model Address
   */

  export type AggregateAddress = {
    _count: AddressCountAggregateOutputType | null
    _avg: AddressAvgAggregateOutputType | null
    _sum: AddressSumAggregateOutputType | null
    _min: AddressMinAggregateOutputType | null
    _max: AddressMaxAggregateOutputType | null
  }

  export type AddressAvgAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type AddressSumAggregateOutputType = {
    latitude: number | null
    longitude: number | null
  }

  export type AddressMinAggregateOutputType = {
    id: string | null
    county: string | null
    street1: string | null
    street2: string | null
    city: string | null
    state: string | null
    zip: string | null
    createdAt: Date | null
    createdBy: string | null
    isRestaurant: boolean | null
    isShared: boolean | null
    locationNumber: string | null
    parkingLoading: string | null
    updatedAt: Date | null
    name: string | null
    latitude: number | null
    longitude: number | null
    deletedAt: Date | null
  }

  export type AddressMaxAggregateOutputType = {
    id: string | null
    county: string | null
    street1: string | null
    street2: string | null
    city: string | null
    state: string | null
    zip: string | null
    createdAt: Date | null
    createdBy: string | null
    isRestaurant: boolean | null
    isShared: boolean | null
    locationNumber: string | null
    parkingLoading: string | null
    updatedAt: Date | null
    name: string | null
    latitude: number | null
    longitude: number | null
    deletedAt: Date | null
  }

  export type AddressCountAggregateOutputType = {
    id: number
    county: number
    street1: number
    street2: number
    city: number
    state: number
    zip: number
    createdAt: number
    createdBy: number
    isRestaurant: number
    isShared: number
    locationNumber: number
    parkingLoading: number
    updatedAt: number
    name: number
    latitude: number
    longitude: number
    deletedAt: number
    _all: number
  }


  export type AddressAvgAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type AddressSumAggregateInputType = {
    latitude?: true
    longitude?: true
  }

  export type AddressMinAggregateInputType = {
    id?: true
    county?: true
    street1?: true
    street2?: true
    city?: true
    state?: true
    zip?: true
    createdAt?: true
    createdBy?: true
    isRestaurant?: true
    isShared?: true
    locationNumber?: true
    parkingLoading?: true
    updatedAt?: true
    name?: true
    latitude?: true
    longitude?: true
    deletedAt?: true
  }

  export type AddressMaxAggregateInputType = {
    id?: true
    county?: true
    street1?: true
    street2?: true
    city?: true
    state?: true
    zip?: true
    createdAt?: true
    createdBy?: true
    isRestaurant?: true
    isShared?: true
    locationNumber?: true
    parkingLoading?: true
    updatedAt?: true
    name?: true
    latitude?: true
    longitude?: true
    deletedAt?: true
  }

  export type AddressCountAggregateInputType = {
    id?: true
    county?: true
    street1?: true
    street2?: true
    city?: true
    state?: true
    zip?: true
    createdAt?: true
    createdBy?: true
    isRestaurant?: true
    isShared?: true
    locationNumber?: true
    parkingLoading?: true
    updatedAt?: true
    name?: true
    latitude?: true
    longitude?: true
    deletedAt?: true
    _all?: true
  }

  export type AddressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Address to aggregate.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Addresses
    **/
    _count?: true | AddressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AddressAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AddressSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AddressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AddressMaxAggregateInputType
  }

  export type GetAddressAggregateType<T extends AddressAggregateArgs> = {
        [P in keyof T & keyof AggregateAddress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAddress[P]>
      : GetScalarType<T[P], AggregateAddress[P]>
  }




  export type AddressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AddressWhereInput
    orderBy?: AddressOrderByWithAggregationInput | AddressOrderByWithAggregationInput[]
    by: AddressScalarFieldEnum[] | AddressScalarFieldEnum
    having?: AddressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AddressCountAggregateInputType | true
    _avg?: AddressAvgAggregateInputType
    _sum?: AddressSumAggregateInputType
    _min?: AddressMinAggregateInputType
    _max?: AddressMaxAggregateInputType
  }

  export type AddressGroupByOutputType = {
    id: string
    county: string | null
    street1: string
    street2: string | null
    city: string
    state: string
    zip: string
    createdAt: Date
    createdBy: string | null
    isRestaurant: boolean
    isShared: boolean
    locationNumber: string | null
    parkingLoading: string | null
    updatedAt: Date
    name: string | null
    latitude: number | null
    longitude: number | null
    deletedAt: Date | null
    _count: AddressCountAggregateOutputType | null
    _avg: AddressAvgAggregateOutputType | null
    _sum: AddressSumAggregateOutputType | null
    _min: AddressMinAggregateOutputType | null
    _max: AddressMaxAggregateOutputType | null
  }

  type GetAddressGroupByPayload<T extends AddressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AddressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AddressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AddressGroupByOutputType[P]>
            : GetScalarType<T[P], AddressGroupByOutputType[P]>
        }
      >
    >


  export type AddressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    county?: boolean
    street1?: boolean
    street2?: boolean
    city?: boolean
    state?: boolean
    zip?: boolean
    createdAt?: boolean
    createdBy?: boolean
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: boolean
    parkingLoading?: boolean
    updatedAt?: boolean
    name?: boolean
    latitude?: boolean
    longitude?: boolean
    deletedAt?: boolean
    creator?: boolean | Address$creatorArgs<ExtArgs>
    cateringDeliveryRequests?: boolean | Address$cateringDeliveryRequestsArgs<ExtArgs>
    cateringPickupRequests?: boolean | Address$cateringPickupRequestsArgs<ExtArgs>
    onDemandDeliveryRequests?: boolean | Address$onDemandDeliveryRequestsArgs<ExtArgs>
    onDemandPickupRequests?: boolean | Address$onDemandPickupRequestsArgs<ExtArgs>
    userAddresses?: boolean | Address$userAddressesArgs<ExtArgs>
    _count?: boolean | AddressCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["address"]>

  export type AddressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    county?: boolean
    street1?: boolean
    street2?: boolean
    city?: boolean
    state?: boolean
    zip?: boolean
    createdAt?: boolean
    createdBy?: boolean
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: boolean
    parkingLoading?: boolean
    updatedAt?: boolean
    name?: boolean
    latitude?: boolean
    longitude?: boolean
    deletedAt?: boolean
    creator?: boolean | Address$creatorArgs<ExtArgs>
  }, ExtArgs["result"]["address"]>

  export type AddressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    county?: boolean
    street1?: boolean
    street2?: boolean
    city?: boolean
    state?: boolean
    zip?: boolean
    createdAt?: boolean
    createdBy?: boolean
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: boolean
    parkingLoading?: boolean
    updatedAt?: boolean
    name?: boolean
    latitude?: boolean
    longitude?: boolean
    deletedAt?: boolean
    creator?: boolean | Address$creatorArgs<ExtArgs>
  }, ExtArgs["result"]["address"]>

  export type AddressSelectScalar = {
    id?: boolean
    county?: boolean
    street1?: boolean
    street2?: boolean
    city?: boolean
    state?: boolean
    zip?: boolean
    createdAt?: boolean
    createdBy?: boolean
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: boolean
    parkingLoading?: boolean
    updatedAt?: boolean
    name?: boolean
    latitude?: boolean
    longitude?: boolean
    deletedAt?: boolean
  }

  export type AddressOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "county" | "street1" | "street2" | "city" | "state" | "zip" | "createdAt" | "createdBy" | "isRestaurant" | "isShared" | "locationNumber" | "parkingLoading" | "updatedAt" | "name" | "latitude" | "longitude" | "deletedAt", ExtArgs["result"]["address"]>
  export type AddressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | Address$creatorArgs<ExtArgs>
    cateringDeliveryRequests?: boolean | Address$cateringDeliveryRequestsArgs<ExtArgs>
    cateringPickupRequests?: boolean | Address$cateringPickupRequestsArgs<ExtArgs>
    onDemandDeliveryRequests?: boolean | Address$onDemandDeliveryRequestsArgs<ExtArgs>
    onDemandPickupRequests?: boolean | Address$onDemandPickupRequestsArgs<ExtArgs>
    userAddresses?: boolean | Address$userAddressesArgs<ExtArgs>
    _count?: boolean | AddressCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AddressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | Address$creatorArgs<ExtArgs>
  }
  export type AddressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    creator?: boolean | Address$creatorArgs<ExtArgs>
  }

  export type $AddressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Address"
    objects: {
      creator: Prisma.$ProfilePayload<ExtArgs> | null
      cateringDeliveryRequests: Prisma.$CateringRequestPayload<ExtArgs>[]
      cateringPickupRequests: Prisma.$CateringRequestPayload<ExtArgs>[]
      onDemandDeliveryRequests: Prisma.$OnDemandPayload<ExtArgs>[]
      onDemandPickupRequests: Prisma.$OnDemandPayload<ExtArgs>[]
      userAddresses: Prisma.$UserAddressPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      county: string | null
      street1: string
      street2: string | null
      city: string
      state: string
      zip: string
      createdAt: Date
      createdBy: string | null
      isRestaurant: boolean
      isShared: boolean
      locationNumber: string | null
      parkingLoading: string | null
      updatedAt: Date
      name: string | null
      latitude: number | null
      longitude: number | null
      deletedAt: Date | null
    }, ExtArgs["result"]["address"]>
    composites: {}
  }

  type AddressGetPayload<S extends boolean | null | undefined | AddressDefaultArgs> = $Result.GetResult<Prisma.$AddressPayload, S>

  type AddressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AddressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AddressCountAggregateInputType | true
    }

  export interface AddressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Address'], meta: { name: 'Address' } }
    /**
     * Find zero or one Address that matches the filter.
     * @param {AddressFindUniqueArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AddressFindUniqueArgs>(args: SelectSubset<T, AddressFindUniqueArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Address that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AddressFindUniqueOrThrowArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AddressFindUniqueOrThrowArgs>(args: SelectSubset<T, AddressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Address that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressFindFirstArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AddressFindFirstArgs>(args?: SelectSubset<T, AddressFindFirstArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Address that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressFindFirstOrThrowArgs} args - Arguments to find a Address
     * @example
     * // Get one Address
     * const address = await prisma.address.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AddressFindFirstOrThrowArgs>(args?: SelectSubset<T, AddressFindFirstOrThrowArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Addresses
     * const addresses = await prisma.address.findMany()
     * 
     * // Get first 10 Addresses
     * const addresses = await prisma.address.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const addressWithIdOnly = await prisma.address.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AddressFindManyArgs>(args?: SelectSubset<T, AddressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Address.
     * @param {AddressCreateArgs} args - Arguments to create a Address.
     * @example
     * // Create one Address
     * const Address = await prisma.address.create({
     *   data: {
     *     // ... data to create a Address
     *   }
     * })
     * 
     */
    create<T extends AddressCreateArgs>(args: SelectSubset<T, AddressCreateArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Addresses.
     * @param {AddressCreateManyArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const address = await prisma.address.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AddressCreateManyArgs>(args?: SelectSubset<T, AddressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Addresses and returns the data saved in the database.
     * @param {AddressCreateManyAndReturnArgs} args - Arguments to create many Addresses.
     * @example
     * // Create many Addresses
     * const address = await prisma.address.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Addresses and only return the `id`
     * const addressWithIdOnly = await prisma.address.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AddressCreateManyAndReturnArgs>(args?: SelectSubset<T, AddressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Address.
     * @param {AddressDeleteArgs} args - Arguments to delete one Address.
     * @example
     * // Delete one Address
     * const Address = await prisma.address.delete({
     *   where: {
     *     // ... filter to delete one Address
     *   }
     * })
     * 
     */
    delete<T extends AddressDeleteArgs>(args: SelectSubset<T, AddressDeleteArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Address.
     * @param {AddressUpdateArgs} args - Arguments to update one Address.
     * @example
     * // Update one Address
     * const address = await prisma.address.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AddressUpdateArgs>(args: SelectSubset<T, AddressUpdateArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Addresses.
     * @param {AddressDeleteManyArgs} args - Arguments to filter Addresses to delete.
     * @example
     * // Delete a few Addresses
     * const { count } = await prisma.address.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AddressDeleteManyArgs>(args?: SelectSubset<T, AddressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Addresses
     * const address = await prisma.address.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AddressUpdateManyArgs>(args: SelectSubset<T, AddressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Addresses and returns the data updated in the database.
     * @param {AddressUpdateManyAndReturnArgs} args - Arguments to update many Addresses.
     * @example
     * // Update many Addresses
     * const address = await prisma.address.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Addresses and only return the `id`
     * const addressWithIdOnly = await prisma.address.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AddressUpdateManyAndReturnArgs>(args: SelectSubset<T, AddressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Address.
     * @param {AddressUpsertArgs} args - Arguments to update or create a Address.
     * @example
     * // Update or create a Address
     * const address = await prisma.address.upsert({
     *   create: {
     *     // ... data to create a Address
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Address we want to update
     *   }
     * })
     */
    upsert<T extends AddressUpsertArgs>(args: SelectSubset<T, AddressUpsertArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressCountArgs} args - Arguments to filter Addresses to count.
     * @example
     * // Count the number of Addresses
     * const count = await prisma.address.count({
     *   where: {
     *     // ... the filter for the Addresses we want to count
     *   }
     * })
    **/
    count<T extends AddressCountArgs>(
      args?: Subset<T, AddressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AddressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Address.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AddressAggregateArgs>(args: Subset<T, AddressAggregateArgs>): Prisma.PrismaPromise<GetAddressAggregateType<T>>

    /**
     * Group by Address.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AddressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AddressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AddressGroupByArgs['orderBy'] }
        : { orderBy?: AddressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AddressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAddressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Address model
   */
  readonly fields: AddressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Address.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AddressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    creator<T extends Address$creatorArgs<ExtArgs> = {}>(args?: Subset<T, Address$creatorArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    cateringDeliveryRequests<T extends Address$cateringDeliveryRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Address$cateringDeliveryRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    cateringPickupRequests<T extends Address$cateringPickupRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Address$cateringPickupRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    onDemandDeliveryRequests<T extends Address$onDemandDeliveryRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Address$onDemandDeliveryRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    onDemandPickupRequests<T extends Address$onDemandPickupRequestsArgs<ExtArgs> = {}>(args?: Subset<T, Address$onDemandPickupRequestsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    userAddresses<T extends Address$userAddressesArgs<ExtArgs> = {}>(args?: Subset<T, Address$userAddressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Address model
   */
  interface AddressFieldRefs {
    readonly id: FieldRef<"Address", 'String'>
    readonly county: FieldRef<"Address", 'String'>
    readonly street1: FieldRef<"Address", 'String'>
    readonly street2: FieldRef<"Address", 'String'>
    readonly city: FieldRef<"Address", 'String'>
    readonly state: FieldRef<"Address", 'String'>
    readonly zip: FieldRef<"Address", 'String'>
    readonly createdAt: FieldRef<"Address", 'DateTime'>
    readonly createdBy: FieldRef<"Address", 'String'>
    readonly isRestaurant: FieldRef<"Address", 'Boolean'>
    readonly isShared: FieldRef<"Address", 'Boolean'>
    readonly locationNumber: FieldRef<"Address", 'String'>
    readonly parkingLoading: FieldRef<"Address", 'String'>
    readonly updatedAt: FieldRef<"Address", 'DateTime'>
    readonly name: FieldRef<"Address", 'String'>
    readonly latitude: FieldRef<"Address", 'Float'>
    readonly longitude: FieldRef<"Address", 'Float'>
    readonly deletedAt: FieldRef<"Address", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Address findUnique
   */
  export type AddressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address findUniqueOrThrow
   */
  export type AddressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address findFirst
   */
  export type AddressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Addresses.
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Addresses.
     */
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Address findFirstOrThrow
   */
  export type AddressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Address to fetch.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Addresses.
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Addresses.
     */
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Address findMany
   */
  export type AddressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter, which Addresses to fetch.
     */
    where?: AddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Addresses to fetch.
     */
    orderBy?: AddressOrderByWithRelationInput | AddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Addresses.
     */
    cursor?: AddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Addresses.
     */
    skip?: number
    distinct?: AddressScalarFieldEnum | AddressScalarFieldEnum[]
  }

  /**
   * Address create
   */
  export type AddressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * The data needed to create a Address.
     */
    data: XOR<AddressCreateInput, AddressUncheckedCreateInput>
  }

  /**
   * Address createMany
   */
  export type AddressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Addresses.
     */
    data: AddressCreateManyInput | AddressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Address createManyAndReturn
   */
  export type AddressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * The data used to create many Addresses.
     */
    data: AddressCreateManyInput | AddressCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Address update
   */
  export type AddressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * The data needed to update a Address.
     */
    data: XOR<AddressUpdateInput, AddressUncheckedUpdateInput>
    /**
     * Choose, which Address to update.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address updateMany
   */
  export type AddressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Addresses.
     */
    data: XOR<AddressUpdateManyMutationInput, AddressUncheckedUpdateManyInput>
    /**
     * Filter which Addresses to update
     */
    where?: AddressWhereInput
    /**
     * Limit how many Addresses to update.
     */
    limit?: number
  }

  /**
   * Address updateManyAndReturn
   */
  export type AddressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * The data used to update Addresses.
     */
    data: XOR<AddressUpdateManyMutationInput, AddressUncheckedUpdateManyInput>
    /**
     * Filter which Addresses to update
     */
    where?: AddressWhereInput
    /**
     * Limit how many Addresses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Address upsert
   */
  export type AddressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * The filter to search for the Address to update in case it exists.
     */
    where: AddressWhereUniqueInput
    /**
     * In case the Address found by the `where` argument doesn't exist, create a new Address with this data.
     */
    create: XOR<AddressCreateInput, AddressUncheckedCreateInput>
    /**
     * In case the Address was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AddressUpdateInput, AddressUncheckedUpdateInput>
  }

  /**
   * Address delete
   */
  export type AddressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
    /**
     * Filter which Address to delete.
     */
    where: AddressWhereUniqueInput
  }

  /**
   * Address deleteMany
   */
  export type AddressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Addresses to delete
     */
    where?: AddressWhereInput
    /**
     * Limit how many Addresses to delete.
     */
    limit?: number
  }

  /**
   * Address.creator
   */
  export type Address$creatorArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
  }

  /**
   * Address.cateringDeliveryRequests
   */
  export type Address$cateringDeliveryRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    where?: CateringRequestWhereInput
    orderBy?: CateringRequestOrderByWithRelationInput | CateringRequestOrderByWithRelationInput[]
    cursor?: CateringRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CateringRequestScalarFieldEnum | CateringRequestScalarFieldEnum[]
  }

  /**
   * Address.cateringPickupRequests
   */
  export type Address$cateringPickupRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    where?: CateringRequestWhereInput
    orderBy?: CateringRequestOrderByWithRelationInput | CateringRequestOrderByWithRelationInput[]
    cursor?: CateringRequestWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CateringRequestScalarFieldEnum | CateringRequestScalarFieldEnum[]
  }

  /**
   * Address.onDemandDeliveryRequests
   */
  export type Address$onDemandDeliveryRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    where?: OnDemandWhereInput
    orderBy?: OnDemandOrderByWithRelationInput | OnDemandOrderByWithRelationInput[]
    cursor?: OnDemandWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OnDemandScalarFieldEnum | OnDemandScalarFieldEnum[]
  }

  /**
   * Address.onDemandPickupRequests
   */
  export type Address$onDemandPickupRequestsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    where?: OnDemandWhereInput
    orderBy?: OnDemandOrderByWithRelationInput | OnDemandOrderByWithRelationInput[]
    cursor?: OnDemandWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OnDemandScalarFieldEnum | OnDemandScalarFieldEnum[]
  }

  /**
   * Address.userAddresses
   */
  export type Address$userAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    where?: UserAddressWhereInput
    orderBy?: UserAddressOrderByWithRelationInput | UserAddressOrderByWithRelationInput[]
    cursor?: UserAddressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserAddressScalarFieldEnum | UserAddressScalarFieldEnum[]
  }

  /**
   * Address without action
   */
  export type AddressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Address
     */
    select?: AddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Address
     */
    omit?: AddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AddressInclude<ExtArgs> | null
  }


  /**
   * Model CateringRequest
   */

  export type AggregateCateringRequest = {
    _count: CateringRequestCountAggregateOutputType | null
    _avg: CateringRequestAvgAggregateOutputType | null
    _sum: CateringRequestSumAggregateOutputType | null
    _min: CateringRequestMinAggregateOutputType | null
    _max: CateringRequestMaxAggregateOutputType | null
  }

  export type CateringRequestAvgAggregateOutputType = {
    headcount: number | null
    hoursNeeded: number | null
    numberOfHosts: number | null
    orderTotal: Decimal | null
    tip: Decimal | null
  }

  export type CateringRequestSumAggregateOutputType = {
    headcount: number | null
    hoursNeeded: number | null
    numberOfHosts: number | null
    orderTotal: Decimal | null
    tip: Decimal | null
  }

  export type CateringRequestMinAggregateOutputType = {
    id: string | null
    guid: string | null
    userId: string | null
    pickupAddressId: string | null
    deliveryAddressId: string | null
    brokerage: string | null
    orderNumber: string | null
    pickupDateTime: Date | null
    arrivalDateTime: Date | null
    completeDateTime: Date | null
    headcount: number | null
    needHost: $Enums.CateringNeedHost | null
    hoursNeeded: number | null
    numberOfHosts: number | null
    clientAttention: string | null
    pickupNotes: string | null
    specialNotes: string | null
    image: string | null
    status: $Enums.CateringStatus | null
    orderTotal: Decimal | null
    tip: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    driverStatus: $Enums.DriverStatus | null
    deletedAt: Date | null
  }

  export type CateringRequestMaxAggregateOutputType = {
    id: string | null
    guid: string | null
    userId: string | null
    pickupAddressId: string | null
    deliveryAddressId: string | null
    brokerage: string | null
    orderNumber: string | null
    pickupDateTime: Date | null
    arrivalDateTime: Date | null
    completeDateTime: Date | null
    headcount: number | null
    needHost: $Enums.CateringNeedHost | null
    hoursNeeded: number | null
    numberOfHosts: number | null
    clientAttention: string | null
    pickupNotes: string | null
    specialNotes: string | null
    image: string | null
    status: $Enums.CateringStatus | null
    orderTotal: Decimal | null
    tip: Decimal | null
    createdAt: Date | null
    updatedAt: Date | null
    driverStatus: $Enums.DriverStatus | null
    deletedAt: Date | null
  }

  export type CateringRequestCountAggregateOutputType = {
    id: number
    guid: number
    userId: number
    pickupAddressId: number
    deliveryAddressId: number
    brokerage: number
    orderNumber: number
    pickupDateTime: number
    arrivalDateTime: number
    completeDateTime: number
    headcount: number
    needHost: number
    hoursNeeded: number
    numberOfHosts: number
    clientAttention: number
    pickupNotes: number
    specialNotes: number
    image: number
    status: number
    orderTotal: number
    tip: number
    createdAt: number
    updatedAt: number
    driverStatus: number
    deletedAt: number
    _all: number
  }


  export type CateringRequestAvgAggregateInputType = {
    headcount?: true
    hoursNeeded?: true
    numberOfHosts?: true
    orderTotal?: true
    tip?: true
  }

  export type CateringRequestSumAggregateInputType = {
    headcount?: true
    hoursNeeded?: true
    numberOfHosts?: true
    orderTotal?: true
    tip?: true
  }

  export type CateringRequestMinAggregateInputType = {
    id?: true
    guid?: true
    userId?: true
    pickupAddressId?: true
    deliveryAddressId?: true
    brokerage?: true
    orderNumber?: true
    pickupDateTime?: true
    arrivalDateTime?: true
    completeDateTime?: true
    headcount?: true
    needHost?: true
    hoursNeeded?: true
    numberOfHosts?: true
    clientAttention?: true
    pickupNotes?: true
    specialNotes?: true
    image?: true
    status?: true
    orderTotal?: true
    tip?: true
    createdAt?: true
    updatedAt?: true
    driverStatus?: true
    deletedAt?: true
  }

  export type CateringRequestMaxAggregateInputType = {
    id?: true
    guid?: true
    userId?: true
    pickupAddressId?: true
    deliveryAddressId?: true
    brokerage?: true
    orderNumber?: true
    pickupDateTime?: true
    arrivalDateTime?: true
    completeDateTime?: true
    headcount?: true
    needHost?: true
    hoursNeeded?: true
    numberOfHosts?: true
    clientAttention?: true
    pickupNotes?: true
    specialNotes?: true
    image?: true
    status?: true
    orderTotal?: true
    tip?: true
    createdAt?: true
    updatedAt?: true
    driverStatus?: true
    deletedAt?: true
  }

  export type CateringRequestCountAggregateInputType = {
    id?: true
    guid?: true
    userId?: true
    pickupAddressId?: true
    deliveryAddressId?: true
    brokerage?: true
    orderNumber?: true
    pickupDateTime?: true
    arrivalDateTime?: true
    completeDateTime?: true
    headcount?: true
    needHost?: true
    hoursNeeded?: true
    numberOfHosts?: true
    clientAttention?: true
    pickupNotes?: true
    specialNotes?: true
    image?: true
    status?: true
    orderTotal?: true
    tip?: true
    createdAt?: true
    updatedAt?: true
    driverStatus?: true
    deletedAt?: true
    _all?: true
  }

  export type CateringRequestAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CateringRequest to aggregate.
     */
    where?: CateringRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CateringRequests to fetch.
     */
    orderBy?: CateringRequestOrderByWithRelationInput | CateringRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CateringRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CateringRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CateringRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CateringRequests
    **/
    _count?: true | CateringRequestCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CateringRequestAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CateringRequestSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CateringRequestMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CateringRequestMaxAggregateInputType
  }

  export type GetCateringRequestAggregateType<T extends CateringRequestAggregateArgs> = {
        [P in keyof T & keyof AggregateCateringRequest]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCateringRequest[P]>
      : GetScalarType<T[P], AggregateCateringRequest[P]>
  }




  export type CateringRequestGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CateringRequestWhereInput
    orderBy?: CateringRequestOrderByWithAggregationInput | CateringRequestOrderByWithAggregationInput[]
    by: CateringRequestScalarFieldEnum[] | CateringRequestScalarFieldEnum
    having?: CateringRequestScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CateringRequestCountAggregateInputType | true
    _avg?: CateringRequestAvgAggregateInputType
    _sum?: CateringRequestSumAggregateInputType
    _min?: CateringRequestMinAggregateInputType
    _max?: CateringRequestMaxAggregateInputType
  }

  export type CateringRequestGroupByOutputType = {
    id: string
    guid: string | null
    userId: string
    pickupAddressId: string
    deliveryAddressId: string
    brokerage: string | null
    orderNumber: string
    pickupDateTime: Date | null
    arrivalDateTime: Date | null
    completeDateTime: Date | null
    headcount: number | null
    needHost: $Enums.CateringNeedHost
    hoursNeeded: number | null
    numberOfHosts: number | null
    clientAttention: string | null
    pickupNotes: string | null
    specialNotes: string | null
    image: string | null
    status: $Enums.CateringStatus
    orderTotal: Decimal | null
    tip: Decimal | null
    createdAt: Date
    updatedAt: Date
    driverStatus: $Enums.DriverStatus | null
    deletedAt: Date | null
    _count: CateringRequestCountAggregateOutputType | null
    _avg: CateringRequestAvgAggregateOutputType | null
    _sum: CateringRequestSumAggregateOutputType | null
    _min: CateringRequestMinAggregateOutputType | null
    _max: CateringRequestMaxAggregateOutputType | null
  }

  type GetCateringRequestGroupByPayload<T extends CateringRequestGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CateringRequestGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CateringRequestGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CateringRequestGroupByOutputType[P]>
            : GetScalarType<T[P], CateringRequestGroupByOutputType[P]>
        }
      >
    >


  export type CateringRequestSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    guid?: boolean
    userId?: boolean
    pickupAddressId?: boolean
    deliveryAddressId?: boolean
    brokerage?: boolean
    orderNumber?: boolean
    pickupDateTime?: boolean
    arrivalDateTime?: boolean
    completeDateTime?: boolean
    headcount?: boolean
    needHost?: boolean
    hoursNeeded?: boolean
    numberOfHosts?: boolean
    clientAttention?: boolean
    pickupNotes?: boolean
    specialNotes?: boolean
    image?: boolean
    status?: boolean
    orderTotal?: boolean
    tip?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    driverStatus?: boolean
    deletedAt?: boolean
    deliveryAddress?: boolean | AddressDefaultArgs<ExtArgs>
    pickupAddress?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    dispatches?: boolean | CateringRequest$dispatchesArgs<ExtArgs>
    fileUploads?: boolean | CateringRequest$fileUploadsArgs<ExtArgs>
    _count?: boolean | CateringRequestCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cateringRequest"]>

  export type CateringRequestSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    guid?: boolean
    userId?: boolean
    pickupAddressId?: boolean
    deliveryAddressId?: boolean
    brokerage?: boolean
    orderNumber?: boolean
    pickupDateTime?: boolean
    arrivalDateTime?: boolean
    completeDateTime?: boolean
    headcount?: boolean
    needHost?: boolean
    hoursNeeded?: boolean
    numberOfHosts?: boolean
    clientAttention?: boolean
    pickupNotes?: boolean
    specialNotes?: boolean
    image?: boolean
    status?: boolean
    orderTotal?: boolean
    tip?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    driverStatus?: boolean
    deletedAt?: boolean
    deliveryAddress?: boolean | AddressDefaultArgs<ExtArgs>
    pickupAddress?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cateringRequest"]>

  export type CateringRequestSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    guid?: boolean
    userId?: boolean
    pickupAddressId?: boolean
    deliveryAddressId?: boolean
    brokerage?: boolean
    orderNumber?: boolean
    pickupDateTime?: boolean
    arrivalDateTime?: boolean
    completeDateTime?: boolean
    headcount?: boolean
    needHost?: boolean
    hoursNeeded?: boolean
    numberOfHosts?: boolean
    clientAttention?: boolean
    pickupNotes?: boolean
    specialNotes?: boolean
    image?: boolean
    status?: boolean
    orderTotal?: boolean
    tip?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    driverStatus?: boolean
    deletedAt?: boolean
    deliveryAddress?: boolean | AddressDefaultArgs<ExtArgs>
    pickupAddress?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cateringRequest"]>

  export type CateringRequestSelectScalar = {
    id?: boolean
    guid?: boolean
    userId?: boolean
    pickupAddressId?: boolean
    deliveryAddressId?: boolean
    brokerage?: boolean
    orderNumber?: boolean
    pickupDateTime?: boolean
    arrivalDateTime?: boolean
    completeDateTime?: boolean
    headcount?: boolean
    needHost?: boolean
    hoursNeeded?: boolean
    numberOfHosts?: boolean
    clientAttention?: boolean
    pickupNotes?: boolean
    specialNotes?: boolean
    image?: boolean
    status?: boolean
    orderTotal?: boolean
    tip?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    driverStatus?: boolean
    deletedAt?: boolean
  }

  export type CateringRequestOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "guid" | "userId" | "pickupAddressId" | "deliveryAddressId" | "brokerage" | "orderNumber" | "pickupDateTime" | "arrivalDateTime" | "completeDateTime" | "headcount" | "needHost" | "hoursNeeded" | "numberOfHosts" | "clientAttention" | "pickupNotes" | "specialNotes" | "image" | "status" | "orderTotal" | "tip" | "createdAt" | "updatedAt" | "driverStatus" | "deletedAt", ExtArgs["result"]["cateringRequest"]>
  export type CateringRequestInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveryAddress?: boolean | AddressDefaultArgs<ExtArgs>
    pickupAddress?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    dispatches?: boolean | CateringRequest$dispatchesArgs<ExtArgs>
    fileUploads?: boolean | CateringRequest$fileUploadsArgs<ExtArgs>
    _count?: boolean | CateringRequestCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CateringRequestIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveryAddress?: boolean | AddressDefaultArgs<ExtArgs>
    pickupAddress?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type CateringRequestIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveryAddress?: boolean | AddressDefaultArgs<ExtArgs>
    pickupAddress?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $CateringRequestPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CateringRequest"
    objects: {
      deliveryAddress: Prisma.$AddressPayload<ExtArgs>
      pickupAddress: Prisma.$AddressPayload<ExtArgs>
      user: Prisma.$ProfilePayload<ExtArgs>
      dispatches: Prisma.$DispatchPayload<ExtArgs>[]
      fileUploads: Prisma.$FileUploadPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      guid: string | null
      userId: string
      pickupAddressId: string
      deliveryAddressId: string
      brokerage: string | null
      orderNumber: string
      pickupDateTime: Date | null
      arrivalDateTime: Date | null
      completeDateTime: Date | null
      headcount: number | null
      needHost: $Enums.CateringNeedHost
      hoursNeeded: number | null
      numberOfHosts: number | null
      clientAttention: string | null
      pickupNotes: string | null
      specialNotes: string | null
      image: string | null
      status: $Enums.CateringStatus
      orderTotal: Prisma.Decimal | null
      tip: Prisma.Decimal | null
      createdAt: Date
      updatedAt: Date
      driverStatus: $Enums.DriverStatus | null
      deletedAt: Date | null
    }, ExtArgs["result"]["cateringRequest"]>
    composites: {}
  }

  type CateringRequestGetPayload<S extends boolean | null | undefined | CateringRequestDefaultArgs> = $Result.GetResult<Prisma.$CateringRequestPayload, S>

  type CateringRequestCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CateringRequestFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CateringRequestCountAggregateInputType | true
    }

  export interface CateringRequestDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CateringRequest'], meta: { name: 'CateringRequest' } }
    /**
     * Find zero or one CateringRequest that matches the filter.
     * @param {CateringRequestFindUniqueArgs} args - Arguments to find a CateringRequest
     * @example
     * // Get one CateringRequest
     * const cateringRequest = await prisma.cateringRequest.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CateringRequestFindUniqueArgs>(args: SelectSubset<T, CateringRequestFindUniqueArgs<ExtArgs>>): Prisma__CateringRequestClient<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one CateringRequest that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CateringRequestFindUniqueOrThrowArgs} args - Arguments to find a CateringRequest
     * @example
     * // Get one CateringRequest
     * const cateringRequest = await prisma.cateringRequest.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CateringRequestFindUniqueOrThrowArgs>(args: SelectSubset<T, CateringRequestFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CateringRequestClient<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CateringRequest that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CateringRequestFindFirstArgs} args - Arguments to find a CateringRequest
     * @example
     * // Get one CateringRequest
     * const cateringRequest = await prisma.cateringRequest.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CateringRequestFindFirstArgs>(args?: SelectSubset<T, CateringRequestFindFirstArgs<ExtArgs>>): Prisma__CateringRequestClient<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first CateringRequest that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CateringRequestFindFirstOrThrowArgs} args - Arguments to find a CateringRequest
     * @example
     * // Get one CateringRequest
     * const cateringRequest = await prisma.cateringRequest.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CateringRequestFindFirstOrThrowArgs>(args?: SelectSubset<T, CateringRequestFindFirstOrThrowArgs<ExtArgs>>): Prisma__CateringRequestClient<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more CateringRequests that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CateringRequestFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CateringRequests
     * const cateringRequests = await prisma.cateringRequest.findMany()
     * 
     * // Get first 10 CateringRequests
     * const cateringRequests = await prisma.cateringRequest.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cateringRequestWithIdOnly = await prisma.cateringRequest.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CateringRequestFindManyArgs>(args?: SelectSubset<T, CateringRequestFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a CateringRequest.
     * @param {CateringRequestCreateArgs} args - Arguments to create a CateringRequest.
     * @example
     * // Create one CateringRequest
     * const CateringRequest = await prisma.cateringRequest.create({
     *   data: {
     *     // ... data to create a CateringRequest
     *   }
     * })
     * 
     */
    create<T extends CateringRequestCreateArgs>(args: SelectSubset<T, CateringRequestCreateArgs<ExtArgs>>): Prisma__CateringRequestClient<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many CateringRequests.
     * @param {CateringRequestCreateManyArgs} args - Arguments to create many CateringRequests.
     * @example
     * // Create many CateringRequests
     * const cateringRequest = await prisma.cateringRequest.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CateringRequestCreateManyArgs>(args?: SelectSubset<T, CateringRequestCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many CateringRequests and returns the data saved in the database.
     * @param {CateringRequestCreateManyAndReturnArgs} args - Arguments to create many CateringRequests.
     * @example
     * // Create many CateringRequests
     * const cateringRequest = await prisma.cateringRequest.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many CateringRequests and only return the `id`
     * const cateringRequestWithIdOnly = await prisma.cateringRequest.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CateringRequestCreateManyAndReturnArgs>(args?: SelectSubset<T, CateringRequestCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a CateringRequest.
     * @param {CateringRequestDeleteArgs} args - Arguments to delete one CateringRequest.
     * @example
     * // Delete one CateringRequest
     * const CateringRequest = await prisma.cateringRequest.delete({
     *   where: {
     *     // ... filter to delete one CateringRequest
     *   }
     * })
     * 
     */
    delete<T extends CateringRequestDeleteArgs>(args: SelectSubset<T, CateringRequestDeleteArgs<ExtArgs>>): Prisma__CateringRequestClient<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one CateringRequest.
     * @param {CateringRequestUpdateArgs} args - Arguments to update one CateringRequest.
     * @example
     * // Update one CateringRequest
     * const cateringRequest = await prisma.cateringRequest.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CateringRequestUpdateArgs>(args: SelectSubset<T, CateringRequestUpdateArgs<ExtArgs>>): Prisma__CateringRequestClient<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more CateringRequests.
     * @param {CateringRequestDeleteManyArgs} args - Arguments to filter CateringRequests to delete.
     * @example
     * // Delete a few CateringRequests
     * const { count } = await prisma.cateringRequest.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CateringRequestDeleteManyArgs>(args?: SelectSubset<T, CateringRequestDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CateringRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CateringRequestUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CateringRequests
     * const cateringRequest = await prisma.cateringRequest.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CateringRequestUpdateManyArgs>(args: SelectSubset<T, CateringRequestUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CateringRequests and returns the data updated in the database.
     * @param {CateringRequestUpdateManyAndReturnArgs} args - Arguments to update many CateringRequests.
     * @example
     * // Update many CateringRequests
     * const cateringRequest = await prisma.cateringRequest.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more CateringRequests and only return the `id`
     * const cateringRequestWithIdOnly = await prisma.cateringRequest.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CateringRequestUpdateManyAndReturnArgs>(args: SelectSubset<T, CateringRequestUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one CateringRequest.
     * @param {CateringRequestUpsertArgs} args - Arguments to update or create a CateringRequest.
     * @example
     * // Update or create a CateringRequest
     * const cateringRequest = await prisma.cateringRequest.upsert({
     *   create: {
     *     // ... data to create a CateringRequest
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CateringRequest we want to update
     *   }
     * })
     */
    upsert<T extends CateringRequestUpsertArgs>(args: SelectSubset<T, CateringRequestUpsertArgs<ExtArgs>>): Prisma__CateringRequestClient<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of CateringRequests.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CateringRequestCountArgs} args - Arguments to filter CateringRequests to count.
     * @example
     * // Count the number of CateringRequests
     * const count = await prisma.cateringRequest.count({
     *   where: {
     *     // ... the filter for the CateringRequests we want to count
     *   }
     * })
    **/
    count<T extends CateringRequestCountArgs>(
      args?: Subset<T, CateringRequestCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CateringRequestCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CateringRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CateringRequestAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CateringRequestAggregateArgs>(args: Subset<T, CateringRequestAggregateArgs>): Prisma.PrismaPromise<GetCateringRequestAggregateType<T>>

    /**
     * Group by CateringRequest.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CateringRequestGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CateringRequestGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CateringRequestGroupByArgs['orderBy'] }
        : { orderBy?: CateringRequestGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CateringRequestGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCateringRequestGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CateringRequest model
   */
  readonly fields: CateringRequestFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CateringRequest.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CateringRequestClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    deliveryAddress<T extends AddressDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AddressDefaultArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    pickupAddress<T extends AddressDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AddressDefaultArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    dispatches<T extends CateringRequest$dispatchesArgs<ExtArgs> = {}>(args?: Subset<T, CateringRequest$dispatchesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    fileUploads<T extends CateringRequest$fileUploadsArgs<ExtArgs> = {}>(args?: Subset<T, CateringRequest$fileUploadsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CateringRequest model
   */
  interface CateringRequestFieldRefs {
    readonly id: FieldRef<"CateringRequest", 'String'>
    readonly guid: FieldRef<"CateringRequest", 'String'>
    readonly userId: FieldRef<"CateringRequest", 'String'>
    readonly pickupAddressId: FieldRef<"CateringRequest", 'String'>
    readonly deliveryAddressId: FieldRef<"CateringRequest", 'String'>
    readonly brokerage: FieldRef<"CateringRequest", 'String'>
    readonly orderNumber: FieldRef<"CateringRequest", 'String'>
    readonly pickupDateTime: FieldRef<"CateringRequest", 'DateTime'>
    readonly arrivalDateTime: FieldRef<"CateringRequest", 'DateTime'>
    readonly completeDateTime: FieldRef<"CateringRequest", 'DateTime'>
    readonly headcount: FieldRef<"CateringRequest", 'Int'>
    readonly needHost: FieldRef<"CateringRequest", 'CateringNeedHost'>
    readonly hoursNeeded: FieldRef<"CateringRequest", 'Float'>
    readonly numberOfHosts: FieldRef<"CateringRequest", 'Int'>
    readonly clientAttention: FieldRef<"CateringRequest", 'String'>
    readonly pickupNotes: FieldRef<"CateringRequest", 'String'>
    readonly specialNotes: FieldRef<"CateringRequest", 'String'>
    readonly image: FieldRef<"CateringRequest", 'String'>
    readonly status: FieldRef<"CateringRequest", 'CateringStatus'>
    readonly orderTotal: FieldRef<"CateringRequest", 'Decimal'>
    readonly tip: FieldRef<"CateringRequest", 'Decimal'>
    readonly createdAt: FieldRef<"CateringRequest", 'DateTime'>
    readonly updatedAt: FieldRef<"CateringRequest", 'DateTime'>
    readonly driverStatus: FieldRef<"CateringRequest", 'DriverStatus'>
    readonly deletedAt: FieldRef<"CateringRequest", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * CateringRequest findUnique
   */
  export type CateringRequestFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    /**
     * Filter, which CateringRequest to fetch.
     */
    where: CateringRequestWhereUniqueInput
  }

  /**
   * CateringRequest findUniqueOrThrow
   */
  export type CateringRequestFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    /**
     * Filter, which CateringRequest to fetch.
     */
    where: CateringRequestWhereUniqueInput
  }

  /**
   * CateringRequest findFirst
   */
  export type CateringRequestFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    /**
     * Filter, which CateringRequest to fetch.
     */
    where?: CateringRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CateringRequests to fetch.
     */
    orderBy?: CateringRequestOrderByWithRelationInput | CateringRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CateringRequests.
     */
    cursor?: CateringRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CateringRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CateringRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CateringRequests.
     */
    distinct?: CateringRequestScalarFieldEnum | CateringRequestScalarFieldEnum[]
  }

  /**
   * CateringRequest findFirstOrThrow
   */
  export type CateringRequestFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    /**
     * Filter, which CateringRequest to fetch.
     */
    where?: CateringRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CateringRequests to fetch.
     */
    orderBy?: CateringRequestOrderByWithRelationInput | CateringRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CateringRequests.
     */
    cursor?: CateringRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CateringRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CateringRequests.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CateringRequests.
     */
    distinct?: CateringRequestScalarFieldEnum | CateringRequestScalarFieldEnum[]
  }

  /**
   * CateringRequest findMany
   */
  export type CateringRequestFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    /**
     * Filter, which CateringRequests to fetch.
     */
    where?: CateringRequestWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CateringRequests to fetch.
     */
    orderBy?: CateringRequestOrderByWithRelationInput | CateringRequestOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CateringRequests.
     */
    cursor?: CateringRequestWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CateringRequests from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CateringRequests.
     */
    skip?: number
    distinct?: CateringRequestScalarFieldEnum | CateringRequestScalarFieldEnum[]
  }

  /**
   * CateringRequest create
   */
  export type CateringRequestCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    /**
     * The data needed to create a CateringRequest.
     */
    data: XOR<CateringRequestCreateInput, CateringRequestUncheckedCreateInput>
  }

  /**
   * CateringRequest createMany
   */
  export type CateringRequestCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CateringRequests.
     */
    data: CateringRequestCreateManyInput | CateringRequestCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CateringRequest createManyAndReturn
   */
  export type CateringRequestCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * The data used to create many CateringRequests.
     */
    data: CateringRequestCreateManyInput | CateringRequestCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * CateringRequest update
   */
  export type CateringRequestUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    /**
     * The data needed to update a CateringRequest.
     */
    data: XOR<CateringRequestUpdateInput, CateringRequestUncheckedUpdateInput>
    /**
     * Choose, which CateringRequest to update.
     */
    where: CateringRequestWhereUniqueInput
  }

  /**
   * CateringRequest updateMany
   */
  export type CateringRequestUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CateringRequests.
     */
    data: XOR<CateringRequestUpdateManyMutationInput, CateringRequestUncheckedUpdateManyInput>
    /**
     * Filter which CateringRequests to update
     */
    where?: CateringRequestWhereInput
    /**
     * Limit how many CateringRequests to update.
     */
    limit?: number
  }

  /**
   * CateringRequest updateManyAndReturn
   */
  export type CateringRequestUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * The data used to update CateringRequests.
     */
    data: XOR<CateringRequestUpdateManyMutationInput, CateringRequestUncheckedUpdateManyInput>
    /**
     * Filter which CateringRequests to update
     */
    where?: CateringRequestWhereInput
    /**
     * Limit how many CateringRequests to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * CateringRequest upsert
   */
  export type CateringRequestUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    /**
     * The filter to search for the CateringRequest to update in case it exists.
     */
    where: CateringRequestWhereUniqueInput
    /**
     * In case the CateringRequest found by the `where` argument doesn't exist, create a new CateringRequest with this data.
     */
    create: XOR<CateringRequestCreateInput, CateringRequestUncheckedCreateInput>
    /**
     * In case the CateringRequest was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CateringRequestUpdateInput, CateringRequestUncheckedUpdateInput>
  }

  /**
   * CateringRequest delete
   */
  export type CateringRequestDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    /**
     * Filter which CateringRequest to delete.
     */
    where: CateringRequestWhereUniqueInput
  }

  /**
   * CateringRequest deleteMany
   */
  export type CateringRequestDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CateringRequests to delete
     */
    where?: CateringRequestWhereInput
    /**
     * Limit how many CateringRequests to delete.
     */
    limit?: number
  }

  /**
   * CateringRequest.dispatches
   */
  export type CateringRequest$dispatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    where?: DispatchWhereInput
    orderBy?: DispatchOrderByWithRelationInput | DispatchOrderByWithRelationInput[]
    cursor?: DispatchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DispatchScalarFieldEnum | DispatchScalarFieldEnum[]
  }

  /**
   * CateringRequest.fileUploads
   */
  export type CateringRequest$fileUploadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    where?: FileUploadWhereInput
    orderBy?: FileUploadOrderByWithRelationInput | FileUploadOrderByWithRelationInput[]
    cursor?: FileUploadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FileUploadScalarFieldEnum | FileUploadScalarFieldEnum[]
  }

  /**
   * CateringRequest without action
   */
  export type CateringRequestDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
  }


  /**
   * Model Dispatch
   */

  export type AggregateDispatch = {
    _count: DispatchCountAggregateOutputType | null
    _min: DispatchMinAggregateOutputType | null
    _max: DispatchMaxAggregateOutputType | null
  }

  export type DispatchMinAggregateOutputType = {
    id: string | null
    cateringRequestId: string | null
    createdAt: Date | null
    driverId: string | null
    onDemandId: string | null
    updatedAt: Date | null
    userId: string | null
  }

  export type DispatchMaxAggregateOutputType = {
    id: string | null
    cateringRequestId: string | null
    createdAt: Date | null
    driverId: string | null
    onDemandId: string | null
    updatedAt: Date | null
    userId: string | null
  }

  export type DispatchCountAggregateOutputType = {
    id: number
    cateringRequestId: number
    createdAt: number
    driverId: number
    onDemandId: number
    updatedAt: number
    userId: number
    _all: number
  }


  export type DispatchMinAggregateInputType = {
    id?: true
    cateringRequestId?: true
    createdAt?: true
    driverId?: true
    onDemandId?: true
    updatedAt?: true
    userId?: true
  }

  export type DispatchMaxAggregateInputType = {
    id?: true
    cateringRequestId?: true
    createdAt?: true
    driverId?: true
    onDemandId?: true
    updatedAt?: true
    userId?: true
  }

  export type DispatchCountAggregateInputType = {
    id?: true
    cateringRequestId?: true
    createdAt?: true
    driverId?: true
    onDemandId?: true
    updatedAt?: true
    userId?: true
    _all?: true
  }

  export type DispatchAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Dispatch to aggregate.
     */
    where?: DispatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Dispatches to fetch.
     */
    orderBy?: DispatchOrderByWithRelationInput | DispatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: DispatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Dispatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Dispatches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Dispatches
    **/
    _count?: true | DispatchCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: DispatchMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: DispatchMaxAggregateInputType
  }

  export type GetDispatchAggregateType<T extends DispatchAggregateArgs> = {
        [P in keyof T & keyof AggregateDispatch]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateDispatch[P]>
      : GetScalarType<T[P], AggregateDispatch[P]>
  }




  export type DispatchGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: DispatchWhereInput
    orderBy?: DispatchOrderByWithAggregationInput | DispatchOrderByWithAggregationInput[]
    by: DispatchScalarFieldEnum[] | DispatchScalarFieldEnum
    having?: DispatchScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: DispatchCountAggregateInputType | true
    _min?: DispatchMinAggregateInputType
    _max?: DispatchMaxAggregateInputType
  }

  export type DispatchGroupByOutputType = {
    id: string
    cateringRequestId: string | null
    createdAt: Date
    driverId: string | null
    onDemandId: string | null
    updatedAt: Date
    userId: string | null
    _count: DispatchCountAggregateOutputType | null
    _min: DispatchMinAggregateOutputType | null
    _max: DispatchMaxAggregateOutputType | null
  }

  type GetDispatchGroupByPayload<T extends DispatchGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<DispatchGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof DispatchGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], DispatchGroupByOutputType[P]>
            : GetScalarType<T[P], DispatchGroupByOutputType[P]>
        }
      >
    >


  export type DispatchSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cateringRequestId?: boolean
    createdAt?: boolean
    driverId?: boolean
    onDemandId?: boolean
    updatedAt?: boolean
    userId?: boolean
    cateringRequest?: boolean | Dispatch$cateringRequestArgs<ExtArgs>
    driver?: boolean | Dispatch$driverArgs<ExtArgs>
    onDemand?: boolean | Dispatch$onDemandArgs<ExtArgs>
    user?: boolean | Dispatch$userArgs<ExtArgs>
  }, ExtArgs["result"]["dispatch"]>

  export type DispatchSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cateringRequestId?: boolean
    createdAt?: boolean
    driverId?: boolean
    onDemandId?: boolean
    updatedAt?: boolean
    userId?: boolean
    cateringRequest?: boolean | Dispatch$cateringRequestArgs<ExtArgs>
    driver?: boolean | Dispatch$driverArgs<ExtArgs>
    onDemand?: boolean | Dispatch$onDemandArgs<ExtArgs>
    user?: boolean | Dispatch$userArgs<ExtArgs>
  }, ExtArgs["result"]["dispatch"]>

  export type DispatchSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cateringRequestId?: boolean
    createdAt?: boolean
    driverId?: boolean
    onDemandId?: boolean
    updatedAt?: boolean
    userId?: boolean
    cateringRequest?: boolean | Dispatch$cateringRequestArgs<ExtArgs>
    driver?: boolean | Dispatch$driverArgs<ExtArgs>
    onDemand?: boolean | Dispatch$onDemandArgs<ExtArgs>
    user?: boolean | Dispatch$userArgs<ExtArgs>
  }, ExtArgs["result"]["dispatch"]>

  export type DispatchSelectScalar = {
    id?: boolean
    cateringRequestId?: boolean
    createdAt?: boolean
    driverId?: boolean
    onDemandId?: boolean
    updatedAt?: boolean
    userId?: boolean
  }

  export type DispatchOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "cateringRequestId" | "createdAt" | "driverId" | "onDemandId" | "updatedAt" | "userId", ExtArgs["result"]["dispatch"]>
  export type DispatchInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cateringRequest?: boolean | Dispatch$cateringRequestArgs<ExtArgs>
    driver?: boolean | Dispatch$driverArgs<ExtArgs>
    onDemand?: boolean | Dispatch$onDemandArgs<ExtArgs>
    user?: boolean | Dispatch$userArgs<ExtArgs>
  }
  export type DispatchIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cateringRequest?: boolean | Dispatch$cateringRequestArgs<ExtArgs>
    driver?: boolean | Dispatch$driverArgs<ExtArgs>
    onDemand?: boolean | Dispatch$onDemandArgs<ExtArgs>
    user?: boolean | Dispatch$userArgs<ExtArgs>
  }
  export type DispatchIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cateringRequest?: boolean | Dispatch$cateringRequestArgs<ExtArgs>
    driver?: boolean | Dispatch$driverArgs<ExtArgs>
    onDemand?: boolean | Dispatch$onDemandArgs<ExtArgs>
    user?: boolean | Dispatch$userArgs<ExtArgs>
  }

  export type $DispatchPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Dispatch"
    objects: {
      cateringRequest: Prisma.$CateringRequestPayload<ExtArgs> | null
      driver: Prisma.$ProfilePayload<ExtArgs> | null
      onDemand: Prisma.$OnDemandPayload<ExtArgs> | null
      user: Prisma.$ProfilePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      cateringRequestId: string | null
      createdAt: Date
      driverId: string | null
      onDemandId: string | null
      updatedAt: Date
      userId: string | null
    }, ExtArgs["result"]["dispatch"]>
    composites: {}
  }

  type DispatchGetPayload<S extends boolean | null | undefined | DispatchDefaultArgs> = $Result.GetResult<Prisma.$DispatchPayload, S>

  type DispatchCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<DispatchFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: DispatchCountAggregateInputType | true
    }

  export interface DispatchDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Dispatch'], meta: { name: 'Dispatch' } }
    /**
     * Find zero or one Dispatch that matches the filter.
     * @param {DispatchFindUniqueArgs} args - Arguments to find a Dispatch
     * @example
     * // Get one Dispatch
     * const dispatch = await prisma.dispatch.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends DispatchFindUniqueArgs>(args: SelectSubset<T, DispatchFindUniqueArgs<ExtArgs>>): Prisma__DispatchClient<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Dispatch that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {DispatchFindUniqueOrThrowArgs} args - Arguments to find a Dispatch
     * @example
     * // Get one Dispatch
     * const dispatch = await prisma.dispatch.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends DispatchFindUniqueOrThrowArgs>(args: SelectSubset<T, DispatchFindUniqueOrThrowArgs<ExtArgs>>): Prisma__DispatchClient<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Dispatch that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DispatchFindFirstArgs} args - Arguments to find a Dispatch
     * @example
     * // Get one Dispatch
     * const dispatch = await prisma.dispatch.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends DispatchFindFirstArgs>(args?: SelectSubset<T, DispatchFindFirstArgs<ExtArgs>>): Prisma__DispatchClient<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Dispatch that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DispatchFindFirstOrThrowArgs} args - Arguments to find a Dispatch
     * @example
     * // Get one Dispatch
     * const dispatch = await prisma.dispatch.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends DispatchFindFirstOrThrowArgs>(args?: SelectSubset<T, DispatchFindFirstOrThrowArgs<ExtArgs>>): Prisma__DispatchClient<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Dispatches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DispatchFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Dispatches
     * const dispatches = await prisma.dispatch.findMany()
     * 
     * // Get first 10 Dispatches
     * const dispatches = await prisma.dispatch.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const dispatchWithIdOnly = await prisma.dispatch.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends DispatchFindManyArgs>(args?: SelectSubset<T, DispatchFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Dispatch.
     * @param {DispatchCreateArgs} args - Arguments to create a Dispatch.
     * @example
     * // Create one Dispatch
     * const Dispatch = await prisma.dispatch.create({
     *   data: {
     *     // ... data to create a Dispatch
     *   }
     * })
     * 
     */
    create<T extends DispatchCreateArgs>(args: SelectSubset<T, DispatchCreateArgs<ExtArgs>>): Prisma__DispatchClient<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Dispatches.
     * @param {DispatchCreateManyArgs} args - Arguments to create many Dispatches.
     * @example
     * // Create many Dispatches
     * const dispatch = await prisma.dispatch.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends DispatchCreateManyArgs>(args?: SelectSubset<T, DispatchCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Dispatches and returns the data saved in the database.
     * @param {DispatchCreateManyAndReturnArgs} args - Arguments to create many Dispatches.
     * @example
     * // Create many Dispatches
     * const dispatch = await prisma.dispatch.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Dispatches and only return the `id`
     * const dispatchWithIdOnly = await prisma.dispatch.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends DispatchCreateManyAndReturnArgs>(args?: SelectSubset<T, DispatchCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Dispatch.
     * @param {DispatchDeleteArgs} args - Arguments to delete one Dispatch.
     * @example
     * // Delete one Dispatch
     * const Dispatch = await prisma.dispatch.delete({
     *   where: {
     *     // ... filter to delete one Dispatch
     *   }
     * })
     * 
     */
    delete<T extends DispatchDeleteArgs>(args: SelectSubset<T, DispatchDeleteArgs<ExtArgs>>): Prisma__DispatchClient<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Dispatch.
     * @param {DispatchUpdateArgs} args - Arguments to update one Dispatch.
     * @example
     * // Update one Dispatch
     * const dispatch = await prisma.dispatch.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends DispatchUpdateArgs>(args: SelectSubset<T, DispatchUpdateArgs<ExtArgs>>): Prisma__DispatchClient<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Dispatches.
     * @param {DispatchDeleteManyArgs} args - Arguments to filter Dispatches to delete.
     * @example
     * // Delete a few Dispatches
     * const { count } = await prisma.dispatch.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends DispatchDeleteManyArgs>(args?: SelectSubset<T, DispatchDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dispatches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DispatchUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Dispatches
     * const dispatch = await prisma.dispatch.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends DispatchUpdateManyArgs>(args: SelectSubset<T, DispatchUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Dispatches and returns the data updated in the database.
     * @param {DispatchUpdateManyAndReturnArgs} args - Arguments to update many Dispatches.
     * @example
     * // Update many Dispatches
     * const dispatch = await prisma.dispatch.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Dispatches and only return the `id`
     * const dispatchWithIdOnly = await prisma.dispatch.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends DispatchUpdateManyAndReturnArgs>(args: SelectSubset<T, DispatchUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Dispatch.
     * @param {DispatchUpsertArgs} args - Arguments to update or create a Dispatch.
     * @example
     * // Update or create a Dispatch
     * const dispatch = await prisma.dispatch.upsert({
     *   create: {
     *     // ... data to create a Dispatch
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Dispatch we want to update
     *   }
     * })
     */
    upsert<T extends DispatchUpsertArgs>(args: SelectSubset<T, DispatchUpsertArgs<ExtArgs>>): Prisma__DispatchClient<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Dispatches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DispatchCountArgs} args - Arguments to filter Dispatches to count.
     * @example
     * // Count the number of Dispatches
     * const count = await prisma.dispatch.count({
     *   where: {
     *     // ... the filter for the Dispatches we want to count
     *   }
     * })
    **/
    count<T extends DispatchCountArgs>(
      args?: Subset<T, DispatchCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], DispatchCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Dispatch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DispatchAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends DispatchAggregateArgs>(args: Subset<T, DispatchAggregateArgs>): Prisma.PrismaPromise<GetDispatchAggregateType<T>>

    /**
     * Group by Dispatch.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {DispatchGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends DispatchGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: DispatchGroupByArgs['orderBy'] }
        : { orderBy?: DispatchGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, DispatchGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetDispatchGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Dispatch model
   */
  readonly fields: DispatchFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Dispatch.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__DispatchClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cateringRequest<T extends Dispatch$cateringRequestArgs<ExtArgs> = {}>(args?: Subset<T, Dispatch$cateringRequestArgs<ExtArgs>>): Prisma__CateringRequestClient<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    driver<T extends Dispatch$driverArgs<ExtArgs> = {}>(args?: Subset<T, Dispatch$driverArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    onDemand<T extends Dispatch$onDemandArgs<ExtArgs> = {}>(args?: Subset<T, Dispatch$onDemandArgs<ExtArgs>>): Prisma__OnDemandClient<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends Dispatch$userArgs<ExtArgs> = {}>(args?: Subset<T, Dispatch$userArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Dispatch model
   */
  interface DispatchFieldRefs {
    readonly id: FieldRef<"Dispatch", 'String'>
    readonly cateringRequestId: FieldRef<"Dispatch", 'String'>
    readonly createdAt: FieldRef<"Dispatch", 'DateTime'>
    readonly driverId: FieldRef<"Dispatch", 'String'>
    readonly onDemandId: FieldRef<"Dispatch", 'String'>
    readonly updatedAt: FieldRef<"Dispatch", 'DateTime'>
    readonly userId: FieldRef<"Dispatch", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Dispatch findUnique
   */
  export type DispatchFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    /**
     * Filter, which Dispatch to fetch.
     */
    where: DispatchWhereUniqueInput
  }

  /**
   * Dispatch findUniqueOrThrow
   */
  export type DispatchFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    /**
     * Filter, which Dispatch to fetch.
     */
    where: DispatchWhereUniqueInput
  }

  /**
   * Dispatch findFirst
   */
  export type DispatchFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    /**
     * Filter, which Dispatch to fetch.
     */
    where?: DispatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Dispatches to fetch.
     */
    orderBy?: DispatchOrderByWithRelationInput | DispatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Dispatches.
     */
    cursor?: DispatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Dispatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Dispatches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Dispatches.
     */
    distinct?: DispatchScalarFieldEnum | DispatchScalarFieldEnum[]
  }

  /**
   * Dispatch findFirstOrThrow
   */
  export type DispatchFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    /**
     * Filter, which Dispatch to fetch.
     */
    where?: DispatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Dispatches to fetch.
     */
    orderBy?: DispatchOrderByWithRelationInput | DispatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Dispatches.
     */
    cursor?: DispatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Dispatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Dispatches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Dispatches.
     */
    distinct?: DispatchScalarFieldEnum | DispatchScalarFieldEnum[]
  }

  /**
   * Dispatch findMany
   */
  export type DispatchFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    /**
     * Filter, which Dispatches to fetch.
     */
    where?: DispatchWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Dispatches to fetch.
     */
    orderBy?: DispatchOrderByWithRelationInput | DispatchOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Dispatches.
     */
    cursor?: DispatchWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Dispatches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Dispatches.
     */
    skip?: number
    distinct?: DispatchScalarFieldEnum | DispatchScalarFieldEnum[]
  }

  /**
   * Dispatch create
   */
  export type DispatchCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    /**
     * The data needed to create a Dispatch.
     */
    data: XOR<DispatchCreateInput, DispatchUncheckedCreateInput>
  }

  /**
   * Dispatch createMany
   */
  export type DispatchCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Dispatches.
     */
    data: DispatchCreateManyInput | DispatchCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Dispatch createManyAndReturn
   */
  export type DispatchCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * The data used to create many Dispatches.
     */
    data: DispatchCreateManyInput | DispatchCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Dispatch update
   */
  export type DispatchUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    /**
     * The data needed to update a Dispatch.
     */
    data: XOR<DispatchUpdateInput, DispatchUncheckedUpdateInput>
    /**
     * Choose, which Dispatch to update.
     */
    where: DispatchWhereUniqueInput
  }

  /**
   * Dispatch updateMany
   */
  export type DispatchUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Dispatches.
     */
    data: XOR<DispatchUpdateManyMutationInput, DispatchUncheckedUpdateManyInput>
    /**
     * Filter which Dispatches to update
     */
    where?: DispatchWhereInput
    /**
     * Limit how many Dispatches to update.
     */
    limit?: number
  }

  /**
   * Dispatch updateManyAndReturn
   */
  export type DispatchUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * The data used to update Dispatches.
     */
    data: XOR<DispatchUpdateManyMutationInput, DispatchUncheckedUpdateManyInput>
    /**
     * Filter which Dispatches to update
     */
    where?: DispatchWhereInput
    /**
     * Limit how many Dispatches to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Dispatch upsert
   */
  export type DispatchUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    /**
     * The filter to search for the Dispatch to update in case it exists.
     */
    where: DispatchWhereUniqueInput
    /**
     * In case the Dispatch found by the `where` argument doesn't exist, create a new Dispatch with this data.
     */
    create: XOR<DispatchCreateInput, DispatchUncheckedCreateInput>
    /**
     * In case the Dispatch was found with the provided `where` argument, update it with this data.
     */
    update: XOR<DispatchUpdateInput, DispatchUncheckedUpdateInput>
  }

  /**
   * Dispatch delete
   */
  export type DispatchDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    /**
     * Filter which Dispatch to delete.
     */
    where: DispatchWhereUniqueInput
  }

  /**
   * Dispatch deleteMany
   */
  export type DispatchDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Dispatches to delete
     */
    where?: DispatchWhereInput
    /**
     * Limit how many Dispatches to delete.
     */
    limit?: number
  }

  /**
   * Dispatch.cateringRequest
   */
  export type Dispatch$cateringRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    where?: CateringRequestWhereInput
  }

  /**
   * Dispatch.driver
   */
  export type Dispatch$driverArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
  }

  /**
   * Dispatch.onDemand
   */
  export type Dispatch$onDemandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    where?: OnDemandWhereInput
  }

  /**
   * Dispatch.user
   */
  export type Dispatch$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
  }

  /**
   * Dispatch without action
   */
  export type DispatchDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
  }


  /**
   * Model FileUpload
   */

  export type AggregateFileUpload = {
    _count: FileUploadCountAggregateOutputType | null
    _avg: FileUploadAvgAggregateOutputType | null
    _sum: FileUploadSumAggregateOutputType | null
    _min: FileUploadMinAggregateOutputType | null
    _max: FileUploadMaxAggregateOutputType | null
  }

  export type FileUploadAvgAggregateOutputType = {
    fileSize: number | null
  }

  export type FileUploadSumAggregateOutputType = {
    fileSize: number | null
  }

  export type FileUploadMinAggregateOutputType = {
    id: string | null
    userId: string | null
    fileName: string | null
    fileType: string | null
    fileSize: number | null
    fileUrl: string | null
    uploadedAt: Date | null
    updatedAt: Date | null
    cateringRequestId: string | null
    onDemandId: string | null
    jobApplicationId: string | null
    category: string | null
    isTemporary: boolean | null
  }

  export type FileUploadMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    fileName: string | null
    fileType: string | null
    fileSize: number | null
    fileUrl: string | null
    uploadedAt: Date | null
    updatedAt: Date | null
    cateringRequestId: string | null
    onDemandId: string | null
    jobApplicationId: string | null
    category: string | null
    isTemporary: boolean | null
  }

  export type FileUploadCountAggregateOutputType = {
    id: number
    userId: number
    fileName: number
    fileType: number
    fileSize: number
    fileUrl: number
    uploadedAt: number
    updatedAt: number
    cateringRequestId: number
    onDemandId: number
    jobApplicationId: number
    category: number
    isTemporary: number
    _all: number
  }


  export type FileUploadAvgAggregateInputType = {
    fileSize?: true
  }

  export type FileUploadSumAggregateInputType = {
    fileSize?: true
  }

  export type FileUploadMinAggregateInputType = {
    id?: true
    userId?: true
    fileName?: true
    fileType?: true
    fileSize?: true
    fileUrl?: true
    uploadedAt?: true
    updatedAt?: true
    cateringRequestId?: true
    onDemandId?: true
    jobApplicationId?: true
    category?: true
    isTemporary?: true
  }

  export type FileUploadMaxAggregateInputType = {
    id?: true
    userId?: true
    fileName?: true
    fileType?: true
    fileSize?: true
    fileUrl?: true
    uploadedAt?: true
    updatedAt?: true
    cateringRequestId?: true
    onDemandId?: true
    jobApplicationId?: true
    category?: true
    isTemporary?: true
  }

  export type FileUploadCountAggregateInputType = {
    id?: true
    userId?: true
    fileName?: true
    fileType?: true
    fileSize?: true
    fileUrl?: true
    uploadedAt?: true
    updatedAt?: true
    cateringRequestId?: true
    onDemandId?: true
    jobApplicationId?: true
    category?: true
    isTemporary?: true
    _all?: true
  }

  export type FileUploadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FileUpload to aggregate.
     */
    where?: FileUploadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FileUploads to fetch.
     */
    orderBy?: FileUploadOrderByWithRelationInput | FileUploadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FileUploadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FileUploads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FileUploads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FileUploads
    **/
    _count?: true | FileUploadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FileUploadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FileUploadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FileUploadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FileUploadMaxAggregateInputType
  }

  export type GetFileUploadAggregateType<T extends FileUploadAggregateArgs> = {
        [P in keyof T & keyof AggregateFileUpload]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFileUpload[P]>
      : GetScalarType<T[P], AggregateFileUpload[P]>
  }




  export type FileUploadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FileUploadWhereInput
    orderBy?: FileUploadOrderByWithAggregationInput | FileUploadOrderByWithAggregationInput[]
    by: FileUploadScalarFieldEnum[] | FileUploadScalarFieldEnum
    having?: FileUploadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FileUploadCountAggregateInputType | true
    _avg?: FileUploadAvgAggregateInputType
    _sum?: FileUploadSumAggregateInputType
    _min?: FileUploadMinAggregateInputType
    _max?: FileUploadMaxAggregateInputType
  }

  export type FileUploadGroupByOutputType = {
    id: string
    userId: string | null
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt: Date
    updatedAt: Date
    cateringRequestId: string | null
    onDemandId: string | null
    jobApplicationId: string | null
    category: string | null
    isTemporary: boolean
    _count: FileUploadCountAggregateOutputType | null
    _avg: FileUploadAvgAggregateOutputType | null
    _sum: FileUploadSumAggregateOutputType | null
    _min: FileUploadMinAggregateOutputType | null
    _max: FileUploadMaxAggregateOutputType | null
  }

  type GetFileUploadGroupByPayload<T extends FileUploadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FileUploadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FileUploadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FileUploadGroupByOutputType[P]>
            : GetScalarType<T[P], FileUploadGroupByOutputType[P]>
        }
      >
    >


  export type FileUploadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    fileName?: boolean
    fileType?: boolean
    fileSize?: boolean
    fileUrl?: boolean
    uploadedAt?: boolean
    updatedAt?: boolean
    cateringRequestId?: boolean
    onDemandId?: boolean
    jobApplicationId?: boolean
    category?: boolean
    isTemporary?: boolean
    cateringRequest?: boolean | FileUpload$cateringRequestArgs<ExtArgs>
    jobApplication?: boolean | FileUpload$jobApplicationArgs<ExtArgs>
    onDemand?: boolean | FileUpload$onDemandArgs<ExtArgs>
    user?: boolean | FileUpload$userArgs<ExtArgs>
  }, ExtArgs["result"]["fileUpload"]>

  export type FileUploadSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    fileName?: boolean
    fileType?: boolean
    fileSize?: boolean
    fileUrl?: boolean
    uploadedAt?: boolean
    updatedAt?: boolean
    cateringRequestId?: boolean
    onDemandId?: boolean
    jobApplicationId?: boolean
    category?: boolean
    isTemporary?: boolean
    cateringRequest?: boolean | FileUpload$cateringRequestArgs<ExtArgs>
    jobApplication?: boolean | FileUpload$jobApplicationArgs<ExtArgs>
    onDemand?: boolean | FileUpload$onDemandArgs<ExtArgs>
    user?: boolean | FileUpload$userArgs<ExtArgs>
  }, ExtArgs["result"]["fileUpload"]>

  export type FileUploadSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    fileName?: boolean
    fileType?: boolean
    fileSize?: boolean
    fileUrl?: boolean
    uploadedAt?: boolean
    updatedAt?: boolean
    cateringRequestId?: boolean
    onDemandId?: boolean
    jobApplicationId?: boolean
    category?: boolean
    isTemporary?: boolean
    cateringRequest?: boolean | FileUpload$cateringRequestArgs<ExtArgs>
    jobApplication?: boolean | FileUpload$jobApplicationArgs<ExtArgs>
    onDemand?: boolean | FileUpload$onDemandArgs<ExtArgs>
    user?: boolean | FileUpload$userArgs<ExtArgs>
  }, ExtArgs["result"]["fileUpload"]>

  export type FileUploadSelectScalar = {
    id?: boolean
    userId?: boolean
    fileName?: boolean
    fileType?: boolean
    fileSize?: boolean
    fileUrl?: boolean
    uploadedAt?: boolean
    updatedAt?: boolean
    cateringRequestId?: boolean
    onDemandId?: boolean
    jobApplicationId?: boolean
    category?: boolean
    isTemporary?: boolean
  }

  export type FileUploadOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "fileName" | "fileType" | "fileSize" | "fileUrl" | "uploadedAt" | "updatedAt" | "cateringRequestId" | "onDemandId" | "jobApplicationId" | "category" | "isTemporary", ExtArgs["result"]["fileUpload"]>
  export type FileUploadInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cateringRequest?: boolean | FileUpload$cateringRequestArgs<ExtArgs>
    jobApplication?: boolean | FileUpload$jobApplicationArgs<ExtArgs>
    onDemand?: boolean | FileUpload$onDemandArgs<ExtArgs>
    user?: boolean | FileUpload$userArgs<ExtArgs>
  }
  export type FileUploadIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cateringRequest?: boolean | FileUpload$cateringRequestArgs<ExtArgs>
    jobApplication?: boolean | FileUpload$jobApplicationArgs<ExtArgs>
    onDemand?: boolean | FileUpload$onDemandArgs<ExtArgs>
    user?: boolean | FileUpload$userArgs<ExtArgs>
  }
  export type FileUploadIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cateringRequest?: boolean | FileUpload$cateringRequestArgs<ExtArgs>
    jobApplication?: boolean | FileUpload$jobApplicationArgs<ExtArgs>
    onDemand?: boolean | FileUpload$onDemandArgs<ExtArgs>
    user?: boolean | FileUpload$userArgs<ExtArgs>
  }

  export type $FileUploadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FileUpload"
    objects: {
      cateringRequest: Prisma.$CateringRequestPayload<ExtArgs> | null
      jobApplication: Prisma.$JobApplicationPayload<ExtArgs> | null
      onDemand: Prisma.$OnDemandPayload<ExtArgs> | null
      user: Prisma.$ProfilePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string | null
      fileName: string
      fileType: string
      fileSize: number
      fileUrl: string
      uploadedAt: Date
      updatedAt: Date
      cateringRequestId: string | null
      onDemandId: string | null
      jobApplicationId: string | null
      category: string | null
      isTemporary: boolean
    }, ExtArgs["result"]["fileUpload"]>
    composites: {}
  }

  type FileUploadGetPayload<S extends boolean | null | undefined | FileUploadDefaultArgs> = $Result.GetResult<Prisma.$FileUploadPayload, S>

  type FileUploadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FileUploadFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FileUploadCountAggregateInputType | true
    }

  export interface FileUploadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FileUpload'], meta: { name: 'FileUpload' } }
    /**
     * Find zero or one FileUpload that matches the filter.
     * @param {FileUploadFindUniqueArgs} args - Arguments to find a FileUpload
     * @example
     * // Get one FileUpload
     * const fileUpload = await prisma.fileUpload.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FileUploadFindUniqueArgs>(args: SelectSubset<T, FileUploadFindUniqueArgs<ExtArgs>>): Prisma__FileUploadClient<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FileUpload that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FileUploadFindUniqueOrThrowArgs} args - Arguments to find a FileUpload
     * @example
     * // Get one FileUpload
     * const fileUpload = await prisma.fileUpload.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FileUploadFindUniqueOrThrowArgs>(args: SelectSubset<T, FileUploadFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FileUploadClient<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FileUpload that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileUploadFindFirstArgs} args - Arguments to find a FileUpload
     * @example
     * // Get one FileUpload
     * const fileUpload = await prisma.fileUpload.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FileUploadFindFirstArgs>(args?: SelectSubset<T, FileUploadFindFirstArgs<ExtArgs>>): Prisma__FileUploadClient<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FileUpload that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileUploadFindFirstOrThrowArgs} args - Arguments to find a FileUpload
     * @example
     * // Get one FileUpload
     * const fileUpload = await prisma.fileUpload.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FileUploadFindFirstOrThrowArgs>(args?: SelectSubset<T, FileUploadFindFirstOrThrowArgs<ExtArgs>>): Prisma__FileUploadClient<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FileUploads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileUploadFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FileUploads
     * const fileUploads = await prisma.fileUpload.findMany()
     * 
     * // Get first 10 FileUploads
     * const fileUploads = await prisma.fileUpload.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const fileUploadWithIdOnly = await prisma.fileUpload.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FileUploadFindManyArgs>(args?: SelectSubset<T, FileUploadFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FileUpload.
     * @param {FileUploadCreateArgs} args - Arguments to create a FileUpload.
     * @example
     * // Create one FileUpload
     * const FileUpload = await prisma.fileUpload.create({
     *   data: {
     *     // ... data to create a FileUpload
     *   }
     * })
     * 
     */
    create<T extends FileUploadCreateArgs>(args: SelectSubset<T, FileUploadCreateArgs<ExtArgs>>): Prisma__FileUploadClient<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FileUploads.
     * @param {FileUploadCreateManyArgs} args - Arguments to create many FileUploads.
     * @example
     * // Create many FileUploads
     * const fileUpload = await prisma.fileUpload.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FileUploadCreateManyArgs>(args?: SelectSubset<T, FileUploadCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FileUploads and returns the data saved in the database.
     * @param {FileUploadCreateManyAndReturnArgs} args - Arguments to create many FileUploads.
     * @example
     * // Create many FileUploads
     * const fileUpload = await prisma.fileUpload.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FileUploads and only return the `id`
     * const fileUploadWithIdOnly = await prisma.fileUpload.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FileUploadCreateManyAndReturnArgs>(args?: SelectSubset<T, FileUploadCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FileUpload.
     * @param {FileUploadDeleteArgs} args - Arguments to delete one FileUpload.
     * @example
     * // Delete one FileUpload
     * const FileUpload = await prisma.fileUpload.delete({
     *   where: {
     *     // ... filter to delete one FileUpload
     *   }
     * })
     * 
     */
    delete<T extends FileUploadDeleteArgs>(args: SelectSubset<T, FileUploadDeleteArgs<ExtArgs>>): Prisma__FileUploadClient<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FileUpload.
     * @param {FileUploadUpdateArgs} args - Arguments to update one FileUpload.
     * @example
     * // Update one FileUpload
     * const fileUpload = await prisma.fileUpload.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FileUploadUpdateArgs>(args: SelectSubset<T, FileUploadUpdateArgs<ExtArgs>>): Prisma__FileUploadClient<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FileUploads.
     * @param {FileUploadDeleteManyArgs} args - Arguments to filter FileUploads to delete.
     * @example
     * // Delete a few FileUploads
     * const { count } = await prisma.fileUpload.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FileUploadDeleteManyArgs>(args?: SelectSubset<T, FileUploadDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FileUploads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileUploadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FileUploads
     * const fileUpload = await prisma.fileUpload.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FileUploadUpdateManyArgs>(args: SelectSubset<T, FileUploadUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FileUploads and returns the data updated in the database.
     * @param {FileUploadUpdateManyAndReturnArgs} args - Arguments to update many FileUploads.
     * @example
     * // Update many FileUploads
     * const fileUpload = await prisma.fileUpload.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FileUploads and only return the `id`
     * const fileUploadWithIdOnly = await prisma.fileUpload.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FileUploadUpdateManyAndReturnArgs>(args: SelectSubset<T, FileUploadUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FileUpload.
     * @param {FileUploadUpsertArgs} args - Arguments to update or create a FileUpload.
     * @example
     * // Update or create a FileUpload
     * const fileUpload = await prisma.fileUpload.upsert({
     *   create: {
     *     // ... data to create a FileUpload
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FileUpload we want to update
     *   }
     * })
     */
    upsert<T extends FileUploadUpsertArgs>(args: SelectSubset<T, FileUploadUpsertArgs<ExtArgs>>): Prisma__FileUploadClient<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FileUploads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileUploadCountArgs} args - Arguments to filter FileUploads to count.
     * @example
     * // Count the number of FileUploads
     * const count = await prisma.fileUpload.count({
     *   where: {
     *     // ... the filter for the FileUploads we want to count
     *   }
     * })
    **/
    count<T extends FileUploadCountArgs>(
      args?: Subset<T, FileUploadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FileUploadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FileUpload.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileUploadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FileUploadAggregateArgs>(args: Subset<T, FileUploadAggregateArgs>): Prisma.PrismaPromise<GetFileUploadAggregateType<T>>

    /**
     * Group by FileUpload.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FileUploadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FileUploadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FileUploadGroupByArgs['orderBy'] }
        : { orderBy?: FileUploadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FileUploadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFileUploadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FileUpload model
   */
  readonly fields: FileUploadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FileUpload.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FileUploadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cateringRequest<T extends FileUpload$cateringRequestArgs<ExtArgs> = {}>(args?: Subset<T, FileUpload$cateringRequestArgs<ExtArgs>>): Prisma__CateringRequestClient<$Result.GetResult<Prisma.$CateringRequestPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    jobApplication<T extends FileUpload$jobApplicationArgs<ExtArgs> = {}>(args?: Subset<T, FileUpload$jobApplicationArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    onDemand<T extends FileUpload$onDemandArgs<ExtArgs> = {}>(args?: Subset<T, FileUpload$onDemandArgs<ExtArgs>>): Prisma__OnDemandClient<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    user<T extends FileUpload$userArgs<ExtArgs> = {}>(args?: Subset<T, FileUpload$userArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FileUpload model
   */
  interface FileUploadFieldRefs {
    readonly id: FieldRef<"FileUpload", 'String'>
    readonly userId: FieldRef<"FileUpload", 'String'>
    readonly fileName: FieldRef<"FileUpload", 'String'>
    readonly fileType: FieldRef<"FileUpload", 'String'>
    readonly fileSize: FieldRef<"FileUpload", 'Int'>
    readonly fileUrl: FieldRef<"FileUpload", 'String'>
    readonly uploadedAt: FieldRef<"FileUpload", 'DateTime'>
    readonly updatedAt: FieldRef<"FileUpload", 'DateTime'>
    readonly cateringRequestId: FieldRef<"FileUpload", 'String'>
    readonly onDemandId: FieldRef<"FileUpload", 'String'>
    readonly jobApplicationId: FieldRef<"FileUpload", 'String'>
    readonly category: FieldRef<"FileUpload", 'String'>
    readonly isTemporary: FieldRef<"FileUpload", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * FileUpload findUnique
   */
  export type FileUploadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    /**
     * Filter, which FileUpload to fetch.
     */
    where: FileUploadWhereUniqueInput
  }

  /**
   * FileUpload findUniqueOrThrow
   */
  export type FileUploadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    /**
     * Filter, which FileUpload to fetch.
     */
    where: FileUploadWhereUniqueInput
  }

  /**
   * FileUpload findFirst
   */
  export type FileUploadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    /**
     * Filter, which FileUpload to fetch.
     */
    where?: FileUploadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FileUploads to fetch.
     */
    orderBy?: FileUploadOrderByWithRelationInput | FileUploadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FileUploads.
     */
    cursor?: FileUploadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FileUploads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FileUploads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FileUploads.
     */
    distinct?: FileUploadScalarFieldEnum | FileUploadScalarFieldEnum[]
  }

  /**
   * FileUpload findFirstOrThrow
   */
  export type FileUploadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    /**
     * Filter, which FileUpload to fetch.
     */
    where?: FileUploadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FileUploads to fetch.
     */
    orderBy?: FileUploadOrderByWithRelationInput | FileUploadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FileUploads.
     */
    cursor?: FileUploadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FileUploads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FileUploads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FileUploads.
     */
    distinct?: FileUploadScalarFieldEnum | FileUploadScalarFieldEnum[]
  }

  /**
   * FileUpload findMany
   */
  export type FileUploadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    /**
     * Filter, which FileUploads to fetch.
     */
    where?: FileUploadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FileUploads to fetch.
     */
    orderBy?: FileUploadOrderByWithRelationInput | FileUploadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FileUploads.
     */
    cursor?: FileUploadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FileUploads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FileUploads.
     */
    skip?: number
    distinct?: FileUploadScalarFieldEnum | FileUploadScalarFieldEnum[]
  }

  /**
   * FileUpload create
   */
  export type FileUploadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    /**
     * The data needed to create a FileUpload.
     */
    data: XOR<FileUploadCreateInput, FileUploadUncheckedCreateInput>
  }

  /**
   * FileUpload createMany
   */
  export type FileUploadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FileUploads.
     */
    data: FileUploadCreateManyInput | FileUploadCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FileUpload createManyAndReturn
   */
  export type FileUploadCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * The data used to create many FileUploads.
     */
    data: FileUploadCreateManyInput | FileUploadCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * FileUpload update
   */
  export type FileUploadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    /**
     * The data needed to update a FileUpload.
     */
    data: XOR<FileUploadUpdateInput, FileUploadUncheckedUpdateInput>
    /**
     * Choose, which FileUpload to update.
     */
    where: FileUploadWhereUniqueInput
  }

  /**
   * FileUpload updateMany
   */
  export type FileUploadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FileUploads.
     */
    data: XOR<FileUploadUpdateManyMutationInput, FileUploadUncheckedUpdateManyInput>
    /**
     * Filter which FileUploads to update
     */
    where?: FileUploadWhereInput
    /**
     * Limit how many FileUploads to update.
     */
    limit?: number
  }

  /**
   * FileUpload updateManyAndReturn
   */
  export type FileUploadUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * The data used to update FileUploads.
     */
    data: XOR<FileUploadUpdateManyMutationInput, FileUploadUncheckedUpdateManyInput>
    /**
     * Filter which FileUploads to update
     */
    where?: FileUploadWhereInput
    /**
     * Limit how many FileUploads to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * FileUpload upsert
   */
  export type FileUploadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    /**
     * The filter to search for the FileUpload to update in case it exists.
     */
    where: FileUploadWhereUniqueInput
    /**
     * In case the FileUpload found by the `where` argument doesn't exist, create a new FileUpload with this data.
     */
    create: XOR<FileUploadCreateInput, FileUploadUncheckedCreateInput>
    /**
     * In case the FileUpload was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FileUploadUpdateInput, FileUploadUncheckedUpdateInput>
  }

  /**
   * FileUpload delete
   */
  export type FileUploadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    /**
     * Filter which FileUpload to delete.
     */
    where: FileUploadWhereUniqueInput
  }

  /**
   * FileUpload deleteMany
   */
  export type FileUploadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FileUploads to delete
     */
    where?: FileUploadWhereInput
    /**
     * Limit how many FileUploads to delete.
     */
    limit?: number
  }

  /**
   * FileUpload.cateringRequest
   */
  export type FileUpload$cateringRequestArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CateringRequest
     */
    select?: CateringRequestSelect<ExtArgs> | null
    /**
     * Omit specific fields from the CateringRequest
     */
    omit?: CateringRequestOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CateringRequestInclude<ExtArgs> | null
    where?: CateringRequestWhereInput
  }

  /**
   * FileUpload.jobApplication
   */
  export type FileUpload$jobApplicationArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    where?: JobApplicationWhereInput
  }

  /**
   * FileUpload.onDemand
   */
  export type FileUpload$onDemandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    where?: OnDemandWhereInput
  }

  /**
   * FileUpload.user
   */
  export type FileUpload$userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
  }

  /**
   * FileUpload without action
   */
  export type FileUploadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
  }


  /**
   * Model OnDemand
   */

  export type AggregateOnDemand = {
    _count: OnDemandCountAggregateOutputType | null
    _avg: OnDemandAvgAggregateOutputType | null
    _sum: OnDemandSumAggregateOutputType | null
    _min: OnDemandMinAggregateOutputType | null
    _max: OnDemandMaxAggregateOutputType | null
  }

  export type OnDemandAvgAggregateOutputType = {
    hoursNeeded: number | null
    orderTotal: Decimal | null
    tip: Decimal | null
    length: number | null
    width: number | null
    height: number | null
    weight: number | null
  }

  export type OnDemandSumAggregateOutputType = {
    hoursNeeded: number | null
    orderTotal: Decimal | null
    tip: Decimal | null
    length: number | null
    width: number | null
    height: number | null
    weight: number | null
  }

  export type OnDemandMinAggregateOutputType = {
    id: string | null
    guid: string | null
    userId: string | null
    pickupAddressId: string | null
    deliveryAddressId: string | null
    orderNumber: string | null
    pickupDateTime: Date | null
    arrivalDateTime: Date | null
    completeDateTime: Date | null
    hoursNeeded: number | null
    itemDelivered: string | null
    vehicleType: $Enums.VehicleType | null
    clientAttention: string | null
    pickupNotes: string | null
    specialNotes: string | null
    image: string | null
    status: $Enums.OnDemandStatus | null
    orderTotal: Decimal | null
    tip: Decimal | null
    length: number | null
    width: number | null
    height: number | null
    weight: number | null
    createdAt: Date | null
    updatedAt: Date | null
    driverStatus: $Enums.DriverStatus | null
    deletedAt: Date | null
  }

  export type OnDemandMaxAggregateOutputType = {
    id: string | null
    guid: string | null
    userId: string | null
    pickupAddressId: string | null
    deliveryAddressId: string | null
    orderNumber: string | null
    pickupDateTime: Date | null
    arrivalDateTime: Date | null
    completeDateTime: Date | null
    hoursNeeded: number | null
    itemDelivered: string | null
    vehicleType: $Enums.VehicleType | null
    clientAttention: string | null
    pickupNotes: string | null
    specialNotes: string | null
    image: string | null
    status: $Enums.OnDemandStatus | null
    orderTotal: Decimal | null
    tip: Decimal | null
    length: number | null
    width: number | null
    height: number | null
    weight: number | null
    createdAt: Date | null
    updatedAt: Date | null
    driverStatus: $Enums.DriverStatus | null
    deletedAt: Date | null
  }

  export type OnDemandCountAggregateOutputType = {
    id: number
    guid: number
    userId: number
    pickupAddressId: number
    deliveryAddressId: number
    orderNumber: number
    pickupDateTime: number
    arrivalDateTime: number
    completeDateTime: number
    hoursNeeded: number
    itemDelivered: number
    vehicleType: number
    clientAttention: number
    pickupNotes: number
    specialNotes: number
    image: number
    status: number
    orderTotal: number
    tip: number
    length: number
    width: number
    height: number
    weight: number
    createdAt: number
    updatedAt: number
    driverStatus: number
    deletedAt: number
    _all: number
  }


  export type OnDemandAvgAggregateInputType = {
    hoursNeeded?: true
    orderTotal?: true
    tip?: true
    length?: true
    width?: true
    height?: true
    weight?: true
  }

  export type OnDemandSumAggregateInputType = {
    hoursNeeded?: true
    orderTotal?: true
    tip?: true
    length?: true
    width?: true
    height?: true
    weight?: true
  }

  export type OnDemandMinAggregateInputType = {
    id?: true
    guid?: true
    userId?: true
    pickupAddressId?: true
    deliveryAddressId?: true
    orderNumber?: true
    pickupDateTime?: true
    arrivalDateTime?: true
    completeDateTime?: true
    hoursNeeded?: true
    itemDelivered?: true
    vehicleType?: true
    clientAttention?: true
    pickupNotes?: true
    specialNotes?: true
    image?: true
    status?: true
    orderTotal?: true
    tip?: true
    length?: true
    width?: true
    height?: true
    weight?: true
    createdAt?: true
    updatedAt?: true
    driverStatus?: true
    deletedAt?: true
  }

  export type OnDemandMaxAggregateInputType = {
    id?: true
    guid?: true
    userId?: true
    pickupAddressId?: true
    deliveryAddressId?: true
    orderNumber?: true
    pickupDateTime?: true
    arrivalDateTime?: true
    completeDateTime?: true
    hoursNeeded?: true
    itemDelivered?: true
    vehicleType?: true
    clientAttention?: true
    pickupNotes?: true
    specialNotes?: true
    image?: true
    status?: true
    orderTotal?: true
    tip?: true
    length?: true
    width?: true
    height?: true
    weight?: true
    createdAt?: true
    updatedAt?: true
    driverStatus?: true
    deletedAt?: true
  }

  export type OnDemandCountAggregateInputType = {
    id?: true
    guid?: true
    userId?: true
    pickupAddressId?: true
    deliveryAddressId?: true
    orderNumber?: true
    pickupDateTime?: true
    arrivalDateTime?: true
    completeDateTime?: true
    hoursNeeded?: true
    itemDelivered?: true
    vehicleType?: true
    clientAttention?: true
    pickupNotes?: true
    specialNotes?: true
    image?: true
    status?: true
    orderTotal?: true
    tip?: true
    length?: true
    width?: true
    height?: true
    weight?: true
    createdAt?: true
    updatedAt?: true
    driverStatus?: true
    deletedAt?: true
    _all?: true
  }

  export type OnDemandAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OnDemand to aggregate.
     */
    where?: OnDemandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OnDemands to fetch.
     */
    orderBy?: OnDemandOrderByWithRelationInput | OnDemandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OnDemandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OnDemands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OnDemands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OnDemands
    **/
    _count?: true | OnDemandCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OnDemandAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OnDemandSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OnDemandMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OnDemandMaxAggregateInputType
  }

  export type GetOnDemandAggregateType<T extends OnDemandAggregateArgs> = {
        [P in keyof T & keyof AggregateOnDemand]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOnDemand[P]>
      : GetScalarType<T[P], AggregateOnDemand[P]>
  }




  export type OnDemandGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OnDemandWhereInput
    orderBy?: OnDemandOrderByWithAggregationInput | OnDemandOrderByWithAggregationInput[]
    by: OnDemandScalarFieldEnum[] | OnDemandScalarFieldEnum
    having?: OnDemandScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OnDemandCountAggregateInputType | true
    _avg?: OnDemandAvgAggregateInputType
    _sum?: OnDemandSumAggregateInputType
    _min?: OnDemandMinAggregateInputType
    _max?: OnDemandMaxAggregateInputType
  }

  export type OnDemandGroupByOutputType = {
    id: string
    guid: string | null
    userId: string
    pickupAddressId: string
    deliveryAddressId: string
    orderNumber: string
    pickupDateTime: Date
    arrivalDateTime: Date
    completeDateTime: Date | null
    hoursNeeded: number | null
    itemDelivered: string | null
    vehicleType: $Enums.VehicleType
    clientAttention: string
    pickupNotes: string | null
    specialNotes: string | null
    image: string | null
    status: $Enums.OnDemandStatus
    orderTotal: Decimal | null
    tip: Decimal | null
    length: number | null
    width: number | null
    height: number | null
    weight: number | null
    createdAt: Date
    updatedAt: Date
    driverStatus: $Enums.DriverStatus | null
    deletedAt: Date | null
    _count: OnDemandCountAggregateOutputType | null
    _avg: OnDemandAvgAggregateOutputType | null
    _sum: OnDemandSumAggregateOutputType | null
    _min: OnDemandMinAggregateOutputType | null
    _max: OnDemandMaxAggregateOutputType | null
  }

  type GetOnDemandGroupByPayload<T extends OnDemandGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OnDemandGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OnDemandGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OnDemandGroupByOutputType[P]>
            : GetScalarType<T[P], OnDemandGroupByOutputType[P]>
        }
      >
    >


  export type OnDemandSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    guid?: boolean
    userId?: boolean
    pickupAddressId?: boolean
    deliveryAddressId?: boolean
    orderNumber?: boolean
    pickupDateTime?: boolean
    arrivalDateTime?: boolean
    completeDateTime?: boolean
    hoursNeeded?: boolean
    itemDelivered?: boolean
    vehicleType?: boolean
    clientAttention?: boolean
    pickupNotes?: boolean
    specialNotes?: boolean
    image?: boolean
    status?: boolean
    orderTotal?: boolean
    tip?: boolean
    length?: boolean
    width?: boolean
    height?: boolean
    weight?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    driverStatus?: boolean
    deletedAt?: boolean
    dispatches?: boolean | OnDemand$dispatchesArgs<ExtArgs>
    fileUploads?: boolean | OnDemand$fileUploadsArgs<ExtArgs>
    deliveryAddress?: boolean | AddressDefaultArgs<ExtArgs>
    pickupAddress?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    _count?: boolean | OnDemandCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["onDemand"]>

  export type OnDemandSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    guid?: boolean
    userId?: boolean
    pickupAddressId?: boolean
    deliveryAddressId?: boolean
    orderNumber?: boolean
    pickupDateTime?: boolean
    arrivalDateTime?: boolean
    completeDateTime?: boolean
    hoursNeeded?: boolean
    itemDelivered?: boolean
    vehicleType?: boolean
    clientAttention?: boolean
    pickupNotes?: boolean
    specialNotes?: boolean
    image?: boolean
    status?: boolean
    orderTotal?: boolean
    tip?: boolean
    length?: boolean
    width?: boolean
    height?: boolean
    weight?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    driverStatus?: boolean
    deletedAt?: boolean
    deliveryAddress?: boolean | AddressDefaultArgs<ExtArgs>
    pickupAddress?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["onDemand"]>

  export type OnDemandSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    guid?: boolean
    userId?: boolean
    pickupAddressId?: boolean
    deliveryAddressId?: boolean
    orderNumber?: boolean
    pickupDateTime?: boolean
    arrivalDateTime?: boolean
    completeDateTime?: boolean
    hoursNeeded?: boolean
    itemDelivered?: boolean
    vehicleType?: boolean
    clientAttention?: boolean
    pickupNotes?: boolean
    specialNotes?: boolean
    image?: boolean
    status?: boolean
    orderTotal?: boolean
    tip?: boolean
    length?: boolean
    width?: boolean
    height?: boolean
    weight?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    driverStatus?: boolean
    deletedAt?: boolean
    deliveryAddress?: boolean | AddressDefaultArgs<ExtArgs>
    pickupAddress?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["onDemand"]>

  export type OnDemandSelectScalar = {
    id?: boolean
    guid?: boolean
    userId?: boolean
    pickupAddressId?: boolean
    deliveryAddressId?: boolean
    orderNumber?: boolean
    pickupDateTime?: boolean
    arrivalDateTime?: boolean
    completeDateTime?: boolean
    hoursNeeded?: boolean
    itemDelivered?: boolean
    vehicleType?: boolean
    clientAttention?: boolean
    pickupNotes?: boolean
    specialNotes?: boolean
    image?: boolean
    status?: boolean
    orderTotal?: boolean
    tip?: boolean
    length?: boolean
    width?: boolean
    height?: boolean
    weight?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    driverStatus?: boolean
    deletedAt?: boolean
  }

  export type OnDemandOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "guid" | "userId" | "pickupAddressId" | "deliveryAddressId" | "orderNumber" | "pickupDateTime" | "arrivalDateTime" | "completeDateTime" | "hoursNeeded" | "itemDelivered" | "vehicleType" | "clientAttention" | "pickupNotes" | "specialNotes" | "image" | "status" | "orderTotal" | "tip" | "length" | "width" | "height" | "weight" | "createdAt" | "updatedAt" | "driverStatus" | "deletedAt", ExtArgs["result"]["onDemand"]>
  export type OnDemandInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    dispatches?: boolean | OnDemand$dispatchesArgs<ExtArgs>
    fileUploads?: boolean | OnDemand$fileUploadsArgs<ExtArgs>
    deliveryAddress?: boolean | AddressDefaultArgs<ExtArgs>
    pickupAddress?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
    _count?: boolean | OnDemandCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OnDemandIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveryAddress?: boolean | AddressDefaultArgs<ExtArgs>
    pickupAddress?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type OnDemandIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    deliveryAddress?: boolean | AddressDefaultArgs<ExtArgs>
    pickupAddress?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $OnDemandPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OnDemand"
    objects: {
      dispatches: Prisma.$DispatchPayload<ExtArgs>[]
      fileUploads: Prisma.$FileUploadPayload<ExtArgs>[]
      deliveryAddress: Prisma.$AddressPayload<ExtArgs>
      pickupAddress: Prisma.$AddressPayload<ExtArgs>
      user: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      guid: string | null
      userId: string
      pickupAddressId: string
      deliveryAddressId: string
      orderNumber: string
      pickupDateTime: Date
      arrivalDateTime: Date
      completeDateTime: Date | null
      hoursNeeded: number | null
      itemDelivered: string | null
      vehicleType: $Enums.VehicleType
      clientAttention: string
      pickupNotes: string | null
      specialNotes: string | null
      image: string | null
      status: $Enums.OnDemandStatus
      orderTotal: Prisma.Decimal | null
      tip: Prisma.Decimal | null
      length: number | null
      width: number | null
      height: number | null
      weight: number | null
      createdAt: Date
      updatedAt: Date
      driverStatus: $Enums.DriverStatus | null
      deletedAt: Date | null
    }, ExtArgs["result"]["onDemand"]>
    composites: {}
  }

  type OnDemandGetPayload<S extends boolean | null | undefined | OnDemandDefaultArgs> = $Result.GetResult<Prisma.$OnDemandPayload, S>

  type OnDemandCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OnDemandFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OnDemandCountAggregateInputType | true
    }

  export interface OnDemandDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OnDemand'], meta: { name: 'OnDemand' } }
    /**
     * Find zero or one OnDemand that matches the filter.
     * @param {OnDemandFindUniqueArgs} args - Arguments to find a OnDemand
     * @example
     * // Get one OnDemand
     * const onDemand = await prisma.onDemand.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OnDemandFindUniqueArgs>(args: SelectSubset<T, OnDemandFindUniqueArgs<ExtArgs>>): Prisma__OnDemandClient<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OnDemand that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OnDemandFindUniqueOrThrowArgs} args - Arguments to find a OnDemand
     * @example
     * // Get one OnDemand
     * const onDemand = await prisma.onDemand.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OnDemandFindUniqueOrThrowArgs>(args: SelectSubset<T, OnDemandFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OnDemandClient<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OnDemand that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OnDemandFindFirstArgs} args - Arguments to find a OnDemand
     * @example
     * // Get one OnDemand
     * const onDemand = await prisma.onDemand.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OnDemandFindFirstArgs>(args?: SelectSubset<T, OnDemandFindFirstArgs<ExtArgs>>): Prisma__OnDemandClient<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OnDemand that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OnDemandFindFirstOrThrowArgs} args - Arguments to find a OnDemand
     * @example
     * // Get one OnDemand
     * const onDemand = await prisma.onDemand.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OnDemandFindFirstOrThrowArgs>(args?: SelectSubset<T, OnDemandFindFirstOrThrowArgs<ExtArgs>>): Prisma__OnDemandClient<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OnDemands that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OnDemandFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OnDemands
     * const onDemands = await prisma.onDemand.findMany()
     * 
     * // Get first 10 OnDemands
     * const onDemands = await prisma.onDemand.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const onDemandWithIdOnly = await prisma.onDemand.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OnDemandFindManyArgs>(args?: SelectSubset<T, OnDemandFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OnDemand.
     * @param {OnDemandCreateArgs} args - Arguments to create a OnDemand.
     * @example
     * // Create one OnDemand
     * const OnDemand = await prisma.onDemand.create({
     *   data: {
     *     // ... data to create a OnDemand
     *   }
     * })
     * 
     */
    create<T extends OnDemandCreateArgs>(args: SelectSubset<T, OnDemandCreateArgs<ExtArgs>>): Prisma__OnDemandClient<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OnDemands.
     * @param {OnDemandCreateManyArgs} args - Arguments to create many OnDemands.
     * @example
     * // Create many OnDemands
     * const onDemand = await prisma.onDemand.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OnDemandCreateManyArgs>(args?: SelectSubset<T, OnDemandCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OnDemands and returns the data saved in the database.
     * @param {OnDemandCreateManyAndReturnArgs} args - Arguments to create many OnDemands.
     * @example
     * // Create many OnDemands
     * const onDemand = await prisma.onDemand.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OnDemands and only return the `id`
     * const onDemandWithIdOnly = await prisma.onDemand.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OnDemandCreateManyAndReturnArgs>(args?: SelectSubset<T, OnDemandCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OnDemand.
     * @param {OnDemandDeleteArgs} args - Arguments to delete one OnDemand.
     * @example
     * // Delete one OnDemand
     * const OnDemand = await prisma.onDemand.delete({
     *   where: {
     *     // ... filter to delete one OnDemand
     *   }
     * })
     * 
     */
    delete<T extends OnDemandDeleteArgs>(args: SelectSubset<T, OnDemandDeleteArgs<ExtArgs>>): Prisma__OnDemandClient<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OnDemand.
     * @param {OnDemandUpdateArgs} args - Arguments to update one OnDemand.
     * @example
     * // Update one OnDemand
     * const onDemand = await prisma.onDemand.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OnDemandUpdateArgs>(args: SelectSubset<T, OnDemandUpdateArgs<ExtArgs>>): Prisma__OnDemandClient<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OnDemands.
     * @param {OnDemandDeleteManyArgs} args - Arguments to filter OnDemands to delete.
     * @example
     * // Delete a few OnDemands
     * const { count } = await prisma.onDemand.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OnDemandDeleteManyArgs>(args?: SelectSubset<T, OnDemandDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OnDemands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OnDemandUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OnDemands
     * const onDemand = await prisma.onDemand.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OnDemandUpdateManyArgs>(args: SelectSubset<T, OnDemandUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OnDemands and returns the data updated in the database.
     * @param {OnDemandUpdateManyAndReturnArgs} args - Arguments to update many OnDemands.
     * @example
     * // Update many OnDemands
     * const onDemand = await prisma.onDemand.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OnDemands and only return the `id`
     * const onDemandWithIdOnly = await prisma.onDemand.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OnDemandUpdateManyAndReturnArgs>(args: SelectSubset<T, OnDemandUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OnDemand.
     * @param {OnDemandUpsertArgs} args - Arguments to update or create a OnDemand.
     * @example
     * // Update or create a OnDemand
     * const onDemand = await prisma.onDemand.upsert({
     *   create: {
     *     // ... data to create a OnDemand
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OnDemand we want to update
     *   }
     * })
     */
    upsert<T extends OnDemandUpsertArgs>(args: SelectSubset<T, OnDemandUpsertArgs<ExtArgs>>): Prisma__OnDemandClient<$Result.GetResult<Prisma.$OnDemandPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OnDemands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OnDemandCountArgs} args - Arguments to filter OnDemands to count.
     * @example
     * // Count the number of OnDemands
     * const count = await prisma.onDemand.count({
     *   where: {
     *     // ... the filter for the OnDemands we want to count
     *   }
     * })
    **/
    count<T extends OnDemandCountArgs>(
      args?: Subset<T, OnDemandCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OnDemandCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OnDemand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OnDemandAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OnDemandAggregateArgs>(args: Subset<T, OnDemandAggregateArgs>): Prisma.PrismaPromise<GetOnDemandAggregateType<T>>

    /**
     * Group by OnDemand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OnDemandGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OnDemandGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OnDemandGroupByArgs['orderBy'] }
        : { orderBy?: OnDemandGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OnDemandGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOnDemandGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OnDemand model
   */
  readonly fields: OnDemandFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OnDemand.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OnDemandClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    dispatches<T extends OnDemand$dispatchesArgs<ExtArgs> = {}>(args?: Subset<T, OnDemand$dispatchesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$DispatchPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    fileUploads<T extends OnDemand$fileUploadsArgs<ExtArgs> = {}>(args?: Subset<T, OnDemand$fileUploadsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    deliveryAddress<T extends AddressDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AddressDefaultArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    pickupAddress<T extends AddressDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AddressDefaultArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OnDemand model
   */
  interface OnDemandFieldRefs {
    readonly id: FieldRef<"OnDemand", 'String'>
    readonly guid: FieldRef<"OnDemand", 'String'>
    readonly userId: FieldRef<"OnDemand", 'String'>
    readonly pickupAddressId: FieldRef<"OnDemand", 'String'>
    readonly deliveryAddressId: FieldRef<"OnDemand", 'String'>
    readonly orderNumber: FieldRef<"OnDemand", 'String'>
    readonly pickupDateTime: FieldRef<"OnDemand", 'DateTime'>
    readonly arrivalDateTime: FieldRef<"OnDemand", 'DateTime'>
    readonly completeDateTime: FieldRef<"OnDemand", 'DateTime'>
    readonly hoursNeeded: FieldRef<"OnDemand", 'Float'>
    readonly itemDelivered: FieldRef<"OnDemand", 'String'>
    readonly vehicleType: FieldRef<"OnDemand", 'VehicleType'>
    readonly clientAttention: FieldRef<"OnDemand", 'String'>
    readonly pickupNotes: FieldRef<"OnDemand", 'String'>
    readonly specialNotes: FieldRef<"OnDemand", 'String'>
    readonly image: FieldRef<"OnDemand", 'String'>
    readonly status: FieldRef<"OnDemand", 'OnDemandStatus'>
    readonly orderTotal: FieldRef<"OnDemand", 'Decimal'>
    readonly tip: FieldRef<"OnDemand", 'Decimal'>
    readonly length: FieldRef<"OnDemand", 'Float'>
    readonly width: FieldRef<"OnDemand", 'Float'>
    readonly height: FieldRef<"OnDemand", 'Float'>
    readonly weight: FieldRef<"OnDemand", 'Float'>
    readonly createdAt: FieldRef<"OnDemand", 'DateTime'>
    readonly updatedAt: FieldRef<"OnDemand", 'DateTime'>
    readonly driverStatus: FieldRef<"OnDemand", 'DriverStatus'>
    readonly deletedAt: FieldRef<"OnDemand", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OnDemand findUnique
   */
  export type OnDemandFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    /**
     * Filter, which OnDemand to fetch.
     */
    where: OnDemandWhereUniqueInput
  }

  /**
   * OnDemand findUniqueOrThrow
   */
  export type OnDemandFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    /**
     * Filter, which OnDemand to fetch.
     */
    where: OnDemandWhereUniqueInput
  }

  /**
   * OnDemand findFirst
   */
  export type OnDemandFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    /**
     * Filter, which OnDemand to fetch.
     */
    where?: OnDemandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OnDemands to fetch.
     */
    orderBy?: OnDemandOrderByWithRelationInput | OnDemandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OnDemands.
     */
    cursor?: OnDemandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OnDemands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OnDemands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OnDemands.
     */
    distinct?: OnDemandScalarFieldEnum | OnDemandScalarFieldEnum[]
  }

  /**
   * OnDemand findFirstOrThrow
   */
  export type OnDemandFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    /**
     * Filter, which OnDemand to fetch.
     */
    where?: OnDemandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OnDemands to fetch.
     */
    orderBy?: OnDemandOrderByWithRelationInput | OnDemandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OnDemands.
     */
    cursor?: OnDemandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OnDemands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OnDemands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OnDemands.
     */
    distinct?: OnDemandScalarFieldEnum | OnDemandScalarFieldEnum[]
  }

  /**
   * OnDemand findMany
   */
  export type OnDemandFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    /**
     * Filter, which OnDemands to fetch.
     */
    where?: OnDemandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OnDemands to fetch.
     */
    orderBy?: OnDemandOrderByWithRelationInput | OnDemandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OnDemands.
     */
    cursor?: OnDemandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OnDemands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OnDemands.
     */
    skip?: number
    distinct?: OnDemandScalarFieldEnum | OnDemandScalarFieldEnum[]
  }

  /**
   * OnDemand create
   */
  export type OnDemandCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    /**
     * The data needed to create a OnDemand.
     */
    data: XOR<OnDemandCreateInput, OnDemandUncheckedCreateInput>
  }

  /**
   * OnDemand createMany
   */
  export type OnDemandCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OnDemands.
     */
    data: OnDemandCreateManyInput | OnDemandCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OnDemand createManyAndReturn
   */
  export type OnDemandCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * The data used to create many OnDemands.
     */
    data: OnDemandCreateManyInput | OnDemandCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OnDemand update
   */
  export type OnDemandUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    /**
     * The data needed to update a OnDemand.
     */
    data: XOR<OnDemandUpdateInput, OnDemandUncheckedUpdateInput>
    /**
     * Choose, which OnDemand to update.
     */
    where: OnDemandWhereUniqueInput
  }

  /**
   * OnDemand updateMany
   */
  export type OnDemandUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OnDemands.
     */
    data: XOR<OnDemandUpdateManyMutationInput, OnDemandUncheckedUpdateManyInput>
    /**
     * Filter which OnDemands to update
     */
    where?: OnDemandWhereInput
    /**
     * Limit how many OnDemands to update.
     */
    limit?: number
  }

  /**
   * OnDemand updateManyAndReturn
   */
  export type OnDemandUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * The data used to update OnDemands.
     */
    data: XOR<OnDemandUpdateManyMutationInput, OnDemandUncheckedUpdateManyInput>
    /**
     * Filter which OnDemands to update
     */
    where?: OnDemandWhereInput
    /**
     * Limit how many OnDemands to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OnDemand upsert
   */
  export type OnDemandUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    /**
     * The filter to search for the OnDemand to update in case it exists.
     */
    where: OnDemandWhereUniqueInput
    /**
     * In case the OnDemand found by the `where` argument doesn't exist, create a new OnDemand with this data.
     */
    create: XOR<OnDemandCreateInput, OnDemandUncheckedCreateInput>
    /**
     * In case the OnDemand was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OnDemandUpdateInput, OnDemandUncheckedUpdateInput>
  }

  /**
   * OnDemand delete
   */
  export type OnDemandDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
    /**
     * Filter which OnDemand to delete.
     */
    where: OnDemandWhereUniqueInput
  }

  /**
   * OnDemand deleteMany
   */
  export type OnDemandDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OnDemands to delete
     */
    where?: OnDemandWhereInput
    /**
     * Limit how many OnDemands to delete.
     */
    limit?: number
  }

  /**
   * OnDemand.dispatches
   */
  export type OnDemand$dispatchesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Dispatch
     */
    select?: DispatchSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Dispatch
     */
    omit?: DispatchOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: DispatchInclude<ExtArgs> | null
    where?: DispatchWhereInput
    orderBy?: DispatchOrderByWithRelationInput | DispatchOrderByWithRelationInput[]
    cursor?: DispatchWhereUniqueInput
    take?: number
    skip?: number
    distinct?: DispatchScalarFieldEnum | DispatchScalarFieldEnum[]
  }

  /**
   * OnDemand.fileUploads
   */
  export type OnDemand$fileUploadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    where?: FileUploadWhereInput
    orderBy?: FileUploadOrderByWithRelationInput | FileUploadOrderByWithRelationInput[]
    cursor?: FileUploadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FileUploadScalarFieldEnum | FileUploadScalarFieldEnum[]
  }

  /**
   * OnDemand without action
   */
  export type OnDemandDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OnDemand
     */
    select?: OnDemandSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OnDemand
     */
    omit?: OnDemandOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OnDemandInclude<ExtArgs> | null
  }


  /**
   * Model UserAddress
   */

  export type AggregateUserAddress = {
    _count: UserAddressCountAggregateOutputType | null
    _min: UserAddressMinAggregateOutputType | null
    _max: UserAddressMaxAggregateOutputType | null
  }

  export type UserAddressMinAggregateOutputType = {
    id: string | null
    userId: string | null
    addressId: string | null
    alias: string | null
    isDefault: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserAddressMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    addressId: string | null
    alias: string | null
    isDefault: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserAddressCountAggregateOutputType = {
    id: number
    userId: number
    addressId: number
    alias: number
    isDefault: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserAddressMinAggregateInputType = {
    id?: true
    userId?: true
    addressId?: true
    alias?: true
    isDefault?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserAddressMaxAggregateInputType = {
    id?: true
    userId?: true
    addressId?: true
    alias?: true
    isDefault?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserAddressCountAggregateInputType = {
    id?: true
    userId?: true
    addressId?: true
    alias?: true
    isDefault?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAddressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserAddress to aggregate.
     */
    where?: UserAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserAddresses to fetch.
     */
    orderBy?: UserAddressOrderByWithRelationInput | UserAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserAddresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserAddresses
    **/
    _count?: true | UserAddressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserAddressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserAddressMaxAggregateInputType
  }

  export type GetUserAddressAggregateType<T extends UserAddressAggregateArgs> = {
        [P in keyof T & keyof AggregateUserAddress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserAddress[P]>
      : GetScalarType<T[P], AggregateUserAddress[P]>
  }




  export type UserAddressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserAddressWhereInput
    orderBy?: UserAddressOrderByWithAggregationInput | UserAddressOrderByWithAggregationInput[]
    by: UserAddressScalarFieldEnum[] | UserAddressScalarFieldEnum
    having?: UserAddressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserAddressCountAggregateInputType | true
    _min?: UserAddressMinAggregateInputType
    _max?: UserAddressMaxAggregateInputType
  }

  export type UserAddressGroupByOutputType = {
    id: string
    userId: string
    addressId: string
    alias: string | null
    isDefault: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserAddressCountAggregateOutputType | null
    _min: UserAddressMinAggregateOutputType | null
    _max: UserAddressMaxAggregateOutputType | null
  }

  type GetUserAddressGroupByPayload<T extends UserAddressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserAddressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserAddressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserAddressGroupByOutputType[P]>
            : GetScalarType<T[P], UserAddressGroupByOutputType[P]>
        }
      >
    >


  export type UserAddressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    addressId?: boolean
    alias?: boolean
    isDefault?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    address?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userAddress"]>

  export type UserAddressSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    addressId?: boolean
    alias?: boolean
    isDefault?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    address?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userAddress"]>

  export type UserAddressSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    addressId?: boolean
    alias?: boolean
    isDefault?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    address?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userAddress"]>

  export type UserAddressSelectScalar = {
    id?: boolean
    userId?: boolean
    addressId?: boolean
    alias?: boolean
    isDefault?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserAddressOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "addressId" | "alias" | "isDefault" | "createdAt" | "updatedAt", ExtArgs["result"]["userAddress"]>
  export type UserAddressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    address?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type UserAddressIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    address?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }
  export type UserAddressIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    address?: boolean | AddressDefaultArgs<ExtArgs>
    user?: boolean | ProfileDefaultArgs<ExtArgs>
  }

  export type $UserAddressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserAddress"
    objects: {
      address: Prisma.$AddressPayload<ExtArgs>
      user: Prisma.$ProfilePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      addressId: string
      alias: string | null
      isDefault: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["userAddress"]>
    composites: {}
  }

  type UserAddressGetPayload<S extends boolean | null | undefined | UserAddressDefaultArgs> = $Result.GetResult<Prisma.$UserAddressPayload, S>

  type UserAddressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserAddressFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserAddressCountAggregateInputType | true
    }

  export interface UserAddressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserAddress'], meta: { name: 'UserAddress' } }
    /**
     * Find zero or one UserAddress that matches the filter.
     * @param {UserAddressFindUniqueArgs} args - Arguments to find a UserAddress
     * @example
     * // Get one UserAddress
     * const userAddress = await prisma.userAddress.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserAddressFindUniqueArgs>(args: SelectSubset<T, UserAddressFindUniqueArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one UserAddress that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserAddressFindUniqueOrThrowArgs} args - Arguments to find a UserAddress
     * @example
     * // Get one UserAddress
     * const userAddress = await prisma.userAddress.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserAddressFindUniqueOrThrowArgs>(args: SelectSubset<T, UserAddressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserAddress that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressFindFirstArgs} args - Arguments to find a UserAddress
     * @example
     * // Get one UserAddress
     * const userAddress = await prisma.userAddress.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserAddressFindFirstArgs>(args?: SelectSubset<T, UserAddressFindFirstArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first UserAddress that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressFindFirstOrThrowArgs} args - Arguments to find a UserAddress
     * @example
     * // Get one UserAddress
     * const userAddress = await prisma.userAddress.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserAddressFindFirstOrThrowArgs>(args?: SelectSubset<T, UserAddressFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more UserAddresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserAddresses
     * const userAddresses = await prisma.userAddress.findMany()
     * 
     * // Get first 10 UserAddresses
     * const userAddresses = await prisma.userAddress.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userAddressWithIdOnly = await prisma.userAddress.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserAddressFindManyArgs>(args?: SelectSubset<T, UserAddressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a UserAddress.
     * @param {UserAddressCreateArgs} args - Arguments to create a UserAddress.
     * @example
     * // Create one UserAddress
     * const UserAddress = await prisma.userAddress.create({
     *   data: {
     *     // ... data to create a UserAddress
     *   }
     * })
     * 
     */
    create<T extends UserAddressCreateArgs>(args: SelectSubset<T, UserAddressCreateArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many UserAddresses.
     * @param {UserAddressCreateManyArgs} args - Arguments to create many UserAddresses.
     * @example
     * // Create many UserAddresses
     * const userAddress = await prisma.userAddress.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserAddressCreateManyArgs>(args?: SelectSubset<T, UserAddressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UserAddresses and returns the data saved in the database.
     * @param {UserAddressCreateManyAndReturnArgs} args - Arguments to create many UserAddresses.
     * @example
     * // Create many UserAddresses
     * const userAddress = await prisma.userAddress.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UserAddresses and only return the `id`
     * const userAddressWithIdOnly = await prisma.userAddress.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserAddressCreateManyAndReturnArgs>(args?: SelectSubset<T, UserAddressCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a UserAddress.
     * @param {UserAddressDeleteArgs} args - Arguments to delete one UserAddress.
     * @example
     * // Delete one UserAddress
     * const UserAddress = await prisma.userAddress.delete({
     *   where: {
     *     // ... filter to delete one UserAddress
     *   }
     * })
     * 
     */
    delete<T extends UserAddressDeleteArgs>(args: SelectSubset<T, UserAddressDeleteArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one UserAddress.
     * @param {UserAddressUpdateArgs} args - Arguments to update one UserAddress.
     * @example
     * // Update one UserAddress
     * const userAddress = await prisma.userAddress.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserAddressUpdateArgs>(args: SelectSubset<T, UserAddressUpdateArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more UserAddresses.
     * @param {UserAddressDeleteManyArgs} args - Arguments to filter UserAddresses to delete.
     * @example
     * // Delete a few UserAddresses
     * const { count } = await prisma.userAddress.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserAddressDeleteManyArgs>(args?: SelectSubset<T, UserAddressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserAddresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserAddresses
     * const userAddress = await prisma.userAddress.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserAddressUpdateManyArgs>(args: SelectSubset<T, UserAddressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserAddresses and returns the data updated in the database.
     * @param {UserAddressUpdateManyAndReturnArgs} args - Arguments to update many UserAddresses.
     * @example
     * // Update many UserAddresses
     * const userAddress = await prisma.userAddress.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more UserAddresses and only return the `id`
     * const userAddressWithIdOnly = await prisma.userAddress.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserAddressUpdateManyAndReturnArgs>(args: SelectSubset<T, UserAddressUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one UserAddress.
     * @param {UserAddressUpsertArgs} args - Arguments to update or create a UserAddress.
     * @example
     * // Update or create a UserAddress
     * const userAddress = await prisma.userAddress.upsert({
     *   create: {
     *     // ... data to create a UserAddress
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserAddress we want to update
     *   }
     * })
     */
    upsert<T extends UserAddressUpsertArgs>(args: SelectSubset<T, UserAddressUpsertArgs<ExtArgs>>): Prisma__UserAddressClient<$Result.GetResult<Prisma.$UserAddressPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of UserAddresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressCountArgs} args - Arguments to filter UserAddresses to count.
     * @example
     * // Count the number of UserAddresses
     * const count = await prisma.userAddress.count({
     *   where: {
     *     // ... the filter for the UserAddresses we want to count
     *   }
     * })
    **/
    count<T extends UserAddressCountArgs>(
      args?: Subset<T, UserAddressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserAddressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserAddress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAddressAggregateArgs>(args: Subset<T, UserAddressAggregateArgs>): Prisma.PrismaPromise<GetUserAddressAggregateType<T>>

    /**
     * Group by UserAddress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAddressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserAddressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserAddressGroupByArgs['orderBy'] }
        : { orderBy?: UserAddressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserAddressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserAddressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserAddress model
   */
  readonly fields: UserAddressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserAddress.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserAddressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    address<T extends AddressDefaultArgs<ExtArgs> = {}>(args?: Subset<T, AddressDefaultArgs<ExtArgs>>): Prisma__AddressClient<$Result.GetResult<Prisma.$AddressPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    user<T extends ProfileDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProfileDefaultArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserAddress model
   */
  interface UserAddressFieldRefs {
    readonly id: FieldRef<"UserAddress", 'String'>
    readonly userId: FieldRef<"UserAddress", 'String'>
    readonly addressId: FieldRef<"UserAddress", 'String'>
    readonly alias: FieldRef<"UserAddress", 'String'>
    readonly isDefault: FieldRef<"UserAddress", 'Boolean'>
    readonly createdAt: FieldRef<"UserAddress", 'DateTime'>
    readonly updatedAt: FieldRef<"UserAddress", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UserAddress findUnique
   */
  export type UserAddressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * Filter, which UserAddress to fetch.
     */
    where: UserAddressWhereUniqueInput
  }

  /**
   * UserAddress findUniqueOrThrow
   */
  export type UserAddressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * Filter, which UserAddress to fetch.
     */
    where: UserAddressWhereUniqueInput
  }

  /**
   * UserAddress findFirst
   */
  export type UserAddressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * Filter, which UserAddress to fetch.
     */
    where?: UserAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserAddresses to fetch.
     */
    orderBy?: UserAddressOrderByWithRelationInput | UserAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserAddresses.
     */
    cursor?: UserAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserAddresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserAddresses.
     */
    distinct?: UserAddressScalarFieldEnum | UserAddressScalarFieldEnum[]
  }

  /**
   * UserAddress findFirstOrThrow
   */
  export type UserAddressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * Filter, which UserAddress to fetch.
     */
    where?: UserAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserAddresses to fetch.
     */
    orderBy?: UserAddressOrderByWithRelationInput | UserAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserAddresses.
     */
    cursor?: UserAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserAddresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserAddresses.
     */
    distinct?: UserAddressScalarFieldEnum | UserAddressScalarFieldEnum[]
  }

  /**
   * UserAddress findMany
   */
  export type UserAddressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * Filter, which UserAddresses to fetch.
     */
    where?: UserAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserAddresses to fetch.
     */
    orderBy?: UserAddressOrderByWithRelationInput | UserAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserAddresses.
     */
    cursor?: UserAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserAddresses.
     */
    skip?: number
    distinct?: UserAddressScalarFieldEnum | UserAddressScalarFieldEnum[]
  }

  /**
   * UserAddress create
   */
  export type UserAddressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * The data needed to create a UserAddress.
     */
    data: XOR<UserAddressCreateInput, UserAddressUncheckedCreateInput>
  }

  /**
   * UserAddress createMany
   */
  export type UserAddressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserAddresses.
     */
    data: UserAddressCreateManyInput | UserAddressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserAddress createManyAndReturn
   */
  export type UserAddressCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * The data used to create many UserAddresses.
     */
    data: UserAddressCreateManyInput | UserAddressCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserAddress update
   */
  export type UserAddressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * The data needed to update a UserAddress.
     */
    data: XOR<UserAddressUpdateInput, UserAddressUncheckedUpdateInput>
    /**
     * Choose, which UserAddress to update.
     */
    where: UserAddressWhereUniqueInput
  }

  /**
   * UserAddress updateMany
   */
  export type UserAddressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserAddresses.
     */
    data: XOR<UserAddressUpdateManyMutationInput, UserAddressUncheckedUpdateManyInput>
    /**
     * Filter which UserAddresses to update
     */
    where?: UserAddressWhereInput
    /**
     * Limit how many UserAddresses to update.
     */
    limit?: number
  }

  /**
   * UserAddress updateManyAndReturn
   */
  export type UserAddressUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * The data used to update UserAddresses.
     */
    data: XOR<UserAddressUpdateManyMutationInput, UserAddressUncheckedUpdateManyInput>
    /**
     * Filter which UserAddresses to update
     */
    where?: UserAddressWhereInput
    /**
     * Limit how many UserAddresses to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * UserAddress upsert
   */
  export type UserAddressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * The filter to search for the UserAddress to update in case it exists.
     */
    where: UserAddressWhereUniqueInput
    /**
     * In case the UserAddress found by the `where` argument doesn't exist, create a new UserAddress with this data.
     */
    create: XOR<UserAddressCreateInput, UserAddressUncheckedCreateInput>
    /**
     * In case the UserAddress was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserAddressUpdateInput, UserAddressUncheckedUpdateInput>
  }

  /**
   * UserAddress delete
   */
  export type UserAddressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
    /**
     * Filter which UserAddress to delete.
     */
    where: UserAddressWhereUniqueInput
  }

  /**
   * UserAddress deleteMany
   */
  export type UserAddressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserAddresses to delete
     */
    where?: UserAddressWhereInput
    /**
     * Limit how many UserAddresses to delete.
     */
    limit?: number
  }

  /**
   * UserAddress without action
   */
  export type UserAddressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserAddress
     */
    select?: UserAddressSelect<ExtArgs> | null
    /**
     * Omit specific fields from the UserAddress
     */
    omit?: UserAddressOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserAddressInclude<ExtArgs> | null
  }


  /**
   * Model VerificationToken
   */

  export type AggregateVerificationToken = {
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  export type VerificationTokenMinAggregateOutputType = {
    id: string | null
    identifier: string | null
    token: string | null
    expires: Date | null
  }

  export type VerificationTokenMaxAggregateOutputType = {
    id: string | null
    identifier: string | null
    token: string | null
    expires: Date | null
  }

  export type VerificationTokenCountAggregateOutputType = {
    id: number
    identifier: number
    token: number
    expires: number
    _all: number
  }


  export type VerificationTokenMinAggregateInputType = {
    id?: true
    identifier?: true
    token?: true
    expires?: true
  }

  export type VerificationTokenMaxAggregateInputType = {
    id?: true
    identifier?: true
    token?: true
    expires?: true
  }

  export type VerificationTokenCountAggregateInputType = {
    id?: true
    identifier?: true
    token?: true
    expires?: true
    _all?: true
  }

  export type VerificationTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationToken to aggregate.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned VerificationTokens
    **/
    _count?: true | VerificationTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: VerificationTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type GetVerificationTokenAggregateType<T extends VerificationTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateVerificationToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateVerificationToken[P]>
      : GetScalarType<T[P], AggregateVerificationToken[P]>
  }




  export type VerificationTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: VerificationTokenWhereInput
    orderBy?: VerificationTokenOrderByWithAggregationInput | VerificationTokenOrderByWithAggregationInput[]
    by: VerificationTokenScalarFieldEnum[] | VerificationTokenScalarFieldEnum
    having?: VerificationTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: VerificationTokenCountAggregateInputType | true
    _min?: VerificationTokenMinAggregateInputType
    _max?: VerificationTokenMaxAggregateInputType
  }

  export type VerificationTokenGroupByOutputType = {
    id: string
    identifier: string
    token: string
    expires: Date
    _count: VerificationTokenCountAggregateOutputType | null
    _min: VerificationTokenMinAggregateOutputType | null
    _max: VerificationTokenMaxAggregateOutputType | null
  }

  type GetVerificationTokenGroupByPayload<T extends VerificationTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<VerificationTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof VerificationTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
            : GetScalarType<T[P], VerificationTokenGroupByOutputType[P]>
        }
      >
    >


  export type VerificationTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }, ExtArgs["result"]["verificationToken"]>

  export type VerificationTokenSelectScalar = {
    id?: boolean
    identifier?: boolean
    token?: boolean
    expires?: boolean
  }

  export type VerificationTokenOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "identifier" | "token" | "expires", ExtArgs["result"]["verificationToken"]>

  export type $VerificationTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "VerificationToken"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      identifier: string
      token: string
      expires: Date
    }, ExtArgs["result"]["verificationToken"]>
    composites: {}
  }

  type VerificationTokenGetPayload<S extends boolean | null | undefined | VerificationTokenDefaultArgs> = $Result.GetResult<Prisma.$VerificationTokenPayload, S>

  type VerificationTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<VerificationTokenFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: VerificationTokenCountAggregateInputType | true
    }

  export interface VerificationTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['VerificationToken'], meta: { name: 'VerificationToken' } }
    /**
     * Find zero or one VerificationToken that matches the filter.
     * @param {VerificationTokenFindUniqueArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends VerificationTokenFindUniqueArgs>(args: SelectSubset<T, VerificationTokenFindUniqueArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one VerificationToken that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {VerificationTokenFindUniqueOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends VerificationTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, VerificationTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends VerificationTokenFindFirstArgs>(args?: SelectSubset<T, VerificationTokenFindFirstArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first VerificationToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindFirstOrThrowArgs} args - Arguments to find a VerificationToken
     * @example
     * // Get one VerificationToken
     * const verificationToken = await prisma.verificationToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends VerificationTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, VerificationTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more VerificationTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany()
     * 
     * // Get first 10 VerificationTokens
     * const verificationTokens = await prisma.verificationToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const verificationTokenWithIdOnly = await prisma.verificationToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends VerificationTokenFindManyArgs>(args?: SelectSubset<T, VerificationTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a VerificationToken.
     * @param {VerificationTokenCreateArgs} args - Arguments to create a VerificationToken.
     * @example
     * // Create one VerificationToken
     * const VerificationToken = await prisma.verificationToken.create({
     *   data: {
     *     // ... data to create a VerificationToken
     *   }
     * })
     * 
     */
    create<T extends VerificationTokenCreateArgs>(args: SelectSubset<T, VerificationTokenCreateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many VerificationTokens.
     * @param {VerificationTokenCreateManyArgs} args - Arguments to create many VerificationTokens.
     * @example
     * // Create many VerificationTokens
     * const verificationToken = await prisma.verificationToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends VerificationTokenCreateManyArgs>(args?: SelectSubset<T, VerificationTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many VerificationTokens and returns the data saved in the database.
     * @param {VerificationTokenCreateManyAndReturnArgs} args - Arguments to create many VerificationTokens.
     * @example
     * // Create many VerificationTokens
     * const verificationToken = await prisma.verificationToken.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many VerificationTokens and only return the `id`
     * const verificationTokenWithIdOnly = await prisma.verificationToken.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends VerificationTokenCreateManyAndReturnArgs>(args?: SelectSubset<T, VerificationTokenCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a VerificationToken.
     * @param {VerificationTokenDeleteArgs} args - Arguments to delete one VerificationToken.
     * @example
     * // Delete one VerificationToken
     * const VerificationToken = await prisma.verificationToken.delete({
     *   where: {
     *     // ... filter to delete one VerificationToken
     *   }
     * })
     * 
     */
    delete<T extends VerificationTokenDeleteArgs>(args: SelectSubset<T, VerificationTokenDeleteArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one VerificationToken.
     * @param {VerificationTokenUpdateArgs} args - Arguments to update one VerificationToken.
     * @example
     * // Update one VerificationToken
     * const verificationToken = await prisma.verificationToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends VerificationTokenUpdateArgs>(args: SelectSubset<T, VerificationTokenUpdateArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more VerificationTokens.
     * @param {VerificationTokenDeleteManyArgs} args - Arguments to filter VerificationTokens to delete.
     * @example
     * // Delete a few VerificationTokens
     * const { count } = await prisma.verificationToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends VerificationTokenDeleteManyArgs>(args?: SelectSubset<T, VerificationTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many VerificationTokens
     * const verificationToken = await prisma.verificationToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends VerificationTokenUpdateManyArgs>(args: SelectSubset<T, VerificationTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more VerificationTokens and returns the data updated in the database.
     * @param {VerificationTokenUpdateManyAndReturnArgs} args - Arguments to update many VerificationTokens.
     * @example
     * // Update many VerificationTokens
     * const verificationToken = await prisma.verificationToken.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more VerificationTokens and only return the `id`
     * const verificationTokenWithIdOnly = await prisma.verificationToken.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends VerificationTokenUpdateManyAndReturnArgs>(args: SelectSubset<T, VerificationTokenUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one VerificationToken.
     * @param {VerificationTokenUpsertArgs} args - Arguments to update or create a VerificationToken.
     * @example
     * // Update or create a VerificationToken
     * const verificationToken = await prisma.verificationToken.upsert({
     *   create: {
     *     // ... data to create a VerificationToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the VerificationToken we want to update
     *   }
     * })
     */
    upsert<T extends VerificationTokenUpsertArgs>(args: SelectSubset<T, VerificationTokenUpsertArgs<ExtArgs>>): Prisma__VerificationTokenClient<$Result.GetResult<Prisma.$VerificationTokenPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of VerificationTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenCountArgs} args - Arguments to filter VerificationTokens to count.
     * @example
     * // Count the number of VerificationTokens
     * const count = await prisma.verificationToken.count({
     *   where: {
     *     // ... the filter for the VerificationTokens we want to count
     *   }
     * })
    **/
    count<T extends VerificationTokenCountArgs>(
      args?: Subset<T, VerificationTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], VerificationTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends VerificationTokenAggregateArgs>(args: Subset<T, VerificationTokenAggregateArgs>): Prisma.PrismaPromise<GetVerificationTokenAggregateType<T>>

    /**
     * Group by VerificationToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {VerificationTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends VerificationTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: VerificationTokenGroupByArgs['orderBy'] }
        : { orderBy?: VerificationTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, VerificationTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetVerificationTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the VerificationToken model
   */
  readonly fields: VerificationTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for VerificationToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__VerificationTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the VerificationToken model
   */
  interface VerificationTokenFieldRefs {
    readonly id: FieldRef<"VerificationToken", 'String'>
    readonly identifier: FieldRef<"VerificationToken", 'String'>
    readonly token: FieldRef<"VerificationToken", 'String'>
    readonly expires: FieldRef<"VerificationToken", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * VerificationToken findUnique
   */
  export type VerificationTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findUniqueOrThrow
   */
  export type VerificationTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken findFirst
   */
  export type VerificationTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findFirstOrThrow
   */
  export type VerificationTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationToken to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of VerificationTokens.
     */
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken findMany
   */
  export type VerificationTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter, which VerificationTokens to fetch.
     */
    where?: VerificationTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of VerificationTokens to fetch.
     */
    orderBy?: VerificationTokenOrderByWithRelationInput | VerificationTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing VerificationTokens.
     */
    cursor?: VerificationTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` VerificationTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` VerificationTokens.
     */
    skip?: number
    distinct?: VerificationTokenScalarFieldEnum | VerificationTokenScalarFieldEnum[]
  }

  /**
   * VerificationToken create
   */
  export type VerificationTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to create a VerificationToken.
     */
    data: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
  }

  /**
   * VerificationToken createMany
   */
  export type VerificationTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many VerificationTokens.
     */
    data: VerificationTokenCreateManyInput | VerificationTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationToken createManyAndReturn
   */
  export type VerificationTokenCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data used to create many VerificationTokens.
     */
    data: VerificationTokenCreateManyInput | VerificationTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * VerificationToken update
   */
  export type VerificationTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data needed to update a VerificationToken.
     */
    data: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
    /**
     * Choose, which VerificationToken to update.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken updateMany
   */
  export type VerificationTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update VerificationTokens.
     */
    data: XOR<VerificationTokenUpdateManyMutationInput, VerificationTokenUncheckedUpdateManyInput>
    /**
     * Filter which VerificationTokens to update
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to update.
     */
    limit?: number
  }

  /**
   * VerificationToken updateManyAndReturn
   */
  export type VerificationTokenUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The data used to update VerificationTokens.
     */
    data: XOR<VerificationTokenUpdateManyMutationInput, VerificationTokenUncheckedUpdateManyInput>
    /**
     * Filter which VerificationTokens to update
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to update.
     */
    limit?: number
  }

  /**
   * VerificationToken upsert
   */
  export type VerificationTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * The filter to search for the VerificationToken to update in case it exists.
     */
    where: VerificationTokenWhereUniqueInput
    /**
     * In case the VerificationToken found by the `where` argument doesn't exist, create a new VerificationToken with this data.
     */
    create: XOR<VerificationTokenCreateInput, VerificationTokenUncheckedCreateInput>
    /**
     * In case the VerificationToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<VerificationTokenUpdateInput, VerificationTokenUncheckedUpdateInput>
  }

  /**
   * VerificationToken delete
   */
  export type VerificationTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
    /**
     * Filter which VerificationToken to delete.
     */
    where: VerificationTokenWhereUniqueInput
  }

  /**
   * VerificationToken deleteMany
   */
  export type VerificationTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which VerificationTokens to delete
     */
    where?: VerificationTokenWhereInput
    /**
     * Limit how many VerificationTokens to delete.
     */
    limit?: number
  }

  /**
   * VerificationToken without action
   */
  export type VerificationTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the VerificationToken
     */
    select?: VerificationTokenSelect<ExtArgs> | null
    /**
     * Omit specific fields from the VerificationToken
     */
    omit?: VerificationTokenOmit<ExtArgs> | null
  }


  /**
   * Model FormSubmission
   */

  export type AggregateFormSubmission = {
    _count: FormSubmissionCountAggregateOutputType | null
    _min: FormSubmissionMinAggregateOutputType | null
    _max: FormSubmissionMaxAggregateOutputType | null
  }

  export type FormSubmissionMinAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    formType: $Enums.FormType | null
    companyName: string | null
    contactName: string | null
    email: string | null
    phone: string | null
    website: string | null
    frequency: string | null
    additionalComments: string | null
    specifications: string | null
  }

  export type FormSubmissionMaxAggregateOutputType = {
    id: string | null
    createdAt: Date | null
    updatedAt: Date | null
    formType: $Enums.FormType | null
    companyName: string | null
    contactName: string | null
    email: string | null
    phone: string | null
    website: string | null
    frequency: string | null
    additionalComments: string | null
    specifications: string | null
  }

  export type FormSubmissionCountAggregateOutputType = {
    id: number
    createdAt: number
    updatedAt: number
    formType: number
    companyName: number
    contactName: number
    email: number
    phone: number
    website: number
    counties: number
    frequency: number
    pickupAddress: number
    additionalComments: number
    specifications: number
    _all: number
  }


  export type FormSubmissionMinAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    formType?: true
    companyName?: true
    contactName?: true
    email?: true
    phone?: true
    website?: true
    frequency?: true
    additionalComments?: true
    specifications?: true
  }

  export type FormSubmissionMaxAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    formType?: true
    companyName?: true
    contactName?: true
    email?: true
    phone?: true
    website?: true
    frequency?: true
    additionalComments?: true
    specifications?: true
  }

  export type FormSubmissionCountAggregateInputType = {
    id?: true
    createdAt?: true
    updatedAt?: true
    formType?: true
    companyName?: true
    contactName?: true
    email?: true
    phone?: true
    website?: true
    counties?: true
    frequency?: true
    pickupAddress?: true
    additionalComments?: true
    specifications?: true
    _all?: true
  }

  export type FormSubmissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FormSubmission to aggregate.
     */
    where?: FormSubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormSubmissions to fetch.
     */
    orderBy?: FormSubmissionOrderByWithRelationInput | FormSubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FormSubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormSubmissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormSubmissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned FormSubmissions
    **/
    _count?: true | FormSubmissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FormSubmissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FormSubmissionMaxAggregateInputType
  }

  export type GetFormSubmissionAggregateType<T extends FormSubmissionAggregateArgs> = {
        [P in keyof T & keyof AggregateFormSubmission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFormSubmission[P]>
      : GetScalarType<T[P], AggregateFormSubmission[P]>
  }




  export type FormSubmissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FormSubmissionWhereInput
    orderBy?: FormSubmissionOrderByWithAggregationInput | FormSubmissionOrderByWithAggregationInput[]
    by: FormSubmissionScalarFieldEnum[] | FormSubmissionScalarFieldEnum
    having?: FormSubmissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FormSubmissionCountAggregateInputType | true
    _min?: FormSubmissionMinAggregateInputType
    _max?: FormSubmissionMaxAggregateInputType
  }

  export type FormSubmissionGroupByOutputType = {
    id: string
    createdAt: Date
    updatedAt: Date
    formType: $Enums.FormType
    companyName: string
    contactName: string
    email: string
    phone: string
    website: string
    counties: JsonValue
    frequency: string
    pickupAddress: JsonValue
    additionalComments: string
    specifications: string
    _count: FormSubmissionCountAggregateOutputType | null
    _min: FormSubmissionMinAggregateOutputType | null
    _max: FormSubmissionMaxAggregateOutputType | null
  }

  type GetFormSubmissionGroupByPayload<T extends FormSubmissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FormSubmissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FormSubmissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FormSubmissionGroupByOutputType[P]>
            : GetScalarType<T[P], FormSubmissionGroupByOutputType[P]>
        }
      >
    >


  export type FormSubmissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    formType?: boolean
    companyName?: boolean
    contactName?: boolean
    email?: boolean
    phone?: boolean
    website?: boolean
    counties?: boolean
    frequency?: boolean
    pickupAddress?: boolean
    additionalComments?: boolean
    specifications?: boolean
  }, ExtArgs["result"]["formSubmission"]>

  export type FormSubmissionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    formType?: boolean
    companyName?: boolean
    contactName?: boolean
    email?: boolean
    phone?: boolean
    website?: boolean
    counties?: boolean
    frequency?: boolean
    pickupAddress?: boolean
    additionalComments?: boolean
    specifications?: boolean
  }, ExtArgs["result"]["formSubmission"]>

  export type FormSubmissionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    formType?: boolean
    companyName?: boolean
    contactName?: boolean
    email?: boolean
    phone?: boolean
    website?: boolean
    counties?: boolean
    frequency?: boolean
    pickupAddress?: boolean
    additionalComments?: boolean
    specifications?: boolean
  }, ExtArgs["result"]["formSubmission"]>

  export type FormSubmissionSelectScalar = {
    id?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    formType?: boolean
    companyName?: boolean
    contactName?: boolean
    email?: boolean
    phone?: boolean
    website?: boolean
    counties?: boolean
    frequency?: boolean
    pickupAddress?: boolean
    additionalComments?: boolean
    specifications?: boolean
  }

  export type FormSubmissionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "createdAt" | "updatedAt" | "formType" | "companyName" | "contactName" | "email" | "phone" | "website" | "counties" | "frequency" | "pickupAddress" | "additionalComments" | "specifications", ExtArgs["result"]["formSubmission"]>

  export type $FormSubmissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "FormSubmission"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      createdAt: Date
      updatedAt: Date
      formType: $Enums.FormType
      companyName: string
      contactName: string
      email: string
      phone: string
      website: string
      counties: Prisma.JsonValue
      frequency: string
      pickupAddress: Prisma.JsonValue
      additionalComments: string
      specifications: string
    }, ExtArgs["result"]["formSubmission"]>
    composites: {}
  }

  type FormSubmissionGetPayload<S extends boolean | null | undefined | FormSubmissionDefaultArgs> = $Result.GetResult<Prisma.$FormSubmissionPayload, S>

  type FormSubmissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<FormSubmissionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: FormSubmissionCountAggregateInputType | true
    }

  export interface FormSubmissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['FormSubmission'], meta: { name: 'FormSubmission' } }
    /**
     * Find zero or one FormSubmission that matches the filter.
     * @param {FormSubmissionFindUniqueArgs} args - Arguments to find a FormSubmission
     * @example
     * // Get one FormSubmission
     * const formSubmission = await prisma.formSubmission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FormSubmissionFindUniqueArgs>(args: SelectSubset<T, FormSubmissionFindUniqueArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one FormSubmission that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {FormSubmissionFindUniqueOrThrowArgs} args - Arguments to find a FormSubmission
     * @example
     * // Get one FormSubmission
     * const formSubmission = await prisma.formSubmission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FormSubmissionFindUniqueOrThrowArgs>(args: SelectSubset<T, FormSubmissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FormSubmission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionFindFirstArgs} args - Arguments to find a FormSubmission
     * @example
     * // Get one FormSubmission
     * const formSubmission = await prisma.formSubmission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FormSubmissionFindFirstArgs>(args?: SelectSubset<T, FormSubmissionFindFirstArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first FormSubmission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionFindFirstOrThrowArgs} args - Arguments to find a FormSubmission
     * @example
     * // Get one FormSubmission
     * const formSubmission = await prisma.formSubmission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FormSubmissionFindFirstOrThrowArgs>(args?: SelectSubset<T, FormSubmissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more FormSubmissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all FormSubmissions
     * const formSubmissions = await prisma.formSubmission.findMany()
     * 
     * // Get first 10 FormSubmissions
     * const formSubmissions = await prisma.formSubmission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const formSubmissionWithIdOnly = await prisma.formSubmission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FormSubmissionFindManyArgs>(args?: SelectSubset<T, FormSubmissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a FormSubmission.
     * @param {FormSubmissionCreateArgs} args - Arguments to create a FormSubmission.
     * @example
     * // Create one FormSubmission
     * const FormSubmission = await prisma.formSubmission.create({
     *   data: {
     *     // ... data to create a FormSubmission
     *   }
     * })
     * 
     */
    create<T extends FormSubmissionCreateArgs>(args: SelectSubset<T, FormSubmissionCreateArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many FormSubmissions.
     * @param {FormSubmissionCreateManyArgs} args - Arguments to create many FormSubmissions.
     * @example
     * // Create many FormSubmissions
     * const formSubmission = await prisma.formSubmission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FormSubmissionCreateManyArgs>(args?: SelectSubset<T, FormSubmissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many FormSubmissions and returns the data saved in the database.
     * @param {FormSubmissionCreateManyAndReturnArgs} args - Arguments to create many FormSubmissions.
     * @example
     * // Create many FormSubmissions
     * const formSubmission = await prisma.formSubmission.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many FormSubmissions and only return the `id`
     * const formSubmissionWithIdOnly = await prisma.formSubmission.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends FormSubmissionCreateManyAndReturnArgs>(args?: SelectSubset<T, FormSubmissionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a FormSubmission.
     * @param {FormSubmissionDeleteArgs} args - Arguments to delete one FormSubmission.
     * @example
     * // Delete one FormSubmission
     * const FormSubmission = await prisma.formSubmission.delete({
     *   where: {
     *     // ... filter to delete one FormSubmission
     *   }
     * })
     * 
     */
    delete<T extends FormSubmissionDeleteArgs>(args: SelectSubset<T, FormSubmissionDeleteArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one FormSubmission.
     * @param {FormSubmissionUpdateArgs} args - Arguments to update one FormSubmission.
     * @example
     * // Update one FormSubmission
     * const formSubmission = await prisma.formSubmission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FormSubmissionUpdateArgs>(args: SelectSubset<T, FormSubmissionUpdateArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more FormSubmissions.
     * @param {FormSubmissionDeleteManyArgs} args - Arguments to filter FormSubmissions to delete.
     * @example
     * // Delete a few FormSubmissions
     * const { count } = await prisma.formSubmission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FormSubmissionDeleteManyArgs>(args?: SelectSubset<T, FormSubmissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FormSubmissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many FormSubmissions
     * const formSubmission = await prisma.formSubmission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FormSubmissionUpdateManyArgs>(args: SelectSubset<T, FormSubmissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more FormSubmissions and returns the data updated in the database.
     * @param {FormSubmissionUpdateManyAndReturnArgs} args - Arguments to update many FormSubmissions.
     * @example
     * // Update many FormSubmissions
     * const formSubmission = await prisma.formSubmission.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more FormSubmissions and only return the `id`
     * const formSubmissionWithIdOnly = await prisma.formSubmission.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends FormSubmissionUpdateManyAndReturnArgs>(args: SelectSubset<T, FormSubmissionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one FormSubmission.
     * @param {FormSubmissionUpsertArgs} args - Arguments to update or create a FormSubmission.
     * @example
     * // Update or create a FormSubmission
     * const formSubmission = await prisma.formSubmission.upsert({
     *   create: {
     *     // ... data to create a FormSubmission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the FormSubmission we want to update
     *   }
     * })
     */
    upsert<T extends FormSubmissionUpsertArgs>(args: SelectSubset<T, FormSubmissionUpsertArgs<ExtArgs>>): Prisma__FormSubmissionClient<$Result.GetResult<Prisma.$FormSubmissionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of FormSubmissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionCountArgs} args - Arguments to filter FormSubmissions to count.
     * @example
     * // Count the number of FormSubmissions
     * const count = await prisma.formSubmission.count({
     *   where: {
     *     // ... the filter for the FormSubmissions we want to count
     *   }
     * })
    **/
    count<T extends FormSubmissionCountArgs>(
      args?: Subset<T, FormSubmissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FormSubmissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a FormSubmission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FormSubmissionAggregateArgs>(args: Subset<T, FormSubmissionAggregateArgs>): Prisma.PrismaPromise<GetFormSubmissionAggregateType<T>>

    /**
     * Group by FormSubmission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FormSubmissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FormSubmissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FormSubmissionGroupByArgs['orderBy'] }
        : { orderBy?: FormSubmissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FormSubmissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFormSubmissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the FormSubmission model
   */
  readonly fields: FormSubmissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for FormSubmission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FormSubmissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the FormSubmission model
   */
  interface FormSubmissionFieldRefs {
    readonly id: FieldRef<"FormSubmission", 'String'>
    readonly createdAt: FieldRef<"FormSubmission", 'DateTime'>
    readonly updatedAt: FieldRef<"FormSubmission", 'DateTime'>
    readonly formType: FieldRef<"FormSubmission", 'FormType'>
    readonly companyName: FieldRef<"FormSubmission", 'String'>
    readonly contactName: FieldRef<"FormSubmission", 'String'>
    readonly email: FieldRef<"FormSubmission", 'String'>
    readonly phone: FieldRef<"FormSubmission", 'String'>
    readonly website: FieldRef<"FormSubmission", 'String'>
    readonly counties: FieldRef<"FormSubmission", 'Json'>
    readonly frequency: FieldRef<"FormSubmission", 'String'>
    readonly pickupAddress: FieldRef<"FormSubmission", 'Json'>
    readonly additionalComments: FieldRef<"FormSubmission", 'String'>
    readonly specifications: FieldRef<"FormSubmission", 'String'>
  }
    

  // Custom InputTypes
  /**
   * FormSubmission findUnique
   */
  export type FormSubmissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormSubmission
     */
    omit?: FormSubmissionOmit<ExtArgs> | null
    /**
     * Filter, which FormSubmission to fetch.
     */
    where: FormSubmissionWhereUniqueInput
  }

  /**
   * FormSubmission findUniqueOrThrow
   */
  export type FormSubmissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormSubmission
     */
    omit?: FormSubmissionOmit<ExtArgs> | null
    /**
     * Filter, which FormSubmission to fetch.
     */
    where: FormSubmissionWhereUniqueInput
  }

  /**
   * FormSubmission findFirst
   */
  export type FormSubmissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormSubmission
     */
    omit?: FormSubmissionOmit<ExtArgs> | null
    /**
     * Filter, which FormSubmission to fetch.
     */
    where?: FormSubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormSubmissions to fetch.
     */
    orderBy?: FormSubmissionOrderByWithRelationInput | FormSubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FormSubmissions.
     */
    cursor?: FormSubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormSubmissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormSubmissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FormSubmissions.
     */
    distinct?: FormSubmissionScalarFieldEnum | FormSubmissionScalarFieldEnum[]
  }

  /**
   * FormSubmission findFirstOrThrow
   */
  export type FormSubmissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormSubmission
     */
    omit?: FormSubmissionOmit<ExtArgs> | null
    /**
     * Filter, which FormSubmission to fetch.
     */
    where?: FormSubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormSubmissions to fetch.
     */
    orderBy?: FormSubmissionOrderByWithRelationInput | FormSubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for FormSubmissions.
     */
    cursor?: FormSubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormSubmissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormSubmissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of FormSubmissions.
     */
    distinct?: FormSubmissionScalarFieldEnum | FormSubmissionScalarFieldEnum[]
  }

  /**
   * FormSubmission findMany
   */
  export type FormSubmissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormSubmission
     */
    omit?: FormSubmissionOmit<ExtArgs> | null
    /**
     * Filter, which FormSubmissions to fetch.
     */
    where?: FormSubmissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of FormSubmissions to fetch.
     */
    orderBy?: FormSubmissionOrderByWithRelationInput | FormSubmissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing FormSubmissions.
     */
    cursor?: FormSubmissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` FormSubmissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` FormSubmissions.
     */
    skip?: number
    distinct?: FormSubmissionScalarFieldEnum | FormSubmissionScalarFieldEnum[]
  }

  /**
   * FormSubmission create
   */
  export type FormSubmissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormSubmission
     */
    omit?: FormSubmissionOmit<ExtArgs> | null
    /**
     * The data needed to create a FormSubmission.
     */
    data: XOR<FormSubmissionCreateInput, FormSubmissionUncheckedCreateInput>
  }

  /**
   * FormSubmission createMany
   */
  export type FormSubmissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many FormSubmissions.
     */
    data: FormSubmissionCreateManyInput | FormSubmissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FormSubmission createManyAndReturn
   */
  export type FormSubmissionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FormSubmission
     */
    omit?: FormSubmissionOmit<ExtArgs> | null
    /**
     * The data used to create many FormSubmissions.
     */
    data: FormSubmissionCreateManyInput | FormSubmissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * FormSubmission update
   */
  export type FormSubmissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormSubmission
     */
    omit?: FormSubmissionOmit<ExtArgs> | null
    /**
     * The data needed to update a FormSubmission.
     */
    data: XOR<FormSubmissionUpdateInput, FormSubmissionUncheckedUpdateInput>
    /**
     * Choose, which FormSubmission to update.
     */
    where: FormSubmissionWhereUniqueInput
  }

  /**
   * FormSubmission updateMany
   */
  export type FormSubmissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update FormSubmissions.
     */
    data: XOR<FormSubmissionUpdateManyMutationInput, FormSubmissionUncheckedUpdateManyInput>
    /**
     * Filter which FormSubmissions to update
     */
    where?: FormSubmissionWhereInput
    /**
     * Limit how many FormSubmissions to update.
     */
    limit?: number
  }

  /**
   * FormSubmission updateManyAndReturn
   */
  export type FormSubmissionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the FormSubmission
     */
    omit?: FormSubmissionOmit<ExtArgs> | null
    /**
     * The data used to update FormSubmissions.
     */
    data: XOR<FormSubmissionUpdateManyMutationInput, FormSubmissionUncheckedUpdateManyInput>
    /**
     * Filter which FormSubmissions to update
     */
    where?: FormSubmissionWhereInput
    /**
     * Limit how many FormSubmissions to update.
     */
    limit?: number
  }

  /**
   * FormSubmission upsert
   */
  export type FormSubmissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormSubmission
     */
    omit?: FormSubmissionOmit<ExtArgs> | null
    /**
     * The filter to search for the FormSubmission to update in case it exists.
     */
    where: FormSubmissionWhereUniqueInput
    /**
     * In case the FormSubmission found by the `where` argument doesn't exist, create a new FormSubmission with this data.
     */
    create: XOR<FormSubmissionCreateInput, FormSubmissionUncheckedCreateInput>
    /**
     * In case the FormSubmission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FormSubmissionUpdateInput, FormSubmissionUncheckedUpdateInput>
  }

  /**
   * FormSubmission delete
   */
  export type FormSubmissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormSubmission
     */
    omit?: FormSubmissionOmit<ExtArgs> | null
    /**
     * Filter which FormSubmission to delete.
     */
    where: FormSubmissionWhereUniqueInput
  }

  /**
   * FormSubmission deleteMany
   */
  export type FormSubmissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which FormSubmissions to delete
     */
    where?: FormSubmissionWhereInput
    /**
     * Limit how many FormSubmissions to delete.
     */
    limit?: number
  }

  /**
   * FormSubmission without action
   */
  export type FormSubmissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FormSubmission
     */
    select?: FormSubmissionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FormSubmission
     */
    omit?: FormSubmissionOmit<ExtArgs> | null
  }


  /**
   * Model LeadCapture
   */

  export type AggregateLeadCapture = {
    _count: LeadCaptureCountAggregateOutputType | null
    _min: LeadCaptureMinAggregateOutputType | null
    _max: LeadCaptureMaxAggregateOutputType | null
  }

  export type LeadCaptureMinAggregateOutputType = {
    id: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    industry: string | null
    newsletterConsent: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type LeadCaptureMaxAggregateOutputType = {
    id: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    industry: string | null
    newsletterConsent: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type LeadCaptureCountAggregateOutputType = {
    id: number
    firstName: number
    lastName: number
    email: number
    industry: number
    newsletterConsent: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type LeadCaptureMinAggregateInputType = {
    id?: true
    firstName?: true
    lastName?: true
    email?: true
    industry?: true
    newsletterConsent?: true
    createdAt?: true
    updatedAt?: true
  }

  export type LeadCaptureMaxAggregateInputType = {
    id?: true
    firstName?: true
    lastName?: true
    email?: true
    industry?: true
    newsletterConsent?: true
    createdAt?: true
    updatedAt?: true
  }

  export type LeadCaptureCountAggregateInputType = {
    id?: true
    firstName?: true
    lastName?: true
    email?: true
    industry?: true
    newsletterConsent?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type LeadCaptureAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LeadCapture to aggregate.
     */
    where?: LeadCaptureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LeadCaptures to fetch.
     */
    orderBy?: LeadCaptureOrderByWithRelationInput | LeadCaptureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: LeadCaptureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LeadCaptures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LeadCaptures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned LeadCaptures
    **/
    _count?: true | LeadCaptureCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LeadCaptureMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LeadCaptureMaxAggregateInputType
  }

  export type GetLeadCaptureAggregateType<T extends LeadCaptureAggregateArgs> = {
        [P in keyof T & keyof AggregateLeadCapture]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLeadCapture[P]>
      : GetScalarType<T[P], AggregateLeadCapture[P]>
  }




  export type LeadCaptureGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: LeadCaptureWhereInput
    orderBy?: LeadCaptureOrderByWithAggregationInput | LeadCaptureOrderByWithAggregationInput[]
    by: LeadCaptureScalarFieldEnum[] | LeadCaptureScalarFieldEnum
    having?: LeadCaptureScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LeadCaptureCountAggregateInputType | true
    _min?: LeadCaptureMinAggregateInputType
    _max?: LeadCaptureMaxAggregateInputType
  }

  export type LeadCaptureGroupByOutputType = {
    id: string
    firstName: string
    lastName: string
    email: string
    industry: string
    newsletterConsent: boolean
    createdAt: Date
    updatedAt: Date
    _count: LeadCaptureCountAggregateOutputType | null
    _min: LeadCaptureMinAggregateOutputType | null
    _max: LeadCaptureMaxAggregateOutputType | null
  }

  type GetLeadCaptureGroupByPayload<T extends LeadCaptureGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LeadCaptureGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LeadCaptureGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LeadCaptureGroupByOutputType[P]>
            : GetScalarType<T[P], LeadCaptureGroupByOutputType[P]>
        }
      >
    >


  export type LeadCaptureSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    industry?: boolean
    newsletterConsent?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["leadCapture"]>

  export type LeadCaptureSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    industry?: boolean
    newsletterConsent?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["leadCapture"]>

  export type LeadCaptureSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    industry?: boolean
    newsletterConsent?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["leadCapture"]>

  export type LeadCaptureSelectScalar = {
    id?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    industry?: boolean
    newsletterConsent?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type LeadCaptureOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "firstName" | "lastName" | "email" | "industry" | "newsletterConsent" | "createdAt" | "updatedAt", ExtArgs["result"]["leadCapture"]>

  export type $LeadCapturePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "LeadCapture"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      firstName: string
      lastName: string
      email: string
      industry: string
      newsletterConsent: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["leadCapture"]>
    composites: {}
  }

  type LeadCaptureGetPayload<S extends boolean | null | undefined | LeadCaptureDefaultArgs> = $Result.GetResult<Prisma.$LeadCapturePayload, S>

  type LeadCaptureCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<LeadCaptureFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LeadCaptureCountAggregateInputType | true
    }

  export interface LeadCaptureDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['LeadCapture'], meta: { name: 'LeadCapture' } }
    /**
     * Find zero or one LeadCapture that matches the filter.
     * @param {LeadCaptureFindUniqueArgs} args - Arguments to find a LeadCapture
     * @example
     * // Get one LeadCapture
     * const leadCapture = await prisma.leadCapture.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends LeadCaptureFindUniqueArgs>(args: SelectSubset<T, LeadCaptureFindUniqueArgs<ExtArgs>>): Prisma__LeadCaptureClient<$Result.GetResult<Prisma.$LeadCapturePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one LeadCapture that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {LeadCaptureFindUniqueOrThrowArgs} args - Arguments to find a LeadCapture
     * @example
     * // Get one LeadCapture
     * const leadCapture = await prisma.leadCapture.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends LeadCaptureFindUniqueOrThrowArgs>(args: SelectSubset<T, LeadCaptureFindUniqueOrThrowArgs<ExtArgs>>): Prisma__LeadCaptureClient<$Result.GetResult<Prisma.$LeadCapturePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LeadCapture that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadCaptureFindFirstArgs} args - Arguments to find a LeadCapture
     * @example
     * // Get one LeadCapture
     * const leadCapture = await prisma.leadCapture.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends LeadCaptureFindFirstArgs>(args?: SelectSubset<T, LeadCaptureFindFirstArgs<ExtArgs>>): Prisma__LeadCaptureClient<$Result.GetResult<Prisma.$LeadCapturePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first LeadCapture that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadCaptureFindFirstOrThrowArgs} args - Arguments to find a LeadCapture
     * @example
     * // Get one LeadCapture
     * const leadCapture = await prisma.leadCapture.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends LeadCaptureFindFirstOrThrowArgs>(args?: SelectSubset<T, LeadCaptureFindFirstOrThrowArgs<ExtArgs>>): Prisma__LeadCaptureClient<$Result.GetResult<Prisma.$LeadCapturePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more LeadCaptures that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadCaptureFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all LeadCaptures
     * const leadCaptures = await prisma.leadCapture.findMany()
     * 
     * // Get first 10 LeadCaptures
     * const leadCaptures = await prisma.leadCapture.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const leadCaptureWithIdOnly = await prisma.leadCapture.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends LeadCaptureFindManyArgs>(args?: SelectSubset<T, LeadCaptureFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadCapturePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a LeadCapture.
     * @param {LeadCaptureCreateArgs} args - Arguments to create a LeadCapture.
     * @example
     * // Create one LeadCapture
     * const LeadCapture = await prisma.leadCapture.create({
     *   data: {
     *     // ... data to create a LeadCapture
     *   }
     * })
     * 
     */
    create<T extends LeadCaptureCreateArgs>(args: SelectSubset<T, LeadCaptureCreateArgs<ExtArgs>>): Prisma__LeadCaptureClient<$Result.GetResult<Prisma.$LeadCapturePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many LeadCaptures.
     * @param {LeadCaptureCreateManyArgs} args - Arguments to create many LeadCaptures.
     * @example
     * // Create many LeadCaptures
     * const leadCapture = await prisma.leadCapture.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends LeadCaptureCreateManyArgs>(args?: SelectSubset<T, LeadCaptureCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many LeadCaptures and returns the data saved in the database.
     * @param {LeadCaptureCreateManyAndReturnArgs} args - Arguments to create many LeadCaptures.
     * @example
     * // Create many LeadCaptures
     * const leadCapture = await prisma.leadCapture.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many LeadCaptures and only return the `id`
     * const leadCaptureWithIdOnly = await prisma.leadCapture.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends LeadCaptureCreateManyAndReturnArgs>(args?: SelectSubset<T, LeadCaptureCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadCapturePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a LeadCapture.
     * @param {LeadCaptureDeleteArgs} args - Arguments to delete one LeadCapture.
     * @example
     * // Delete one LeadCapture
     * const LeadCapture = await prisma.leadCapture.delete({
     *   where: {
     *     // ... filter to delete one LeadCapture
     *   }
     * })
     * 
     */
    delete<T extends LeadCaptureDeleteArgs>(args: SelectSubset<T, LeadCaptureDeleteArgs<ExtArgs>>): Prisma__LeadCaptureClient<$Result.GetResult<Prisma.$LeadCapturePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one LeadCapture.
     * @param {LeadCaptureUpdateArgs} args - Arguments to update one LeadCapture.
     * @example
     * // Update one LeadCapture
     * const leadCapture = await prisma.leadCapture.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends LeadCaptureUpdateArgs>(args: SelectSubset<T, LeadCaptureUpdateArgs<ExtArgs>>): Prisma__LeadCaptureClient<$Result.GetResult<Prisma.$LeadCapturePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more LeadCaptures.
     * @param {LeadCaptureDeleteManyArgs} args - Arguments to filter LeadCaptures to delete.
     * @example
     * // Delete a few LeadCaptures
     * const { count } = await prisma.leadCapture.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends LeadCaptureDeleteManyArgs>(args?: SelectSubset<T, LeadCaptureDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LeadCaptures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadCaptureUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many LeadCaptures
     * const leadCapture = await prisma.leadCapture.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends LeadCaptureUpdateManyArgs>(args: SelectSubset<T, LeadCaptureUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more LeadCaptures and returns the data updated in the database.
     * @param {LeadCaptureUpdateManyAndReturnArgs} args - Arguments to update many LeadCaptures.
     * @example
     * // Update many LeadCaptures
     * const leadCapture = await prisma.leadCapture.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more LeadCaptures and only return the `id`
     * const leadCaptureWithIdOnly = await prisma.leadCapture.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends LeadCaptureUpdateManyAndReturnArgs>(args: SelectSubset<T, LeadCaptureUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$LeadCapturePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one LeadCapture.
     * @param {LeadCaptureUpsertArgs} args - Arguments to update or create a LeadCapture.
     * @example
     * // Update or create a LeadCapture
     * const leadCapture = await prisma.leadCapture.upsert({
     *   create: {
     *     // ... data to create a LeadCapture
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the LeadCapture we want to update
     *   }
     * })
     */
    upsert<T extends LeadCaptureUpsertArgs>(args: SelectSubset<T, LeadCaptureUpsertArgs<ExtArgs>>): Prisma__LeadCaptureClient<$Result.GetResult<Prisma.$LeadCapturePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of LeadCaptures.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadCaptureCountArgs} args - Arguments to filter LeadCaptures to count.
     * @example
     * // Count the number of LeadCaptures
     * const count = await prisma.leadCapture.count({
     *   where: {
     *     // ... the filter for the LeadCaptures we want to count
     *   }
     * })
    **/
    count<T extends LeadCaptureCountArgs>(
      args?: Subset<T, LeadCaptureCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LeadCaptureCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a LeadCapture.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadCaptureAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LeadCaptureAggregateArgs>(args: Subset<T, LeadCaptureAggregateArgs>): Prisma.PrismaPromise<GetLeadCaptureAggregateType<T>>

    /**
     * Group by LeadCapture.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LeadCaptureGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends LeadCaptureGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: LeadCaptureGroupByArgs['orderBy'] }
        : { orderBy?: LeadCaptureGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, LeadCaptureGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLeadCaptureGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the LeadCapture model
   */
  readonly fields: LeadCaptureFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for LeadCapture.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__LeadCaptureClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the LeadCapture model
   */
  interface LeadCaptureFieldRefs {
    readonly id: FieldRef<"LeadCapture", 'String'>
    readonly firstName: FieldRef<"LeadCapture", 'String'>
    readonly lastName: FieldRef<"LeadCapture", 'String'>
    readonly email: FieldRef<"LeadCapture", 'String'>
    readonly industry: FieldRef<"LeadCapture", 'String'>
    readonly newsletterConsent: FieldRef<"LeadCapture", 'Boolean'>
    readonly createdAt: FieldRef<"LeadCapture", 'DateTime'>
    readonly updatedAt: FieldRef<"LeadCapture", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * LeadCapture findUnique
   */
  export type LeadCaptureFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCapture
     */
    select?: LeadCaptureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeadCapture
     */
    omit?: LeadCaptureOmit<ExtArgs> | null
    /**
     * Filter, which LeadCapture to fetch.
     */
    where: LeadCaptureWhereUniqueInput
  }

  /**
   * LeadCapture findUniqueOrThrow
   */
  export type LeadCaptureFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCapture
     */
    select?: LeadCaptureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeadCapture
     */
    omit?: LeadCaptureOmit<ExtArgs> | null
    /**
     * Filter, which LeadCapture to fetch.
     */
    where: LeadCaptureWhereUniqueInput
  }

  /**
   * LeadCapture findFirst
   */
  export type LeadCaptureFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCapture
     */
    select?: LeadCaptureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeadCapture
     */
    omit?: LeadCaptureOmit<ExtArgs> | null
    /**
     * Filter, which LeadCapture to fetch.
     */
    where?: LeadCaptureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LeadCaptures to fetch.
     */
    orderBy?: LeadCaptureOrderByWithRelationInput | LeadCaptureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LeadCaptures.
     */
    cursor?: LeadCaptureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LeadCaptures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LeadCaptures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LeadCaptures.
     */
    distinct?: LeadCaptureScalarFieldEnum | LeadCaptureScalarFieldEnum[]
  }

  /**
   * LeadCapture findFirstOrThrow
   */
  export type LeadCaptureFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCapture
     */
    select?: LeadCaptureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeadCapture
     */
    omit?: LeadCaptureOmit<ExtArgs> | null
    /**
     * Filter, which LeadCapture to fetch.
     */
    where?: LeadCaptureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LeadCaptures to fetch.
     */
    orderBy?: LeadCaptureOrderByWithRelationInput | LeadCaptureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for LeadCaptures.
     */
    cursor?: LeadCaptureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LeadCaptures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LeadCaptures.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of LeadCaptures.
     */
    distinct?: LeadCaptureScalarFieldEnum | LeadCaptureScalarFieldEnum[]
  }

  /**
   * LeadCapture findMany
   */
  export type LeadCaptureFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCapture
     */
    select?: LeadCaptureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeadCapture
     */
    omit?: LeadCaptureOmit<ExtArgs> | null
    /**
     * Filter, which LeadCaptures to fetch.
     */
    where?: LeadCaptureWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of LeadCaptures to fetch.
     */
    orderBy?: LeadCaptureOrderByWithRelationInput | LeadCaptureOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing LeadCaptures.
     */
    cursor?: LeadCaptureWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` LeadCaptures from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` LeadCaptures.
     */
    skip?: number
    distinct?: LeadCaptureScalarFieldEnum | LeadCaptureScalarFieldEnum[]
  }

  /**
   * LeadCapture create
   */
  export type LeadCaptureCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCapture
     */
    select?: LeadCaptureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeadCapture
     */
    omit?: LeadCaptureOmit<ExtArgs> | null
    /**
     * The data needed to create a LeadCapture.
     */
    data: XOR<LeadCaptureCreateInput, LeadCaptureUncheckedCreateInput>
  }

  /**
   * LeadCapture createMany
   */
  export type LeadCaptureCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many LeadCaptures.
     */
    data: LeadCaptureCreateManyInput | LeadCaptureCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LeadCapture createManyAndReturn
   */
  export type LeadCaptureCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCapture
     */
    select?: LeadCaptureSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LeadCapture
     */
    omit?: LeadCaptureOmit<ExtArgs> | null
    /**
     * The data used to create many LeadCaptures.
     */
    data: LeadCaptureCreateManyInput | LeadCaptureCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * LeadCapture update
   */
  export type LeadCaptureUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCapture
     */
    select?: LeadCaptureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeadCapture
     */
    omit?: LeadCaptureOmit<ExtArgs> | null
    /**
     * The data needed to update a LeadCapture.
     */
    data: XOR<LeadCaptureUpdateInput, LeadCaptureUncheckedUpdateInput>
    /**
     * Choose, which LeadCapture to update.
     */
    where: LeadCaptureWhereUniqueInput
  }

  /**
   * LeadCapture updateMany
   */
  export type LeadCaptureUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update LeadCaptures.
     */
    data: XOR<LeadCaptureUpdateManyMutationInput, LeadCaptureUncheckedUpdateManyInput>
    /**
     * Filter which LeadCaptures to update
     */
    where?: LeadCaptureWhereInput
    /**
     * Limit how many LeadCaptures to update.
     */
    limit?: number
  }

  /**
   * LeadCapture updateManyAndReturn
   */
  export type LeadCaptureUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCapture
     */
    select?: LeadCaptureSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the LeadCapture
     */
    omit?: LeadCaptureOmit<ExtArgs> | null
    /**
     * The data used to update LeadCaptures.
     */
    data: XOR<LeadCaptureUpdateManyMutationInput, LeadCaptureUncheckedUpdateManyInput>
    /**
     * Filter which LeadCaptures to update
     */
    where?: LeadCaptureWhereInput
    /**
     * Limit how many LeadCaptures to update.
     */
    limit?: number
  }

  /**
   * LeadCapture upsert
   */
  export type LeadCaptureUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCapture
     */
    select?: LeadCaptureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeadCapture
     */
    omit?: LeadCaptureOmit<ExtArgs> | null
    /**
     * The filter to search for the LeadCapture to update in case it exists.
     */
    where: LeadCaptureWhereUniqueInput
    /**
     * In case the LeadCapture found by the `where` argument doesn't exist, create a new LeadCapture with this data.
     */
    create: XOR<LeadCaptureCreateInput, LeadCaptureUncheckedCreateInput>
    /**
     * In case the LeadCapture was found with the provided `where` argument, update it with this data.
     */
    update: XOR<LeadCaptureUpdateInput, LeadCaptureUncheckedUpdateInput>
  }

  /**
   * LeadCapture delete
   */
  export type LeadCaptureDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCapture
     */
    select?: LeadCaptureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeadCapture
     */
    omit?: LeadCaptureOmit<ExtArgs> | null
    /**
     * Filter which LeadCapture to delete.
     */
    where: LeadCaptureWhereUniqueInput
  }

  /**
   * LeadCapture deleteMany
   */
  export type LeadCaptureDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which LeadCaptures to delete
     */
    where?: LeadCaptureWhereInput
    /**
     * Limit how many LeadCaptures to delete.
     */
    limit?: number
  }

  /**
   * LeadCapture without action
   */
  export type LeadCaptureDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the LeadCapture
     */
    select?: LeadCaptureSelect<ExtArgs> | null
    /**
     * Omit specific fields from the LeadCapture
     */
    omit?: LeadCaptureOmit<ExtArgs> | null
  }


  /**
   * Model JobApplication
   */

  export type AggregateJobApplication = {
    _count: JobApplicationCountAggregateOutputType | null
    _min: JobApplicationMinAggregateOutputType | null
    _max: JobApplicationMaxAggregateOutputType | null
  }

  export type JobApplicationMinAggregateOutputType = {
    id: string | null
    profileId: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    position: string | null
    addressStreet: string | null
    addressCity: string | null
    addressState: string | null
    addressZip: string | null
    education: string | null
    workExperience: string | null
    skills: string | null
    coverLetter: string | null
    resumeFilePath: string | null
    driversLicenseFilePath: string | null
    insuranceFilePath: string | null
    vehicleRegFilePath: string | null
    foodHandlerFilePath: string | null
    hipaaFilePath: string | null
    driverPhotoFilePath: string | null
    carPhotoFilePath: string | null
    equipmentPhotoFilePath: string | null
    status: $Enums.ApplicationStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type JobApplicationMaxAggregateOutputType = {
    id: string | null
    profileId: string | null
    firstName: string | null
    lastName: string | null
    email: string | null
    phone: string | null
    position: string | null
    addressStreet: string | null
    addressCity: string | null
    addressState: string | null
    addressZip: string | null
    education: string | null
    workExperience: string | null
    skills: string | null
    coverLetter: string | null
    resumeFilePath: string | null
    driversLicenseFilePath: string | null
    insuranceFilePath: string | null
    vehicleRegFilePath: string | null
    foodHandlerFilePath: string | null
    hipaaFilePath: string | null
    driverPhotoFilePath: string | null
    carPhotoFilePath: string | null
    equipmentPhotoFilePath: string | null
    status: $Enums.ApplicationStatus | null
    createdAt: Date | null
    updatedAt: Date | null
    deletedAt: Date | null
  }

  export type JobApplicationCountAggregateOutputType = {
    id: number
    profileId: number
    firstName: number
    lastName: number
    email: number
    phone: number
    position: number
    addressStreet: number
    addressCity: number
    addressState: number
    addressZip: number
    education: number
    workExperience: number
    skills: number
    coverLetter: number
    resumeFilePath: number
    driversLicenseFilePath: number
    insuranceFilePath: number
    vehicleRegFilePath: number
    foodHandlerFilePath: number
    hipaaFilePath: number
    driverPhotoFilePath: number
    carPhotoFilePath: number
    equipmentPhotoFilePath: number
    status: number
    createdAt: number
    updatedAt: number
    deletedAt: number
    _all: number
  }


  export type JobApplicationMinAggregateInputType = {
    id?: true
    profileId?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    position?: true
    addressStreet?: true
    addressCity?: true
    addressState?: true
    addressZip?: true
    education?: true
    workExperience?: true
    skills?: true
    coverLetter?: true
    resumeFilePath?: true
    driversLicenseFilePath?: true
    insuranceFilePath?: true
    vehicleRegFilePath?: true
    foodHandlerFilePath?: true
    hipaaFilePath?: true
    driverPhotoFilePath?: true
    carPhotoFilePath?: true
    equipmentPhotoFilePath?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type JobApplicationMaxAggregateInputType = {
    id?: true
    profileId?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    position?: true
    addressStreet?: true
    addressCity?: true
    addressState?: true
    addressZip?: true
    education?: true
    workExperience?: true
    skills?: true
    coverLetter?: true
    resumeFilePath?: true
    driversLicenseFilePath?: true
    insuranceFilePath?: true
    vehicleRegFilePath?: true
    foodHandlerFilePath?: true
    hipaaFilePath?: true
    driverPhotoFilePath?: true
    carPhotoFilePath?: true
    equipmentPhotoFilePath?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
  }

  export type JobApplicationCountAggregateInputType = {
    id?: true
    profileId?: true
    firstName?: true
    lastName?: true
    email?: true
    phone?: true
    position?: true
    addressStreet?: true
    addressCity?: true
    addressState?: true
    addressZip?: true
    education?: true
    workExperience?: true
    skills?: true
    coverLetter?: true
    resumeFilePath?: true
    driversLicenseFilePath?: true
    insuranceFilePath?: true
    vehicleRegFilePath?: true
    foodHandlerFilePath?: true
    hipaaFilePath?: true
    driverPhotoFilePath?: true
    carPhotoFilePath?: true
    equipmentPhotoFilePath?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    deletedAt?: true
    _all?: true
  }

  export type JobApplicationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobApplication to aggregate.
     */
    where?: JobApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobApplications to fetch.
     */
    orderBy?: JobApplicationOrderByWithRelationInput | JobApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: JobApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned JobApplications
    **/
    _count?: true | JobApplicationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: JobApplicationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: JobApplicationMaxAggregateInputType
  }

  export type GetJobApplicationAggregateType<T extends JobApplicationAggregateArgs> = {
        [P in keyof T & keyof AggregateJobApplication]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateJobApplication[P]>
      : GetScalarType<T[P], AggregateJobApplication[P]>
  }




  export type JobApplicationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: JobApplicationWhereInput
    orderBy?: JobApplicationOrderByWithAggregationInput | JobApplicationOrderByWithAggregationInput[]
    by: JobApplicationScalarFieldEnum[] | JobApplicationScalarFieldEnum
    having?: JobApplicationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: JobApplicationCountAggregateInputType | true
    _min?: JobApplicationMinAggregateInputType
    _max?: JobApplicationMaxAggregateInputType
  }

  export type JobApplicationGroupByOutputType = {
    id: string
    profileId: string | null
    firstName: string
    lastName: string
    email: string
    phone: string | null
    position: string
    addressStreet: string
    addressCity: string
    addressState: string
    addressZip: string
    education: string | null
    workExperience: string | null
    skills: string | null
    coverLetter: string | null
    resumeFilePath: string | null
    driversLicenseFilePath: string | null
    insuranceFilePath: string | null
    vehicleRegFilePath: string | null
    foodHandlerFilePath: string | null
    hipaaFilePath: string | null
    driverPhotoFilePath: string | null
    carPhotoFilePath: string | null
    equipmentPhotoFilePath: string | null
    status: $Enums.ApplicationStatus
    createdAt: Date
    updatedAt: Date
    deletedAt: Date | null
    _count: JobApplicationCountAggregateOutputType | null
    _min: JobApplicationMinAggregateOutputType | null
    _max: JobApplicationMaxAggregateOutputType | null
  }

  type GetJobApplicationGroupByPayload<T extends JobApplicationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<JobApplicationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof JobApplicationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], JobApplicationGroupByOutputType[P]>
            : GetScalarType<T[P], JobApplicationGroupByOutputType[P]>
        }
      >
    >


  export type JobApplicationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    profileId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    position?: boolean
    addressStreet?: boolean
    addressCity?: boolean
    addressState?: boolean
    addressZip?: boolean
    education?: boolean
    workExperience?: boolean
    skills?: boolean
    coverLetter?: boolean
    resumeFilePath?: boolean
    driversLicenseFilePath?: boolean
    insuranceFilePath?: boolean
    vehicleRegFilePath?: boolean
    foodHandlerFilePath?: boolean
    hipaaFilePath?: boolean
    driverPhotoFilePath?: boolean
    carPhotoFilePath?: boolean
    equipmentPhotoFilePath?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    fileUploads?: boolean | JobApplication$fileUploadsArgs<ExtArgs>
    profile?: boolean | JobApplication$profileArgs<ExtArgs>
    _count?: boolean | JobApplicationCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["jobApplication"]>

  export type JobApplicationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    profileId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    position?: boolean
    addressStreet?: boolean
    addressCity?: boolean
    addressState?: boolean
    addressZip?: boolean
    education?: boolean
    workExperience?: boolean
    skills?: boolean
    coverLetter?: boolean
    resumeFilePath?: boolean
    driversLicenseFilePath?: boolean
    insuranceFilePath?: boolean
    vehicleRegFilePath?: boolean
    foodHandlerFilePath?: boolean
    hipaaFilePath?: boolean
    driverPhotoFilePath?: boolean
    carPhotoFilePath?: boolean
    equipmentPhotoFilePath?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    profile?: boolean | JobApplication$profileArgs<ExtArgs>
  }, ExtArgs["result"]["jobApplication"]>

  export type JobApplicationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    profileId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    position?: boolean
    addressStreet?: boolean
    addressCity?: boolean
    addressState?: boolean
    addressZip?: boolean
    education?: boolean
    workExperience?: boolean
    skills?: boolean
    coverLetter?: boolean
    resumeFilePath?: boolean
    driversLicenseFilePath?: boolean
    insuranceFilePath?: boolean
    vehicleRegFilePath?: boolean
    foodHandlerFilePath?: boolean
    hipaaFilePath?: boolean
    driverPhotoFilePath?: boolean
    carPhotoFilePath?: boolean
    equipmentPhotoFilePath?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
    profile?: boolean | JobApplication$profileArgs<ExtArgs>
  }, ExtArgs["result"]["jobApplication"]>

  export type JobApplicationSelectScalar = {
    id?: boolean
    profileId?: boolean
    firstName?: boolean
    lastName?: boolean
    email?: boolean
    phone?: boolean
    position?: boolean
    addressStreet?: boolean
    addressCity?: boolean
    addressState?: boolean
    addressZip?: boolean
    education?: boolean
    workExperience?: boolean
    skills?: boolean
    coverLetter?: boolean
    resumeFilePath?: boolean
    driversLicenseFilePath?: boolean
    insuranceFilePath?: boolean
    vehicleRegFilePath?: boolean
    foodHandlerFilePath?: boolean
    hipaaFilePath?: boolean
    driverPhotoFilePath?: boolean
    carPhotoFilePath?: boolean
    equipmentPhotoFilePath?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    deletedAt?: boolean
  }

  export type JobApplicationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "profileId" | "firstName" | "lastName" | "email" | "phone" | "position" | "addressStreet" | "addressCity" | "addressState" | "addressZip" | "education" | "workExperience" | "skills" | "coverLetter" | "resumeFilePath" | "driversLicenseFilePath" | "insuranceFilePath" | "vehicleRegFilePath" | "foodHandlerFilePath" | "hipaaFilePath" | "driverPhotoFilePath" | "carPhotoFilePath" | "equipmentPhotoFilePath" | "status" | "createdAt" | "updatedAt" | "deletedAt", ExtArgs["result"]["jobApplication"]>
  export type JobApplicationInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    fileUploads?: boolean | JobApplication$fileUploadsArgs<ExtArgs>
    profile?: boolean | JobApplication$profileArgs<ExtArgs>
    _count?: boolean | JobApplicationCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type JobApplicationIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profile?: boolean | JobApplication$profileArgs<ExtArgs>
  }
  export type JobApplicationIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    profile?: boolean | JobApplication$profileArgs<ExtArgs>
  }

  export type $JobApplicationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "JobApplication"
    objects: {
      fileUploads: Prisma.$FileUploadPayload<ExtArgs>[]
      profile: Prisma.$ProfilePayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      profileId: string | null
      firstName: string
      lastName: string
      email: string
      phone: string | null
      position: string
      addressStreet: string
      addressCity: string
      addressState: string
      addressZip: string
      education: string | null
      workExperience: string | null
      skills: string | null
      coverLetter: string | null
      resumeFilePath: string | null
      driversLicenseFilePath: string | null
      insuranceFilePath: string | null
      vehicleRegFilePath: string | null
      foodHandlerFilePath: string | null
      hipaaFilePath: string | null
      driverPhotoFilePath: string | null
      carPhotoFilePath: string | null
      equipmentPhotoFilePath: string | null
      status: $Enums.ApplicationStatus
      createdAt: Date
      updatedAt: Date
      deletedAt: Date | null
    }, ExtArgs["result"]["jobApplication"]>
    composites: {}
  }

  type JobApplicationGetPayload<S extends boolean | null | undefined | JobApplicationDefaultArgs> = $Result.GetResult<Prisma.$JobApplicationPayload, S>

  type JobApplicationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<JobApplicationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: JobApplicationCountAggregateInputType | true
    }

  export interface JobApplicationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['JobApplication'], meta: { name: 'JobApplication' } }
    /**
     * Find zero or one JobApplication that matches the filter.
     * @param {JobApplicationFindUniqueArgs} args - Arguments to find a JobApplication
     * @example
     * // Get one JobApplication
     * const jobApplication = await prisma.jobApplication.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends JobApplicationFindUniqueArgs>(args: SelectSubset<T, JobApplicationFindUniqueArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one JobApplication that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {JobApplicationFindUniqueOrThrowArgs} args - Arguments to find a JobApplication
     * @example
     * // Get one JobApplication
     * const jobApplication = await prisma.jobApplication.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends JobApplicationFindUniqueOrThrowArgs>(args: SelectSubset<T, JobApplicationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first JobApplication that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationFindFirstArgs} args - Arguments to find a JobApplication
     * @example
     * // Get one JobApplication
     * const jobApplication = await prisma.jobApplication.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends JobApplicationFindFirstArgs>(args?: SelectSubset<T, JobApplicationFindFirstArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first JobApplication that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationFindFirstOrThrowArgs} args - Arguments to find a JobApplication
     * @example
     * // Get one JobApplication
     * const jobApplication = await prisma.jobApplication.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends JobApplicationFindFirstOrThrowArgs>(args?: SelectSubset<T, JobApplicationFindFirstOrThrowArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more JobApplications that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all JobApplications
     * const jobApplications = await prisma.jobApplication.findMany()
     * 
     * // Get first 10 JobApplications
     * const jobApplications = await prisma.jobApplication.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const jobApplicationWithIdOnly = await prisma.jobApplication.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends JobApplicationFindManyArgs>(args?: SelectSubset<T, JobApplicationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a JobApplication.
     * @param {JobApplicationCreateArgs} args - Arguments to create a JobApplication.
     * @example
     * // Create one JobApplication
     * const JobApplication = await prisma.jobApplication.create({
     *   data: {
     *     // ... data to create a JobApplication
     *   }
     * })
     * 
     */
    create<T extends JobApplicationCreateArgs>(args: SelectSubset<T, JobApplicationCreateArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many JobApplications.
     * @param {JobApplicationCreateManyArgs} args - Arguments to create many JobApplications.
     * @example
     * // Create many JobApplications
     * const jobApplication = await prisma.jobApplication.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends JobApplicationCreateManyArgs>(args?: SelectSubset<T, JobApplicationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many JobApplications and returns the data saved in the database.
     * @param {JobApplicationCreateManyAndReturnArgs} args - Arguments to create many JobApplications.
     * @example
     * // Create many JobApplications
     * const jobApplication = await prisma.jobApplication.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many JobApplications and only return the `id`
     * const jobApplicationWithIdOnly = await prisma.jobApplication.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends JobApplicationCreateManyAndReturnArgs>(args?: SelectSubset<T, JobApplicationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a JobApplication.
     * @param {JobApplicationDeleteArgs} args - Arguments to delete one JobApplication.
     * @example
     * // Delete one JobApplication
     * const JobApplication = await prisma.jobApplication.delete({
     *   where: {
     *     // ... filter to delete one JobApplication
     *   }
     * })
     * 
     */
    delete<T extends JobApplicationDeleteArgs>(args: SelectSubset<T, JobApplicationDeleteArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one JobApplication.
     * @param {JobApplicationUpdateArgs} args - Arguments to update one JobApplication.
     * @example
     * // Update one JobApplication
     * const jobApplication = await prisma.jobApplication.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends JobApplicationUpdateArgs>(args: SelectSubset<T, JobApplicationUpdateArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more JobApplications.
     * @param {JobApplicationDeleteManyArgs} args - Arguments to filter JobApplications to delete.
     * @example
     * // Delete a few JobApplications
     * const { count } = await prisma.jobApplication.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends JobApplicationDeleteManyArgs>(args?: SelectSubset<T, JobApplicationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many JobApplications
     * const jobApplication = await prisma.jobApplication.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends JobApplicationUpdateManyArgs>(args: SelectSubset<T, JobApplicationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more JobApplications and returns the data updated in the database.
     * @param {JobApplicationUpdateManyAndReturnArgs} args - Arguments to update many JobApplications.
     * @example
     * // Update many JobApplications
     * const jobApplication = await prisma.jobApplication.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more JobApplications and only return the `id`
     * const jobApplicationWithIdOnly = await prisma.jobApplication.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends JobApplicationUpdateManyAndReturnArgs>(args: SelectSubset<T, JobApplicationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one JobApplication.
     * @param {JobApplicationUpsertArgs} args - Arguments to update or create a JobApplication.
     * @example
     * // Update or create a JobApplication
     * const jobApplication = await prisma.jobApplication.upsert({
     *   create: {
     *     // ... data to create a JobApplication
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the JobApplication we want to update
     *   }
     * })
     */
    upsert<T extends JobApplicationUpsertArgs>(args: SelectSubset<T, JobApplicationUpsertArgs<ExtArgs>>): Prisma__JobApplicationClient<$Result.GetResult<Prisma.$JobApplicationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of JobApplications.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationCountArgs} args - Arguments to filter JobApplications to count.
     * @example
     * // Count the number of JobApplications
     * const count = await prisma.jobApplication.count({
     *   where: {
     *     // ... the filter for the JobApplications we want to count
     *   }
     * })
    **/
    count<T extends JobApplicationCountArgs>(
      args?: Subset<T, JobApplicationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], JobApplicationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a JobApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends JobApplicationAggregateArgs>(args: Subset<T, JobApplicationAggregateArgs>): Prisma.PrismaPromise<GetJobApplicationAggregateType<T>>

    /**
     * Group by JobApplication.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {JobApplicationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends JobApplicationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: JobApplicationGroupByArgs['orderBy'] }
        : { orderBy?: JobApplicationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, JobApplicationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetJobApplicationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the JobApplication model
   */
  readonly fields: JobApplicationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for JobApplication.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__JobApplicationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    fileUploads<T extends JobApplication$fileUploadsArgs<ExtArgs> = {}>(args?: Subset<T, JobApplication$fileUploadsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FileUploadPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    profile<T extends JobApplication$profileArgs<ExtArgs> = {}>(args?: Subset<T, JobApplication$profileArgs<ExtArgs>>): Prisma__ProfileClient<$Result.GetResult<Prisma.$ProfilePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the JobApplication model
   */
  interface JobApplicationFieldRefs {
    readonly id: FieldRef<"JobApplication", 'String'>
    readonly profileId: FieldRef<"JobApplication", 'String'>
    readonly firstName: FieldRef<"JobApplication", 'String'>
    readonly lastName: FieldRef<"JobApplication", 'String'>
    readonly email: FieldRef<"JobApplication", 'String'>
    readonly phone: FieldRef<"JobApplication", 'String'>
    readonly position: FieldRef<"JobApplication", 'String'>
    readonly addressStreet: FieldRef<"JobApplication", 'String'>
    readonly addressCity: FieldRef<"JobApplication", 'String'>
    readonly addressState: FieldRef<"JobApplication", 'String'>
    readonly addressZip: FieldRef<"JobApplication", 'String'>
    readonly education: FieldRef<"JobApplication", 'String'>
    readonly workExperience: FieldRef<"JobApplication", 'String'>
    readonly skills: FieldRef<"JobApplication", 'String'>
    readonly coverLetter: FieldRef<"JobApplication", 'String'>
    readonly resumeFilePath: FieldRef<"JobApplication", 'String'>
    readonly driversLicenseFilePath: FieldRef<"JobApplication", 'String'>
    readonly insuranceFilePath: FieldRef<"JobApplication", 'String'>
    readonly vehicleRegFilePath: FieldRef<"JobApplication", 'String'>
    readonly foodHandlerFilePath: FieldRef<"JobApplication", 'String'>
    readonly hipaaFilePath: FieldRef<"JobApplication", 'String'>
    readonly driverPhotoFilePath: FieldRef<"JobApplication", 'String'>
    readonly carPhotoFilePath: FieldRef<"JobApplication", 'String'>
    readonly equipmentPhotoFilePath: FieldRef<"JobApplication", 'String'>
    readonly status: FieldRef<"JobApplication", 'ApplicationStatus'>
    readonly createdAt: FieldRef<"JobApplication", 'DateTime'>
    readonly updatedAt: FieldRef<"JobApplication", 'DateTime'>
    readonly deletedAt: FieldRef<"JobApplication", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * JobApplication findUnique
   */
  export type JobApplicationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * Filter, which JobApplication to fetch.
     */
    where: JobApplicationWhereUniqueInput
  }

  /**
   * JobApplication findUniqueOrThrow
   */
  export type JobApplicationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * Filter, which JobApplication to fetch.
     */
    where: JobApplicationWhereUniqueInput
  }

  /**
   * JobApplication findFirst
   */
  export type JobApplicationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * Filter, which JobApplication to fetch.
     */
    where?: JobApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobApplications to fetch.
     */
    orderBy?: JobApplicationOrderByWithRelationInput | JobApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobApplications.
     */
    cursor?: JobApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobApplications.
     */
    distinct?: JobApplicationScalarFieldEnum | JobApplicationScalarFieldEnum[]
  }

  /**
   * JobApplication findFirstOrThrow
   */
  export type JobApplicationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * Filter, which JobApplication to fetch.
     */
    where?: JobApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobApplications to fetch.
     */
    orderBy?: JobApplicationOrderByWithRelationInput | JobApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for JobApplications.
     */
    cursor?: JobApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobApplications.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of JobApplications.
     */
    distinct?: JobApplicationScalarFieldEnum | JobApplicationScalarFieldEnum[]
  }

  /**
   * JobApplication findMany
   */
  export type JobApplicationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * Filter, which JobApplications to fetch.
     */
    where?: JobApplicationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of JobApplications to fetch.
     */
    orderBy?: JobApplicationOrderByWithRelationInput | JobApplicationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing JobApplications.
     */
    cursor?: JobApplicationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` JobApplications from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` JobApplications.
     */
    skip?: number
    distinct?: JobApplicationScalarFieldEnum | JobApplicationScalarFieldEnum[]
  }

  /**
   * JobApplication create
   */
  export type JobApplicationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * The data needed to create a JobApplication.
     */
    data: XOR<JobApplicationCreateInput, JobApplicationUncheckedCreateInput>
  }

  /**
   * JobApplication createMany
   */
  export type JobApplicationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many JobApplications.
     */
    data: JobApplicationCreateManyInput | JobApplicationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * JobApplication createManyAndReturn
   */
  export type JobApplicationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * The data used to create many JobApplications.
     */
    data: JobApplicationCreateManyInput | JobApplicationCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobApplication update
   */
  export type JobApplicationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * The data needed to update a JobApplication.
     */
    data: XOR<JobApplicationUpdateInput, JobApplicationUncheckedUpdateInput>
    /**
     * Choose, which JobApplication to update.
     */
    where: JobApplicationWhereUniqueInput
  }

  /**
   * JobApplication updateMany
   */
  export type JobApplicationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update JobApplications.
     */
    data: XOR<JobApplicationUpdateManyMutationInput, JobApplicationUncheckedUpdateManyInput>
    /**
     * Filter which JobApplications to update
     */
    where?: JobApplicationWhereInput
    /**
     * Limit how many JobApplications to update.
     */
    limit?: number
  }

  /**
   * JobApplication updateManyAndReturn
   */
  export type JobApplicationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * The data used to update JobApplications.
     */
    data: XOR<JobApplicationUpdateManyMutationInput, JobApplicationUncheckedUpdateManyInput>
    /**
     * Filter which JobApplications to update
     */
    where?: JobApplicationWhereInput
    /**
     * Limit how many JobApplications to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * JobApplication upsert
   */
  export type JobApplicationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * The filter to search for the JobApplication to update in case it exists.
     */
    where: JobApplicationWhereUniqueInput
    /**
     * In case the JobApplication found by the `where` argument doesn't exist, create a new JobApplication with this data.
     */
    create: XOR<JobApplicationCreateInput, JobApplicationUncheckedCreateInput>
    /**
     * In case the JobApplication was found with the provided `where` argument, update it with this data.
     */
    update: XOR<JobApplicationUpdateInput, JobApplicationUncheckedUpdateInput>
  }

  /**
   * JobApplication delete
   */
  export type JobApplicationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
    /**
     * Filter which JobApplication to delete.
     */
    where: JobApplicationWhereUniqueInput
  }

  /**
   * JobApplication deleteMany
   */
  export type JobApplicationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which JobApplications to delete
     */
    where?: JobApplicationWhereInput
    /**
     * Limit how many JobApplications to delete.
     */
    limit?: number
  }

  /**
   * JobApplication.fileUploads
   */
  export type JobApplication$fileUploadsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the FileUpload
     */
    select?: FileUploadSelect<ExtArgs> | null
    /**
     * Omit specific fields from the FileUpload
     */
    omit?: FileUploadOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: FileUploadInclude<ExtArgs> | null
    where?: FileUploadWhereInput
    orderBy?: FileUploadOrderByWithRelationInput | FileUploadOrderByWithRelationInput[]
    cursor?: FileUploadWhereUniqueInput
    take?: number
    skip?: number
    distinct?: FileUploadScalarFieldEnum | FileUploadScalarFieldEnum[]
  }

  /**
   * JobApplication.profile
   */
  export type JobApplication$profileArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Profile
     */
    select?: ProfileSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Profile
     */
    omit?: ProfileOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProfileInclude<ExtArgs> | null
    where?: ProfileWhereInput
  }

  /**
   * JobApplication without action
   */
  export type JobApplicationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the JobApplication
     */
    select?: JobApplicationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the JobApplication
     */
    omit?: JobApplicationOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: JobApplicationInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ProfileScalarFieldEnum: {
    id: 'id',
    guid: 'guid',
    name: 'name',
    email: 'email',
    image: 'image',
    type: 'type',
    companyName: 'companyName',
    contactName: 'contactName',
    contactNumber: 'contactNumber',
    website: 'website',
    street1: 'street1',
    street2: 'street2',
    city: 'city',
    state: 'state',
    zip: 'zip',
    locationNumber: 'locationNumber',
    parkingLoading: 'parkingLoading',
    counties: 'counties',
    timeNeeded: 'timeNeeded',
    cateringBrokerage: 'cateringBrokerage',
    frequency: 'frequency',
    provide: 'provide',
    headCount: 'headCount',
    status: 'status',
    sideNotes: 'sideNotes',
    confirmationCode: 'confirmationCode',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    isTemporaryPassword: 'isTemporaryPassword',
    deletedAt: 'deletedAt'
  };

  export type ProfileScalarFieldEnum = (typeof ProfileScalarFieldEnum)[keyof typeof ProfileScalarFieldEnum]


  export const AccountScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    type: 'type',
    provider: 'provider',
    providerAccountId: 'providerAccountId',
    refreshToken: 'refreshToken',
    accessToken: 'accessToken',
    expiresAt: 'expiresAt',
    tokenType: 'tokenType',
    scope: 'scope',
    idToken: 'idToken',
    sessionState: 'sessionState'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const SessionScalarFieldEnum: {
    id: 'id',
    sessionToken: 'sessionToken',
    userId: 'userId',
    expires: 'expires'
  };

  export type SessionScalarFieldEnum = (typeof SessionScalarFieldEnum)[keyof typeof SessionScalarFieldEnum]


  export const AddressScalarFieldEnum: {
    id: 'id',
    county: 'county',
    street1: 'street1',
    street2: 'street2',
    city: 'city',
    state: 'state',
    zip: 'zip',
    createdAt: 'createdAt',
    createdBy: 'createdBy',
    isRestaurant: 'isRestaurant',
    isShared: 'isShared',
    locationNumber: 'locationNumber',
    parkingLoading: 'parkingLoading',
    updatedAt: 'updatedAt',
    name: 'name',
    latitude: 'latitude',
    longitude: 'longitude',
    deletedAt: 'deletedAt'
  };

  export type AddressScalarFieldEnum = (typeof AddressScalarFieldEnum)[keyof typeof AddressScalarFieldEnum]


  export const CateringRequestScalarFieldEnum: {
    id: 'id',
    guid: 'guid',
    userId: 'userId',
    pickupAddressId: 'pickupAddressId',
    deliveryAddressId: 'deliveryAddressId',
    brokerage: 'brokerage',
    orderNumber: 'orderNumber',
    pickupDateTime: 'pickupDateTime',
    arrivalDateTime: 'arrivalDateTime',
    completeDateTime: 'completeDateTime',
    headcount: 'headcount',
    needHost: 'needHost',
    hoursNeeded: 'hoursNeeded',
    numberOfHosts: 'numberOfHosts',
    clientAttention: 'clientAttention',
    pickupNotes: 'pickupNotes',
    specialNotes: 'specialNotes',
    image: 'image',
    status: 'status',
    orderTotal: 'orderTotal',
    tip: 'tip',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    driverStatus: 'driverStatus',
    deletedAt: 'deletedAt'
  };

  export type CateringRequestScalarFieldEnum = (typeof CateringRequestScalarFieldEnum)[keyof typeof CateringRequestScalarFieldEnum]


  export const DispatchScalarFieldEnum: {
    id: 'id',
    cateringRequestId: 'cateringRequestId',
    createdAt: 'createdAt',
    driverId: 'driverId',
    onDemandId: 'onDemandId',
    updatedAt: 'updatedAt',
    userId: 'userId'
  };

  export type DispatchScalarFieldEnum = (typeof DispatchScalarFieldEnum)[keyof typeof DispatchScalarFieldEnum]


  export const FileUploadScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    fileName: 'fileName',
    fileType: 'fileType',
    fileSize: 'fileSize',
    fileUrl: 'fileUrl',
    uploadedAt: 'uploadedAt',
    updatedAt: 'updatedAt',
    cateringRequestId: 'cateringRequestId',
    onDemandId: 'onDemandId',
    jobApplicationId: 'jobApplicationId',
    category: 'category',
    isTemporary: 'isTemporary'
  };

  export type FileUploadScalarFieldEnum = (typeof FileUploadScalarFieldEnum)[keyof typeof FileUploadScalarFieldEnum]


  export const OnDemandScalarFieldEnum: {
    id: 'id',
    guid: 'guid',
    userId: 'userId',
    pickupAddressId: 'pickupAddressId',
    deliveryAddressId: 'deliveryAddressId',
    orderNumber: 'orderNumber',
    pickupDateTime: 'pickupDateTime',
    arrivalDateTime: 'arrivalDateTime',
    completeDateTime: 'completeDateTime',
    hoursNeeded: 'hoursNeeded',
    itemDelivered: 'itemDelivered',
    vehicleType: 'vehicleType',
    clientAttention: 'clientAttention',
    pickupNotes: 'pickupNotes',
    specialNotes: 'specialNotes',
    image: 'image',
    status: 'status',
    orderTotal: 'orderTotal',
    tip: 'tip',
    length: 'length',
    width: 'width',
    height: 'height',
    weight: 'weight',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    driverStatus: 'driverStatus',
    deletedAt: 'deletedAt'
  };

  export type OnDemandScalarFieldEnum = (typeof OnDemandScalarFieldEnum)[keyof typeof OnDemandScalarFieldEnum]


  export const UserAddressScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    addressId: 'addressId',
    alias: 'alias',
    isDefault: 'isDefault',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserAddressScalarFieldEnum = (typeof UserAddressScalarFieldEnum)[keyof typeof UserAddressScalarFieldEnum]


  export const VerificationTokenScalarFieldEnum: {
    id: 'id',
    identifier: 'identifier',
    token: 'token',
    expires: 'expires'
  };

  export type VerificationTokenScalarFieldEnum = (typeof VerificationTokenScalarFieldEnum)[keyof typeof VerificationTokenScalarFieldEnum]


  export const FormSubmissionScalarFieldEnum: {
    id: 'id',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    formType: 'formType',
    companyName: 'companyName',
    contactName: 'contactName',
    email: 'email',
    phone: 'phone',
    website: 'website',
    counties: 'counties',
    frequency: 'frequency',
    pickupAddress: 'pickupAddress',
    additionalComments: 'additionalComments',
    specifications: 'specifications'
  };

  export type FormSubmissionScalarFieldEnum = (typeof FormSubmissionScalarFieldEnum)[keyof typeof FormSubmissionScalarFieldEnum]


  export const LeadCaptureScalarFieldEnum: {
    id: 'id',
    firstName: 'firstName',
    lastName: 'lastName',
    email: 'email',
    industry: 'industry',
    newsletterConsent: 'newsletterConsent',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type LeadCaptureScalarFieldEnum = (typeof LeadCaptureScalarFieldEnum)[keyof typeof LeadCaptureScalarFieldEnum]


  export const JobApplicationScalarFieldEnum: {
    id: 'id',
    profileId: 'profileId',
    firstName: 'firstName',
    lastName: 'lastName',
    email: 'email',
    phone: 'phone',
    position: 'position',
    addressStreet: 'addressStreet',
    addressCity: 'addressCity',
    addressState: 'addressState',
    addressZip: 'addressZip',
    education: 'education',
    workExperience: 'workExperience',
    skills: 'skills',
    coverLetter: 'coverLetter',
    resumeFilePath: 'resumeFilePath',
    driversLicenseFilePath: 'driversLicenseFilePath',
    insuranceFilePath: 'insuranceFilePath',
    vehicleRegFilePath: 'vehicleRegFilePath',
    foodHandlerFilePath: 'foodHandlerFilePath',
    hipaaFilePath: 'hipaaFilePath',
    driverPhotoFilePath: 'driverPhotoFilePath',
    carPhotoFilePath: 'carPhotoFilePath',
    equipmentPhotoFilePath: 'equipmentPhotoFilePath',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    deletedAt: 'deletedAt'
  };

  export type JobApplicationScalarFieldEnum = (typeof JobApplicationScalarFieldEnum)[keyof typeof JobApplicationScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'UserType'
   */
  export type EnumUserTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserType'>
    


  /**
   * Reference to a field of type 'UserType[]'
   */
  export type ListEnumUserTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserType[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'UserStatus'
   */
  export type EnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus'>
    


  /**
   * Reference to a field of type 'UserStatus[]'
   */
  export type ListEnumUserStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'UserStatus[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'CateringNeedHost'
   */
  export type EnumCateringNeedHostFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CateringNeedHost'>
    


  /**
   * Reference to a field of type 'CateringNeedHost[]'
   */
  export type ListEnumCateringNeedHostFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CateringNeedHost[]'>
    


  /**
   * Reference to a field of type 'CateringStatus'
   */
  export type EnumCateringStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CateringStatus'>
    


  /**
   * Reference to a field of type 'CateringStatus[]'
   */
  export type ListEnumCateringStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'CateringStatus[]'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Decimal[]'
   */
  export type ListDecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal[]'>
    


  /**
   * Reference to a field of type 'DriverStatus'
   */
  export type EnumDriverStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DriverStatus'>
    


  /**
   * Reference to a field of type 'DriverStatus[]'
   */
  export type ListEnumDriverStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DriverStatus[]'>
    


  /**
   * Reference to a field of type 'VehicleType'
   */
  export type EnumVehicleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VehicleType'>
    


  /**
   * Reference to a field of type 'VehicleType[]'
   */
  export type ListEnumVehicleTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'VehicleType[]'>
    


  /**
   * Reference to a field of type 'OnDemandStatus'
   */
  export type EnumOnDemandStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OnDemandStatus'>
    


  /**
   * Reference to a field of type 'OnDemandStatus[]'
   */
  export type ListEnumOnDemandStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OnDemandStatus[]'>
    


  /**
   * Reference to a field of type 'FormType'
   */
  export type EnumFormTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FormType'>
    


  /**
   * Reference to a field of type 'FormType[]'
   */
  export type ListEnumFormTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'FormType[]'>
    


  /**
   * Reference to a field of type 'ApplicationStatus'
   */
  export type EnumApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ApplicationStatus'>
    


  /**
   * Reference to a field of type 'ApplicationStatus[]'
   */
  export type ListEnumApplicationStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'ApplicationStatus[]'>
    
  /**
   * Deep Input Types
   */


  export type ProfileWhereInput = {
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    id?: UuidFilter<"Profile"> | string
    guid?: StringNullableFilter<"Profile"> | string | null
    name?: StringNullableFilter<"Profile"> | string | null
    email?: StringFilter<"Profile"> | string
    image?: StringNullableFilter<"Profile"> | string | null
    type?: EnumUserTypeFilter<"Profile"> | $Enums.UserType
    companyName?: StringNullableFilter<"Profile"> | string | null
    contactName?: StringNullableFilter<"Profile"> | string | null
    contactNumber?: StringNullableFilter<"Profile"> | string | null
    website?: StringNullableFilter<"Profile"> | string | null
    street1?: StringNullableFilter<"Profile"> | string | null
    street2?: StringNullableFilter<"Profile"> | string | null
    city?: StringNullableFilter<"Profile"> | string | null
    state?: StringNullableFilter<"Profile"> | string | null
    zip?: StringNullableFilter<"Profile"> | string | null
    locationNumber?: StringNullableFilter<"Profile"> | string | null
    parkingLoading?: StringNullableFilter<"Profile"> | string | null
    counties?: JsonNullableFilter<"Profile">
    timeNeeded?: StringNullableFilter<"Profile"> | string | null
    cateringBrokerage?: StringNullableFilter<"Profile"> | string | null
    frequency?: StringNullableFilter<"Profile"> | string | null
    provide?: StringNullableFilter<"Profile"> | string | null
    headCount?: IntNullableFilter<"Profile"> | number | null
    status?: EnumUserStatusFilter<"Profile"> | $Enums.UserStatus
    sideNotes?: StringNullableFilter<"Profile"> | string | null
    confirmationCode?: StringNullableFilter<"Profile"> | string | null
    createdAt?: DateTimeFilter<"Profile"> | Date | string
    updatedAt?: DateTimeFilter<"Profile"> | Date | string
    isTemporaryPassword?: BoolFilter<"Profile"> | boolean
    deletedAt?: DateTimeNullableFilter<"Profile"> | Date | string | null
    accounts?: AccountListRelationFilter
    createdAddresses?: AddressListRelationFilter
    cateringRequests?: CateringRequestListRelationFilter
    driverDispatches?: DispatchListRelationFilter
    userDispatches?: DispatchListRelationFilter
    fileUploads?: FileUploadListRelationFilter
    jobApplications?: JobApplicationListRelationFilter
    onDemandRequests?: OnDemandListRelationFilter
    sessions?: SessionListRelationFilter
    userAddresses?: UserAddressListRelationFilter
  }

  export type ProfileOrderByWithRelationInput = {
    id?: SortOrder
    guid?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrder
    image?: SortOrderInput | SortOrder
    type?: SortOrder
    companyName?: SortOrderInput | SortOrder
    contactName?: SortOrderInput | SortOrder
    contactNumber?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    street1?: SortOrderInput | SortOrder
    street2?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    zip?: SortOrderInput | SortOrder
    locationNumber?: SortOrderInput | SortOrder
    parkingLoading?: SortOrderInput | SortOrder
    counties?: SortOrderInput | SortOrder
    timeNeeded?: SortOrderInput | SortOrder
    cateringBrokerage?: SortOrderInput | SortOrder
    frequency?: SortOrderInput | SortOrder
    provide?: SortOrderInput | SortOrder
    headCount?: SortOrderInput | SortOrder
    status?: SortOrder
    sideNotes?: SortOrderInput | SortOrder
    confirmationCode?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isTemporaryPassword?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    accounts?: AccountOrderByRelationAggregateInput
    createdAddresses?: AddressOrderByRelationAggregateInput
    cateringRequests?: CateringRequestOrderByRelationAggregateInput
    driverDispatches?: DispatchOrderByRelationAggregateInput
    userDispatches?: DispatchOrderByRelationAggregateInput
    fileUploads?: FileUploadOrderByRelationAggregateInput
    jobApplications?: JobApplicationOrderByRelationAggregateInput
    onDemandRequests?: OnDemandOrderByRelationAggregateInput
    sessions?: SessionOrderByRelationAggregateInput
    userAddresses?: UserAddressOrderByRelationAggregateInput
  }

  export type ProfileWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: ProfileWhereInput | ProfileWhereInput[]
    OR?: ProfileWhereInput[]
    NOT?: ProfileWhereInput | ProfileWhereInput[]
    guid?: StringNullableFilter<"Profile"> | string | null
    name?: StringNullableFilter<"Profile"> | string | null
    image?: StringNullableFilter<"Profile"> | string | null
    type?: EnumUserTypeFilter<"Profile"> | $Enums.UserType
    companyName?: StringNullableFilter<"Profile"> | string | null
    contactName?: StringNullableFilter<"Profile"> | string | null
    contactNumber?: StringNullableFilter<"Profile"> | string | null
    website?: StringNullableFilter<"Profile"> | string | null
    street1?: StringNullableFilter<"Profile"> | string | null
    street2?: StringNullableFilter<"Profile"> | string | null
    city?: StringNullableFilter<"Profile"> | string | null
    state?: StringNullableFilter<"Profile"> | string | null
    zip?: StringNullableFilter<"Profile"> | string | null
    locationNumber?: StringNullableFilter<"Profile"> | string | null
    parkingLoading?: StringNullableFilter<"Profile"> | string | null
    counties?: JsonNullableFilter<"Profile">
    timeNeeded?: StringNullableFilter<"Profile"> | string | null
    cateringBrokerage?: StringNullableFilter<"Profile"> | string | null
    frequency?: StringNullableFilter<"Profile"> | string | null
    provide?: StringNullableFilter<"Profile"> | string | null
    headCount?: IntNullableFilter<"Profile"> | number | null
    status?: EnumUserStatusFilter<"Profile"> | $Enums.UserStatus
    sideNotes?: StringNullableFilter<"Profile"> | string | null
    confirmationCode?: StringNullableFilter<"Profile"> | string | null
    createdAt?: DateTimeFilter<"Profile"> | Date | string
    updatedAt?: DateTimeFilter<"Profile"> | Date | string
    isTemporaryPassword?: BoolFilter<"Profile"> | boolean
    deletedAt?: DateTimeNullableFilter<"Profile"> | Date | string | null
    accounts?: AccountListRelationFilter
    createdAddresses?: AddressListRelationFilter
    cateringRequests?: CateringRequestListRelationFilter
    driverDispatches?: DispatchListRelationFilter
    userDispatches?: DispatchListRelationFilter
    fileUploads?: FileUploadListRelationFilter
    jobApplications?: JobApplicationListRelationFilter
    onDemandRequests?: OnDemandListRelationFilter
    sessions?: SessionListRelationFilter
    userAddresses?: UserAddressListRelationFilter
  }, "id" | "email">

  export type ProfileOrderByWithAggregationInput = {
    id?: SortOrder
    guid?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrder
    image?: SortOrderInput | SortOrder
    type?: SortOrder
    companyName?: SortOrderInput | SortOrder
    contactName?: SortOrderInput | SortOrder
    contactNumber?: SortOrderInput | SortOrder
    website?: SortOrderInput | SortOrder
    street1?: SortOrderInput | SortOrder
    street2?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    zip?: SortOrderInput | SortOrder
    locationNumber?: SortOrderInput | SortOrder
    parkingLoading?: SortOrderInput | SortOrder
    counties?: SortOrderInput | SortOrder
    timeNeeded?: SortOrderInput | SortOrder
    cateringBrokerage?: SortOrderInput | SortOrder
    frequency?: SortOrderInput | SortOrder
    provide?: SortOrderInput | SortOrder
    headCount?: SortOrderInput | SortOrder
    status?: SortOrder
    sideNotes?: SortOrderInput | SortOrder
    confirmationCode?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isTemporaryPassword?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: ProfileCountOrderByAggregateInput
    _avg?: ProfileAvgOrderByAggregateInput
    _max?: ProfileMaxOrderByAggregateInput
    _min?: ProfileMinOrderByAggregateInput
    _sum?: ProfileSumOrderByAggregateInput
  }

  export type ProfileScalarWhereWithAggregatesInput = {
    AND?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    OR?: ProfileScalarWhereWithAggregatesInput[]
    NOT?: ProfileScalarWhereWithAggregatesInput | ProfileScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Profile"> | string
    guid?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    name?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    email?: StringWithAggregatesFilter<"Profile"> | string
    image?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    type?: EnumUserTypeWithAggregatesFilter<"Profile"> | $Enums.UserType
    companyName?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    contactName?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    contactNumber?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    website?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    street1?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    street2?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    city?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    state?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    zip?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    locationNumber?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    parkingLoading?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    counties?: JsonNullableWithAggregatesFilter<"Profile">
    timeNeeded?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    cateringBrokerage?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    frequency?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    provide?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    headCount?: IntNullableWithAggregatesFilter<"Profile"> | number | null
    status?: EnumUserStatusWithAggregatesFilter<"Profile"> | $Enums.UserStatus
    sideNotes?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    confirmationCode?: StringNullableWithAggregatesFilter<"Profile"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Profile"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Profile"> | Date | string
    isTemporaryPassword?: BoolWithAggregatesFilter<"Profile"> | boolean
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Profile"> | Date | string | null
  }

  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: UuidFilter<"Account"> | string
    userId?: UuidFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refreshToken?: StringNullableFilter<"Account"> | string | null
    accessToken?: StringNullableFilter<"Account"> | string | null
    expiresAt?: IntNullableFilter<"Account"> | number | null
    tokenType?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    idToken?: StringNullableFilter<"Account"> | string | null
    sessionState?: StringNullableFilter<"Account"> | string | null
    user?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refreshToken?: SortOrderInput | SortOrder
    accessToken?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    tokenType?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    idToken?: SortOrderInput | SortOrder
    sessionState?: SortOrderInput | SortOrder
    user?: ProfileOrderByWithRelationInput
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    provider_providerAccountId?: AccountProviderProviderAccountIdCompoundUniqueInput
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    userId?: UuidFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refreshToken?: StringNullableFilter<"Account"> | string | null
    accessToken?: StringNullableFilter<"Account"> | string | null
    expiresAt?: IntNullableFilter<"Account"> | number | null
    tokenType?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    idToken?: StringNullableFilter<"Account"> | string | null
    sessionState?: StringNullableFilter<"Account"> | string | null
    user?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }, "id" | "provider_providerAccountId">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refreshToken?: SortOrderInput | SortOrder
    accessToken?: SortOrderInput | SortOrder
    expiresAt?: SortOrderInput | SortOrder
    tokenType?: SortOrderInput | SortOrder
    scope?: SortOrderInput | SortOrder
    idToken?: SortOrderInput | SortOrder
    sessionState?: SortOrderInput | SortOrder
    _count?: AccountCountOrderByAggregateInput
    _avg?: AccountAvgOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
    _sum?: AccountSumOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Account"> | string
    userId?: UuidWithAggregatesFilter<"Account"> | string
    type?: StringWithAggregatesFilter<"Account"> | string
    provider?: StringWithAggregatesFilter<"Account"> | string
    providerAccountId?: StringWithAggregatesFilter<"Account"> | string
    refreshToken?: StringNullableWithAggregatesFilter<"Account"> | string | null
    accessToken?: StringNullableWithAggregatesFilter<"Account"> | string | null
    expiresAt?: IntNullableWithAggregatesFilter<"Account"> | number | null
    tokenType?: StringNullableWithAggregatesFilter<"Account"> | string | null
    scope?: StringNullableWithAggregatesFilter<"Account"> | string | null
    idToken?: StringNullableWithAggregatesFilter<"Account"> | string | null
    sessionState?: StringNullableWithAggregatesFilter<"Account"> | string | null
  }

  export type SessionWhereInput = {
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    id?: UuidFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: UuidFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }

  export type SessionOrderByWithRelationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    user?: ProfileOrderByWithRelationInput
  }

  export type SessionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    sessionToken?: string
    AND?: SessionWhereInput | SessionWhereInput[]
    OR?: SessionWhereInput[]
    NOT?: SessionWhereInput | SessionWhereInput[]
    userId?: UuidFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
    user?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }, "id" | "sessionToken">

  export type SessionOrderByWithAggregationInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
    _count?: SessionCountOrderByAggregateInput
    _max?: SessionMaxOrderByAggregateInput
    _min?: SessionMinOrderByAggregateInput
  }

  export type SessionScalarWhereWithAggregatesInput = {
    AND?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    OR?: SessionScalarWhereWithAggregatesInput[]
    NOT?: SessionScalarWhereWithAggregatesInput | SessionScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Session"> | string
    sessionToken?: StringWithAggregatesFilter<"Session"> | string
    userId?: UuidWithAggregatesFilter<"Session"> | string
    expires?: DateTimeWithAggregatesFilter<"Session"> | Date | string
  }

  export type AddressWhereInput = {
    AND?: AddressWhereInput | AddressWhereInput[]
    OR?: AddressWhereInput[]
    NOT?: AddressWhereInput | AddressWhereInput[]
    id?: UuidFilter<"Address"> | string
    county?: StringNullableFilter<"Address"> | string | null
    street1?: StringFilter<"Address"> | string
    street2?: StringNullableFilter<"Address"> | string | null
    city?: StringFilter<"Address"> | string
    state?: StringFilter<"Address"> | string
    zip?: StringFilter<"Address"> | string
    createdAt?: DateTimeFilter<"Address"> | Date | string
    createdBy?: UuidNullableFilter<"Address"> | string | null
    isRestaurant?: BoolFilter<"Address"> | boolean
    isShared?: BoolFilter<"Address"> | boolean
    locationNumber?: StringNullableFilter<"Address"> | string | null
    parkingLoading?: StringNullableFilter<"Address"> | string | null
    updatedAt?: DateTimeFilter<"Address"> | Date | string
    name?: StringNullableFilter<"Address"> | string | null
    latitude?: FloatNullableFilter<"Address"> | number | null
    longitude?: FloatNullableFilter<"Address"> | number | null
    deletedAt?: DateTimeNullableFilter<"Address"> | Date | string | null
    creator?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
    cateringDeliveryRequests?: CateringRequestListRelationFilter
    cateringPickupRequests?: CateringRequestListRelationFilter
    onDemandDeliveryRequests?: OnDemandListRelationFilter
    onDemandPickupRequests?: OnDemandListRelationFilter
    userAddresses?: UserAddressListRelationFilter
  }

  export type AddressOrderByWithRelationInput = {
    id?: SortOrder
    county?: SortOrderInput | SortOrder
    street1?: SortOrder
    street2?: SortOrderInput | SortOrder
    city?: SortOrder
    state?: SortOrder
    zip?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    isRestaurant?: SortOrder
    isShared?: SortOrder
    locationNumber?: SortOrderInput | SortOrder
    parkingLoading?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    name?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    creator?: ProfileOrderByWithRelationInput
    cateringDeliveryRequests?: CateringRequestOrderByRelationAggregateInput
    cateringPickupRequests?: CateringRequestOrderByRelationAggregateInput
    onDemandDeliveryRequests?: OnDemandOrderByRelationAggregateInput
    onDemandPickupRequests?: OnDemandOrderByRelationAggregateInput
    userAddresses?: UserAddressOrderByRelationAggregateInput
  }

  export type AddressWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AddressWhereInput | AddressWhereInput[]
    OR?: AddressWhereInput[]
    NOT?: AddressWhereInput | AddressWhereInput[]
    county?: StringNullableFilter<"Address"> | string | null
    street1?: StringFilter<"Address"> | string
    street2?: StringNullableFilter<"Address"> | string | null
    city?: StringFilter<"Address"> | string
    state?: StringFilter<"Address"> | string
    zip?: StringFilter<"Address"> | string
    createdAt?: DateTimeFilter<"Address"> | Date | string
    createdBy?: UuidNullableFilter<"Address"> | string | null
    isRestaurant?: BoolFilter<"Address"> | boolean
    isShared?: BoolFilter<"Address"> | boolean
    locationNumber?: StringNullableFilter<"Address"> | string | null
    parkingLoading?: StringNullableFilter<"Address"> | string | null
    updatedAt?: DateTimeFilter<"Address"> | Date | string
    name?: StringNullableFilter<"Address"> | string | null
    latitude?: FloatNullableFilter<"Address"> | number | null
    longitude?: FloatNullableFilter<"Address"> | number | null
    deletedAt?: DateTimeNullableFilter<"Address"> | Date | string | null
    creator?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
    cateringDeliveryRequests?: CateringRequestListRelationFilter
    cateringPickupRequests?: CateringRequestListRelationFilter
    onDemandDeliveryRequests?: OnDemandListRelationFilter
    onDemandPickupRequests?: OnDemandListRelationFilter
    userAddresses?: UserAddressListRelationFilter
  }, "id">

  export type AddressOrderByWithAggregationInput = {
    id?: SortOrder
    county?: SortOrderInput | SortOrder
    street1?: SortOrder
    street2?: SortOrderInput | SortOrder
    city?: SortOrder
    state?: SortOrder
    zip?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrderInput | SortOrder
    isRestaurant?: SortOrder
    isShared?: SortOrder
    locationNumber?: SortOrderInput | SortOrder
    parkingLoading?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    name?: SortOrderInput | SortOrder
    latitude?: SortOrderInput | SortOrder
    longitude?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: AddressCountOrderByAggregateInput
    _avg?: AddressAvgOrderByAggregateInput
    _max?: AddressMaxOrderByAggregateInput
    _min?: AddressMinOrderByAggregateInput
    _sum?: AddressSumOrderByAggregateInput
  }

  export type AddressScalarWhereWithAggregatesInput = {
    AND?: AddressScalarWhereWithAggregatesInput | AddressScalarWhereWithAggregatesInput[]
    OR?: AddressScalarWhereWithAggregatesInput[]
    NOT?: AddressScalarWhereWithAggregatesInput | AddressScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Address"> | string
    county?: StringNullableWithAggregatesFilter<"Address"> | string | null
    street1?: StringWithAggregatesFilter<"Address"> | string
    street2?: StringNullableWithAggregatesFilter<"Address"> | string | null
    city?: StringWithAggregatesFilter<"Address"> | string
    state?: StringWithAggregatesFilter<"Address"> | string
    zip?: StringWithAggregatesFilter<"Address"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Address"> | Date | string
    createdBy?: UuidNullableWithAggregatesFilter<"Address"> | string | null
    isRestaurant?: BoolWithAggregatesFilter<"Address"> | boolean
    isShared?: BoolWithAggregatesFilter<"Address"> | boolean
    locationNumber?: StringNullableWithAggregatesFilter<"Address"> | string | null
    parkingLoading?: StringNullableWithAggregatesFilter<"Address"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"Address"> | Date | string
    name?: StringNullableWithAggregatesFilter<"Address"> | string | null
    latitude?: FloatNullableWithAggregatesFilter<"Address"> | number | null
    longitude?: FloatNullableWithAggregatesFilter<"Address"> | number | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"Address"> | Date | string | null
  }

  export type CateringRequestWhereInput = {
    AND?: CateringRequestWhereInput | CateringRequestWhereInput[]
    OR?: CateringRequestWhereInput[]
    NOT?: CateringRequestWhereInput | CateringRequestWhereInput[]
    id?: UuidFilter<"CateringRequest"> | string
    guid?: StringNullableFilter<"CateringRequest"> | string | null
    userId?: UuidFilter<"CateringRequest"> | string
    pickupAddressId?: UuidFilter<"CateringRequest"> | string
    deliveryAddressId?: UuidFilter<"CateringRequest"> | string
    brokerage?: StringNullableFilter<"CateringRequest"> | string | null
    orderNumber?: StringFilter<"CateringRequest"> | string
    pickupDateTime?: DateTimeNullableFilter<"CateringRequest"> | Date | string | null
    arrivalDateTime?: DateTimeNullableFilter<"CateringRequest"> | Date | string | null
    completeDateTime?: DateTimeNullableFilter<"CateringRequest"> | Date | string | null
    headcount?: IntNullableFilter<"CateringRequest"> | number | null
    needHost?: EnumCateringNeedHostFilter<"CateringRequest"> | $Enums.CateringNeedHost
    hoursNeeded?: FloatNullableFilter<"CateringRequest"> | number | null
    numberOfHosts?: IntNullableFilter<"CateringRequest"> | number | null
    clientAttention?: StringNullableFilter<"CateringRequest"> | string | null
    pickupNotes?: StringNullableFilter<"CateringRequest"> | string | null
    specialNotes?: StringNullableFilter<"CateringRequest"> | string | null
    image?: StringNullableFilter<"CateringRequest"> | string | null
    status?: EnumCateringStatusFilter<"CateringRequest"> | $Enums.CateringStatus
    orderTotal?: DecimalNullableFilter<"CateringRequest"> | Decimal | DecimalJsLike | number | string | null
    tip?: DecimalNullableFilter<"CateringRequest"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"CateringRequest"> | Date | string
    updatedAt?: DateTimeFilter<"CateringRequest"> | Date | string
    driverStatus?: EnumDriverStatusNullableFilter<"CateringRequest"> | $Enums.DriverStatus | null
    deletedAt?: DateTimeNullableFilter<"CateringRequest"> | Date | string | null
    deliveryAddress?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    pickupAddress?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    user?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    dispatches?: DispatchListRelationFilter
    fileUploads?: FileUploadListRelationFilter
  }

  export type CateringRequestOrderByWithRelationInput = {
    id?: SortOrder
    guid?: SortOrderInput | SortOrder
    userId?: SortOrder
    pickupAddressId?: SortOrder
    deliveryAddressId?: SortOrder
    brokerage?: SortOrderInput | SortOrder
    orderNumber?: SortOrder
    pickupDateTime?: SortOrderInput | SortOrder
    arrivalDateTime?: SortOrderInput | SortOrder
    completeDateTime?: SortOrderInput | SortOrder
    headcount?: SortOrderInput | SortOrder
    needHost?: SortOrder
    hoursNeeded?: SortOrderInput | SortOrder
    numberOfHosts?: SortOrderInput | SortOrder
    clientAttention?: SortOrderInput | SortOrder
    pickupNotes?: SortOrderInput | SortOrder
    specialNotes?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    status?: SortOrder
    orderTotal?: SortOrderInput | SortOrder
    tip?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverStatus?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    deliveryAddress?: AddressOrderByWithRelationInput
    pickupAddress?: AddressOrderByWithRelationInput
    user?: ProfileOrderByWithRelationInput
    dispatches?: DispatchOrderByRelationAggregateInput
    fileUploads?: FileUploadOrderByRelationAggregateInput
  }

  export type CateringRequestWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderNumber?: string
    AND?: CateringRequestWhereInput | CateringRequestWhereInput[]
    OR?: CateringRequestWhereInput[]
    NOT?: CateringRequestWhereInput | CateringRequestWhereInput[]
    guid?: StringNullableFilter<"CateringRequest"> | string | null
    userId?: UuidFilter<"CateringRequest"> | string
    pickupAddressId?: UuidFilter<"CateringRequest"> | string
    deliveryAddressId?: UuidFilter<"CateringRequest"> | string
    brokerage?: StringNullableFilter<"CateringRequest"> | string | null
    pickupDateTime?: DateTimeNullableFilter<"CateringRequest"> | Date | string | null
    arrivalDateTime?: DateTimeNullableFilter<"CateringRequest"> | Date | string | null
    completeDateTime?: DateTimeNullableFilter<"CateringRequest"> | Date | string | null
    headcount?: IntNullableFilter<"CateringRequest"> | number | null
    needHost?: EnumCateringNeedHostFilter<"CateringRequest"> | $Enums.CateringNeedHost
    hoursNeeded?: FloatNullableFilter<"CateringRequest"> | number | null
    numberOfHosts?: IntNullableFilter<"CateringRequest"> | number | null
    clientAttention?: StringNullableFilter<"CateringRequest"> | string | null
    pickupNotes?: StringNullableFilter<"CateringRequest"> | string | null
    specialNotes?: StringNullableFilter<"CateringRequest"> | string | null
    image?: StringNullableFilter<"CateringRequest"> | string | null
    status?: EnumCateringStatusFilter<"CateringRequest"> | $Enums.CateringStatus
    orderTotal?: DecimalNullableFilter<"CateringRequest"> | Decimal | DecimalJsLike | number | string | null
    tip?: DecimalNullableFilter<"CateringRequest"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"CateringRequest"> | Date | string
    updatedAt?: DateTimeFilter<"CateringRequest"> | Date | string
    driverStatus?: EnumDriverStatusNullableFilter<"CateringRequest"> | $Enums.DriverStatus | null
    deletedAt?: DateTimeNullableFilter<"CateringRequest"> | Date | string | null
    deliveryAddress?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    pickupAddress?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    user?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
    dispatches?: DispatchListRelationFilter
    fileUploads?: FileUploadListRelationFilter
  }, "id" | "orderNumber">

  export type CateringRequestOrderByWithAggregationInput = {
    id?: SortOrder
    guid?: SortOrderInput | SortOrder
    userId?: SortOrder
    pickupAddressId?: SortOrder
    deliveryAddressId?: SortOrder
    brokerage?: SortOrderInput | SortOrder
    orderNumber?: SortOrder
    pickupDateTime?: SortOrderInput | SortOrder
    arrivalDateTime?: SortOrderInput | SortOrder
    completeDateTime?: SortOrderInput | SortOrder
    headcount?: SortOrderInput | SortOrder
    needHost?: SortOrder
    hoursNeeded?: SortOrderInput | SortOrder
    numberOfHosts?: SortOrderInput | SortOrder
    clientAttention?: SortOrderInput | SortOrder
    pickupNotes?: SortOrderInput | SortOrder
    specialNotes?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    status?: SortOrder
    orderTotal?: SortOrderInput | SortOrder
    tip?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverStatus?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: CateringRequestCountOrderByAggregateInput
    _avg?: CateringRequestAvgOrderByAggregateInput
    _max?: CateringRequestMaxOrderByAggregateInput
    _min?: CateringRequestMinOrderByAggregateInput
    _sum?: CateringRequestSumOrderByAggregateInput
  }

  export type CateringRequestScalarWhereWithAggregatesInput = {
    AND?: CateringRequestScalarWhereWithAggregatesInput | CateringRequestScalarWhereWithAggregatesInput[]
    OR?: CateringRequestScalarWhereWithAggregatesInput[]
    NOT?: CateringRequestScalarWhereWithAggregatesInput | CateringRequestScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"CateringRequest"> | string
    guid?: StringNullableWithAggregatesFilter<"CateringRequest"> | string | null
    userId?: UuidWithAggregatesFilter<"CateringRequest"> | string
    pickupAddressId?: UuidWithAggregatesFilter<"CateringRequest"> | string
    deliveryAddressId?: UuidWithAggregatesFilter<"CateringRequest"> | string
    brokerage?: StringNullableWithAggregatesFilter<"CateringRequest"> | string | null
    orderNumber?: StringWithAggregatesFilter<"CateringRequest"> | string
    pickupDateTime?: DateTimeNullableWithAggregatesFilter<"CateringRequest"> | Date | string | null
    arrivalDateTime?: DateTimeNullableWithAggregatesFilter<"CateringRequest"> | Date | string | null
    completeDateTime?: DateTimeNullableWithAggregatesFilter<"CateringRequest"> | Date | string | null
    headcount?: IntNullableWithAggregatesFilter<"CateringRequest"> | number | null
    needHost?: EnumCateringNeedHostWithAggregatesFilter<"CateringRequest"> | $Enums.CateringNeedHost
    hoursNeeded?: FloatNullableWithAggregatesFilter<"CateringRequest"> | number | null
    numberOfHosts?: IntNullableWithAggregatesFilter<"CateringRequest"> | number | null
    clientAttention?: StringNullableWithAggregatesFilter<"CateringRequest"> | string | null
    pickupNotes?: StringNullableWithAggregatesFilter<"CateringRequest"> | string | null
    specialNotes?: StringNullableWithAggregatesFilter<"CateringRequest"> | string | null
    image?: StringNullableWithAggregatesFilter<"CateringRequest"> | string | null
    status?: EnumCateringStatusWithAggregatesFilter<"CateringRequest"> | $Enums.CateringStatus
    orderTotal?: DecimalNullableWithAggregatesFilter<"CateringRequest"> | Decimal | DecimalJsLike | number | string | null
    tip?: DecimalNullableWithAggregatesFilter<"CateringRequest"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeWithAggregatesFilter<"CateringRequest"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"CateringRequest"> | Date | string
    driverStatus?: EnumDriverStatusNullableWithAggregatesFilter<"CateringRequest"> | $Enums.DriverStatus | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"CateringRequest"> | Date | string | null
  }

  export type DispatchWhereInput = {
    AND?: DispatchWhereInput | DispatchWhereInput[]
    OR?: DispatchWhereInput[]
    NOT?: DispatchWhereInput | DispatchWhereInput[]
    id?: UuidFilter<"Dispatch"> | string
    cateringRequestId?: UuidNullableFilter<"Dispatch"> | string | null
    createdAt?: DateTimeFilter<"Dispatch"> | Date | string
    driverId?: UuidNullableFilter<"Dispatch"> | string | null
    onDemandId?: UuidNullableFilter<"Dispatch"> | string | null
    updatedAt?: DateTimeFilter<"Dispatch"> | Date | string
    userId?: UuidNullableFilter<"Dispatch"> | string | null
    cateringRequest?: XOR<CateringRequestNullableScalarRelationFilter, CateringRequestWhereInput> | null
    driver?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
    onDemand?: XOR<OnDemandNullableScalarRelationFilter, OnDemandWhereInput> | null
    user?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
  }

  export type DispatchOrderByWithRelationInput = {
    id?: SortOrder
    cateringRequestId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    driverId?: SortOrderInput | SortOrder
    onDemandId?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    userId?: SortOrderInput | SortOrder
    cateringRequest?: CateringRequestOrderByWithRelationInput
    driver?: ProfileOrderByWithRelationInput
    onDemand?: OnDemandOrderByWithRelationInput
    user?: ProfileOrderByWithRelationInput
  }

  export type DispatchWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: DispatchWhereInput | DispatchWhereInput[]
    OR?: DispatchWhereInput[]
    NOT?: DispatchWhereInput | DispatchWhereInput[]
    cateringRequestId?: UuidNullableFilter<"Dispatch"> | string | null
    createdAt?: DateTimeFilter<"Dispatch"> | Date | string
    driverId?: UuidNullableFilter<"Dispatch"> | string | null
    onDemandId?: UuidNullableFilter<"Dispatch"> | string | null
    updatedAt?: DateTimeFilter<"Dispatch"> | Date | string
    userId?: UuidNullableFilter<"Dispatch"> | string | null
    cateringRequest?: XOR<CateringRequestNullableScalarRelationFilter, CateringRequestWhereInput> | null
    driver?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
    onDemand?: XOR<OnDemandNullableScalarRelationFilter, OnDemandWhereInput> | null
    user?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
  }, "id">

  export type DispatchOrderByWithAggregationInput = {
    id?: SortOrder
    cateringRequestId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    driverId?: SortOrderInput | SortOrder
    onDemandId?: SortOrderInput | SortOrder
    updatedAt?: SortOrder
    userId?: SortOrderInput | SortOrder
    _count?: DispatchCountOrderByAggregateInput
    _max?: DispatchMaxOrderByAggregateInput
    _min?: DispatchMinOrderByAggregateInput
  }

  export type DispatchScalarWhereWithAggregatesInput = {
    AND?: DispatchScalarWhereWithAggregatesInput | DispatchScalarWhereWithAggregatesInput[]
    OR?: DispatchScalarWhereWithAggregatesInput[]
    NOT?: DispatchScalarWhereWithAggregatesInput | DispatchScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"Dispatch"> | string
    cateringRequestId?: UuidNullableWithAggregatesFilter<"Dispatch"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Dispatch"> | Date | string
    driverId?: UuidNullableWithAggregatesFilter<"Dispatch"> | string | null
    onDemandId?: UuidNullableWithAggregatesFilter<"Dispatch"> | string | null
    updatedAt?: DateTimeWithAggregatesFilter<"Dispatch"> | Date | string
    userId?: UuidNullableWithAggregatesFilter<"Dispatch"> | string | null
  }

  export type FileUploadWhereInput = {
    AND?: FileUploadWhereInput | FileUploadWhereInput[]
    OR?: FileUploadWhereInput[]
    NOT?: FileUploadWhereInput | FileUploadWhereInput[]
    id?: UuidFilter<"FileUpload"> | string
    userId?: UuidNullableFilter<"FileUpload"> | string | null
    fileName?: StringFilter<"FileUpload"> | string
    fileType?: StringFilter<"FileUpload"> | string
    fileSize?: IntFilter<"FileUpload"> | number
    fileUrl?: StringFilter<"FileUpload"> | string
    uploadedAt?: DateTimeFilter<"FileUpload"> | Date | string
    updatedAt?: DateTimeFilter<"FileUpload"> | Date | string
    cateringRequestId?: UuidNullableFilter<"FileUpload"> | string | null
    onDemandId?: UuidNullableFilter<"FileUpload"> | string | null
    jobApplicationId?: UuidNullableFilter<"FileUpload"> | string | null
    category?: StringNullableFilter<"FileUpload"> | string | null
    isTemporary?: BoolFilter<"FileUpload"> | boolean
    cateringRequest?: XOR<CateringRequestNullableScalarRelationFilter, CateringRequestWhereInput> | null
    jobApplication?: XOR<JobApplicationNullableScalarRelationFilter, JobApplicationWhereInput> | null
    onDemand?: XOR<OnDemandNullableScalarRelationFilter, OnDemandWhereInput> | null
    user?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
  }

  export type FileUploadOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    fileName?: SortOrder
    fileType?: SortOrder
    fileSize?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
    cateringRequestId?: SortOrderInput | SortOrder
    onDemandId?: SortOrderInput | SortOrder
    jobApplicationId?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    isTemporary?: SortOrder
    cateringRequest?: CateringRequestOrderByWithRelationInput
    jobApplication?: JobApplicationOrderByWithRelationInput
    onDemand?: OnDemandOrderByWithRelationInput
    user?: ProfileOrderByWithRelationInput
  }

  export type FileUploadWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FileUploadWhereInput | FileUploadWhereInput[]
    OR?: FileUploadWhereInput[]
    NOT?: FileUploadWhereInput | FileUploadWhereInput[]
    userId?: UuidNullableFilter<"FileUpload"> | string | null
    fileName?: StringFilter<"FileUpload"> | string
    fileType?: StringFilter<"FileUpload"> | string
    fileSize?: IntFilter<"FileUpload"> | number
    fileUrl?: StringFilter<"FileUpload"> | string
    uploadedAt?: DateTimeFilter<"FileUpload"> | Date | string
    updatedAt?: DateTimeFilter<"FileUpload"> | Date | string
    cateringRequestId?: UuidNullableFilter<"FileUpload"> | string | null
    onDemandId?: UuidNullableFilter<"FileUpload"> | string | null
    jobApplicationId?: UuidNullableFilter<"FileUpload"> | string | null
    category?: StringNullableFilter<"FileUpload"> | string | null
    isTemporary?: BoolFilter<"FileUpload"> | boolean
    cateringRequest?: XOR<CateringRequestNullableScalarRelationFilter, CateringRequestWhereInput> | null
    jobApplication?: XOR<JobApplicationNullableScalarRelationFilter, JobApplicationWhereInput> | null
    onDemand?: XOR<OnDemandNullableScalarRelationFilter, OnDemandWhereInput> | null
    user?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
  }, "id">

  export type FileUploadOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrderInput | SortOrder
    fileName?: SortOrder
    fileType?: SortOrder
    fileSize?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
    cateringRequestId?: SortOrderInput | SortOrder
    onDemandId?: SortOrderInput | SortOrder
    jobApplicationId?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    isTemporary?: SortOrder
    _count?: FileUploadCountOrderByAggregateInput
    _avg?: FileUploadAvgOrderByAggregateInput
    _max?: FileUploadMaxOrderByAggregateInput
    _min?: FileUploadMinOrderByAggregateInput
    _sum?: FileUploadSumOrderByAggregateInput
  }

  export type FileUploadScalarWhereWithAggregatesInput = {
    AND?: FileUploadScalarWhereWithAggregatesInput | FileUploadScalarWhereWithAggregatesInput[]
    OR?: FileUploadScalarWhereWithAggregatesInput[]
    NOT?: FileUploadScalarWhereWithAggregatesInput | FileUploadScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"FileUpload"> | string
    userId?: UuidNullableWithAggregatesFilter<"FileUpload"> | string | null
    fileName?: StringWithAggregatesFilter<"FileUpload"> | string
    fileType?: StringWithAggregatesFilter<"FileUpload"> | string
    fileSize?: IntWithAggregatesFilter<"FileUpload"> | number
    fileUrl?: StringWithAggregatesFilter<"FileUpload"> | string
    uploadedAt?: DateTimeWithAggregatesFilter<"FileUpload"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FileUpload"> | Date | string
    cateringRequestId?: UuidNullableWithAggregatesFilter<"FileUpload"> | string | null
    onDemandId?: UuidNullableWithAggregatesFilter<"FileUpload"> | string | null
    jobApplicationId?: UuidNullableWithAggregatesFilter<"FileUpload"> | string | null
    category?: StringNullableWithAggregatesFilter<"FileUpload"> | string | null
    isTemporary?: BoolWithAggregatesFilter<"FileUpload"> | boolean
  }

  export type OnDemandWhereInput = {
    AND?: OnDemandWhereInput | OnDemandWhereInput[]
    OR?: OnDemandWhereInput[]
    NOT?: OnDemandWhereInput | OnDemandWhereInput[]
    id?: UuidFilter<"OnDemand"> | string
    guid?: StringNullableFilter<"OnDemand"> | string | null
    userId?: UuidFilter<"OnDemand"> | string
    pickupAddressId?: UuidFilter<"OnDemand"> | string
    deliveryAddressId?: UuidFilter<"OnDemand"> | string
    orderNumber?: StringFilter<"OnDemand"> | string
    pickupDateTime?: DateTimeFilter<"OnDemand"> | Date | string
    arrivalDateTime?: DateTimeFilter<"OnDemand"> | Date | string
    completeDateTime?: DateTimeNullableFilter<"OnDemand"> | Date | string | null
    hoursNeeded?: FloatNullableFilter<"OnDemand"> | number | null
    itemDelivered?: StringNullableFilter<"OnDemand"> | string | null
    vehicleType?: EnumVehicleTypeFilter<"OnDemand"> | $Enums.VehicleType
    clientAttention?: StringFilter<"OnDemand"> | string
    pickupNotes?: StringNullableFilter<"OnDemand"> | string | null
    specialNotes?: StringNullableFilter<"OnDemand"> | string | null
    image?: StringNullableFilter<"OnDemand"> | string | null
    status?: EnumOnDemandStatusFilter<"OnDemand"> | $Enums.OnDemandStatus
    orderTotal?: DecimalNullableFilter<"OnDemand"> | Decimal | DecimalJsLike | number | string | null
    tip?: DecimalNullableFilter<"OnDemand"> | Decimal | DecimalJsLike | number | string | null
    length?: FloatNullableFilter<"OnDemand"> | number | null
    width?: FloatNullableFilter<"OnDemand"> | number | null
    height?: FloatNullableFilter<"OnDemand"> | number | null
    weight?: FloatNullableFilter<"OnDemand"> | number | null
    createdAt?: DateTimeFilter<"OnDemand"> | Date | string
    updatedAt?: DateTimeFilter<"OnDemand"> | Date | string
    driverStatus?: EnumDriverStatusNullableFilter<"OnDemand"> | $Enums.DriverStatus | null
    deletedAt?: DateTimeNullableFilter<"OnDemand"> | Date | string | null
    dispatches?: DispatchListRelationFilter
    fileUploads?: FileUploadListRelationFilter
    deliveryAddress?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    pickupAddress?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    user?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }

  export type OnDemandOrderByWithRelationInput = {
    id?: SortOrder
    guid?: SortOrderInput | SortOrder
    userId?: SortOrder
    pickupAddressId?: SortOrder
    deliveryAddressId?: SortOrder
    orderNumber?: SortOrder
    pickupDateTime?: SortOrder
    arrivalDateTime?: SortOrder
    completeDateTime?: SortOrderInput | SortOrder
    hoursNeeded?: SortOrderInput | SortOrder
    itemDelivered?: SortOrderInput | SortOrder
    vehicleType?: SortOrder
    clientAttention?: SortOrder
    pickupNotes?: SortOrderInput | SortOrder
    specialNotes?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    status?: SortOrder
    orderTotal?: SortOrderInput | SortOrder
    tip?: SortOrderInput | SortOrder
    length?: SortOrderInput | SortOrder
    width?: SortOrderInput | SortOrder
    height?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverStatus?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    dispatches?: DispatchOrderByRelationAggregateInput
    fileUploads?: FileUploadOrderByRelationAggregateInput
    deliveryAddress?: AddressOrderByWithRelationInput
    pickupAddress?: AddressOrderByWithRelationInput
    user?: ProfileOrderByWithRelationInput
  }

  export type OnDemandWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderNumber?: string
    AND?: OnDemandWhereInput | OnDemandWhereInput[]
    OR?: OnDemandWhereInput[]
    NOT?: OnDemandWhereInput | OnDemandWhereInput[]
    guid?: StringNullableFilter<"OnDemand"> | string | null
    userId?: UuidFilter<"OnDemand"> | string
    pickupAddressId?: UuidFilter<"OnDemand"> | string
    deliveryAddressId?: UuidFilter<"OnDemand"> | string
    pickupDateTime?: DateTimeFilter<"OnDemand"> | Date | string
    arrivalDateTime?: DateTimeFilter<"OnDemand"> | Date | string
    completeDateTime?: DateTimeNullableFilter<"OnDemand"> | Date | string | null
    hoursNeeded?: FloatNullableFilter<"OnDemand"> | number | null
    itemDelivered?: StringNullableFilter<"OnDemand"> | string | null
    vehicleType?: EnumVehicleTypeFilter<"OnDemand"> | $Enums.VehicleType
    clientAttention?: StringFilter<"OnDemand"> | string
    pickupNotes?: StringNullableFilter<"OnDemand"> | string | null
    specialNotes?: StringNullableFilter<"OnDemand"> | string | null
    image?: StringNullableFilter<"OnDemand"> | string | null
    status?: EnumOnDemandStatusFilter<"OnDemand"> | $Enums.OnDemandStatus
    orderTotal?: DecimalNullableFilter<"OnDemand"> | Decimal | DecimalJsLike | number | string | null
    tip?: DecimalNullableFilter<"OnDemand"> | Decimal | DecimalJsLike | number | string | null
    length?: FloatNullableFilter<"OnDemand"> | number | null
    width?: FloatNullableFilter<"OnDemand"> | number | null
    height?: FloatNullableFilter<"OnDemand"> | number | null
    weight?: FloatNullableFilter<"OnDemand"> | number | null
    createdAt?: DateTimeFilter<"OnDemand"> | Date | string
    updatedAt?: DateTimeFilter<"OnDemand"> | Date | string
    driverStatus?: EnumDriverStatusNullableFilter<"OnDemand"> | $Enums.DriverStatus | null
    deletedAt?: DateTimeNullableFilter<"OnDemand"> | Date | string | null
    dispatches?: DispatchListRelationFilter
    fileUploads?: FileUploadListRelationFilter
    deliveryAddress?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    pickupAddress?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    user?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }, "id" | "orderNumber">

  export type OnDemandOrderByWithAggregationInput = {
    id?: SortOrder
    guid?: SortOrderInput | SortOrder
    userId?: SortOrder
    pickupAddressId?: SortOrder
    deliveryAddressId?: SortOrder
    orderNumber?: SortOrder
    pickupDateTime?: SortOrder
    arrivalDateTime?: SortOrder
    completeDateTime?: SortOrderInput | SortOrder
    hoursNeeded?: SortOrderInput | SortOrder
    itemDelivered?: SortOrderInput | SortOrder
    vehicleType?: SortOrder
    clientAttention?: SortOrder
    pickupNotes?: SortOrderInput | SortOrder
    specialNotes?: SortOrderInput | SortOrder
    image?: SortOrderInput | SortOrder
    status?: SortOrder
    orderTotal?: SortOrderInput | SortOrder
    tip?: SortOrderInput | SortOrder
    length?: SortOrderInput | SortOrder
    width?: SortOrderInput | SortOrder
    height?: SortOrderInput | SortOrder
    weight?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverStatus?: SortOrderInput | SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: OnDemandCountOrderByAggregateInput
    _avg?: OnDemandAvgOrderByAggregateInput
    _max?: OnDemandMaxOrderByAggregateInput
    _min?: OnDemandMinOrderByAggregateInput
    _sum?: OnDemandSumOrderByAggregateInput
  }

  export type OnDemandScalarWhereWithAggregatesInput = {
    AND?: OnDemandScalarWhereWithAggregatesInput | OnDemandScalarWhereWithAggregatesInput[]
    OR?: OnDemandScalarWhereWithAggregatesInput[]
    NOT?: OnDemandScalarWhereWithAggregatesInput | OnDemandScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"OnDemand"> | string
    guid?: StringNullableWithAggregatesFilter<"OnDemand"> | string | null
    userId?: UuidWithAggregatesFilter<"OnDemand"> | string
    pickupAddressId?: UuidWithAggregatesFilter<"OnDemand"> | string
    deliveryAddressId?: UuidWithAggregatesFilter<"OnDemand"> | string
    orderNumber?: StringWithAggregatesFilter<"OnDemand"> | string
    pickupDateTime?: DateTimeWithAggregatesFilter<"OnDemand"> | Date | string
    arrivalDateTime?: DateTimeWithAggregatesFilter<"OnDemand"> | Date | string
    completeDateTime?: DateTimeNullableWithAggregatesFilter<"OnDemand"> | Date | string | null
    hoursNeeded?: FloatNullableWithAggregatesFilter<"OnDemand"> | number | null
    itemDelivered?: StringNullableWithAggregatesFilter<"OnDemand"> | string | null
    vehicleType?: EnumVehicleTypeWithAggregatesFilter<"OnDemand"> | $Enums.VehicleType
    clientAttention?: StringWithAggregatesFilter<"OnDemand"> | string
    pickupNotes?: StringNullableWithAggregatesFilter<"OnDemand"> | string | null
    specialNotes?: StringNullableWithAggregatesFilter<"OnDemand"> | string | null
    image?: StringNullableWithAggregatesFilter<"OnDemand"> | string | null
    status?: EnumOnDemandStatusWithAggregatesFilter<"OnDemand"> | $Enums.OnDemandStatus
    orderTotal?: DecimalNullableWithAggregatesFilter<"OnDemand"> | Decimal | DecimalJsLike | number | string | null
    tip?: DecimalNullableWithAggregatesFilter<"OnDemand"> | Decimal | DecimalJsLike | number | string | null
    length?: FloatNullableWithAggregatesFilter<"OnDemand"> | number | null
    width?: FloatNullableWithAggregatesFilter<"OnDemand"> | number | null
    height?: FloatNullableWithAggregatesFilter<"OnDemand"> | number | null
    weight?: FloatNullableWithAggregatesFilter<"OnDemand"> | number | null
    createdAt?: DateTimeWithAggregatesFilter<"OnDemand"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"OnDemand"> | Date | string
    driverStatus?: EnumDriverStatusNullableWithAggregatesFilter<"OnDemand"> | $Enums.DriverStatus | null
    deletedAt?: DateTimeNullableWithAggregatesFilter<"OnDemand"> | Date | string | null
  }

  export type UserAddressWhereInput = {
    AND?: UserAddressWhereInput | UserAddressWhereInput[]
    OR?: UserAddressWhereInput[]
    NOT?: UserAddressWhereInput | UserAddressWhereInput[]
    id?: UuidFilter<"UserAddress"> | string
    userId?: UuidFilter<"UserAddress"> | string
    addressId?: UuidFilter<"UserAddress"> | string
    alias?: StringNullableFilter<"UserAddress"> | string | null
    isDefault?: BoolFilter<"UserAddress"> | boolean
    createdAt?: DateTimeFilter<"UserAddress"> | Date | string
    updatedAt?: DateTimeFilter<"UserAddress"> | Date | string
    address?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    user?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }

  export type UserAddressOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    addressId?: SortOrder
    alias?: SortOrderInput | SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    address?: AddressOrderByWithRelationInput
    user?: ProfileOrderByWithRelationInput
  }

  export type UserAddressWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    userId_addressId?: UserAddressUserIdAddressIdCompoundUniqueInput
    AND?: UserAddressWhereInput | UserAddressWhereInput[]
    OR?: UserAddressWhereInput[]
    NOT?: UserAddressWhereInput | UserAddressWhereInput[]
    userId?: UuidFilter<"UserAddress"> | string
    addressId?: UuidFilter<"UserAddress"> | string
    alias?: StringNullableFilter<"UserAddress"> | string | null
    isDefault?: BoolFilter<"UserAddress"> | boolean
    createdAt?: DateTimeFilter<"UserAddress"> | Date | string
    updatedAt?: DateTimeFilter<"UserAddress"> | Date | string
    address?: XOR<AddressScalarRelationFilter, AddressWhereInput>
    user?: XOR<ProfileScalarRelationFilter, ProfileWhereInput>
  }, "id" | "userId_addressId">

  export type UserAddressOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    addressId?: SortOrder
    alias?: SortOrderInput | SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserAddressCountOrderByAggregateInput
    _max?: UserAddressMaxOrderByAggregateInput
    _min?: UserAddressMinOrderByAggregateInput
  }

  export type UserAddressScalarWhereWithAggregatesInput = {
    AND?: UserAddressScalarWhereWithAggregatesInput | UserAddressScalarWhereWithAggregatesInput[]
    OR?: UserAddressScalarWhereWithAggregatesInput[]
    NOT?: UserAddressScalarWhereWithAggregatesInput | UserAddressScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"UserAddress"> | string
    userId?: UuidWithAggregatesFilter<"UserAddress"> | string
    addressId?: UuidWithAggregatesFilter<"UserAddress"> | string
    alias?: StringNullableWithAggregatesFilter<"UserAddress"> | string | null
    isDefault?: BoolWithAggregatesFilter<"UserAddress"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"UserAddress"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"UserAddress"> | Date | string
  }

  export type VerificationTokenWhereInput = {
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    id?: UuidFilter<"VerificationToken"> | string
    identifier?: StringFilter<"VerificationToken"> | string
    token?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
  }

  export type VerificationTokenOrderByWithRelationInput = {
    id?: SortOrder
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    identifier_token?: VerificationTokenIdentifierTokenCompoundUniqueInput
    AND?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    OR?: VerificationTokenWhereInput[]
    NOT?: VerificationTokenWhereInput | VerificationTokenWhereInput[]
    identifier?: StringFilter<"VerificationToken"> | string
    expires?: DateTimeFilter<"VerificationToken"> | Date | string
  }, "id" | "token" | "identifier_token">

  export type VerificationTokenOrderByWithAggregationInput = {
    id?: SortOrder
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
    _count?: VerificationTokenCountOrderByAggregateInput
    _max?: VerificationTokenMaxOrderByAggregateInput
    _min?: VerificationTokenMinOrderByAggregateInput
  }

  export type VerificationTokenScalarWhereWithAggregatesInput = {
    AND?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    OR?: VerificationTokenScalarWhereWithAggregatesInput[]
    NOT?: VerificationTokenScalarWhereWithAggregatesInput | VerificationTokenScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"VerificationToken"> | string
    identifier?: StringWithAggregatesFilter<"VerificationToken"> | string
    token?: StringWithAggregatesFilter<"VerificationToken"> | string
    expires?: DateTimeWithAggregatesFilter<"VerificationToken"> | Date | string
  }

  export type FormSubmissionWhereInput = {
    AND?: FormSubmissionWhereInput | FormSubmissionWhereInput[]
    OR?: FormSubmissionWhereInput[]
    NOT?: FormSubmissionWhereInput | FormSubmissionWhereInput[]
    id?: UuidFilter<"FormSubmission"> | string
    createdAt?: DateTimeFilter<"FormSubmission"> | Date | string
    updatedAt?: DateTimeFilter<"FormSubmission"> | Date | string
    formType?: EnumFormTypeFilter<"FormSubmission"> | $Enums.FormType
    companyName?: StringFilter<"FormSubmission"> | string
    contactName?: StringFilter<"FormSubmission"> | string
    email?: StringFilter<"FormSubmission"> | string
    phone?: StringFilter<"FormSubmission"> | string
    website?: StringFilter<"FormSubmission"> | string
    counties?: JsonFilter<"FormSubmission">
    frequency?: StringFilter<"FormSubmission"> | string
    pickupAddress?: JsonFilter<"FormSubmission">
    additionalComments?: StringFilter<"FormSubmission"> | string
    specifications?: StringFilter<"FormSubmission"> | string
  }

  export type FormSubmissionOrderByWithRelationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    formType?: SortOrder
    companyName?: SortOrder
    contactName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    website?: SortOrder
    counties?: SortOrder
    frequency?: SortOrder
    pickupAddress?: SortOrder
    additionalComments?: SortOrder
    specifications?: SortOrder
  }

  export type FormSubmissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FormSubmissionWhereInput | FormSubmissionWhereInput[]
    OR?: FormSubmissionWhereInput[]
    NOT?: FormSubmissionWhereInput | FormSubmissionWhereInput[]
    createdAt?: DateTimeFilter<"FormSubmission"> | Date | string
    updatedAt?: DateTimeFilter<"FormSubmission"> | Date | string
    formType?: EnumFormTypeFilter<"FormSubmission"> | $Enums.FormType
    companyName?: StringFilter<"FormSubmission"> | string
    contactName?: StringFilter<"FormSubmission"> | string
    email?: StringFilter<"FormSubmission"> | string
    phone?: StringFilter<"FormSubmission"> | string
    website?: StringFilter<"FormSubmission"> | string
    counties?: JsonFilter<"FormSubmission">
    frequency?: StringFilter<"FormSubmission"> | string
    pickupAddress?: JsonFilter<"FormSubmission">
    additionalComments?: StringFilter<"FormSubmission"> | string
    specifications?: StringFilter<"FormSubmission"> | string
  }, "id">

  export type FormSubmissionOrderByWithAggregationInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    formType?: SortOrder
    companyName?: SortOrder
    contactName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    website?: SortOrder
    counties?: SortOrder
    frequency?: SortOrder
    pickupAddress?: SortOrder
    additionalComments?: SortOrder
    specifications?: SortOrder
    _count?: FormSubmissionCountOrderByAggregateInput
    _max?: FormSubmissionMaxOrderByAggregateInput
    _min?: FormSubmissionMinOrderByAggregateInput
  }

  export type FormSubmissionScalarWhereWithAggregatesInput = {
    AND?: FormSubmissionScalarWhereWithAggregatesInput | FormSubmissionScalarWhereWithAggregatesInput[]
    OR?: FormSubmissionScalarWhereWithAggregatesInput[]
    NOT?: FormSubmissionScalarWhereWithAggregatesInput | FormSubmissionScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"FormSubmission"> | string
    createdAt?: DateTimeWithAggregatesFilter<"FormSubmission"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"FormSubmission"> | Date | string
    formType?: EnumFormTypeWithAggregatesFilter<"FormSubmission"> | $Enums.FormType
    companyName?: StringWithAggregatesFilter<"FormSubmission"> | string
    contactName?: StringWithAggregatesFilter<"FormSubmission"> | string
    email?: StringWithAggregatesFilter<"FormSubmission"> | string
    phone?: StringWithAggregatesFilter<"FormSubmission"> | string
    website?: StringWithAggregatesFilter<"FormSubmission"> | string
    counties?: JsonWithAggregatesFilter<"FormSubmission">
    frequency?: StringWithAggregatesFilter<"FormSubmission"> | string
    pickupAddress?: JsonWithAggregatesFilter<"FormSubmission">
    additionalComments?: StringWithAggregatesFilter<"FormSubmission"> | string
    specifications?: StringWithAggregatesFilter<"FormSubmission"> | string
  }

  export type LeadCaptureWhereInput = {
    AND?: LeadCaptureWhereInput | LeadCaptureWhereInput[]
    OR?: LeadCaptureWhereInput[]
    NOT?: LeadCaptureWhereInput | LeadCaptureWhereInput[]
    id?: UuidFilter<"LeadCapture"> | string
    firstName?: StringFilter<"LeadCapture"> | string
    lastName?: StringFilter<"LeadCapture"> | string
    email?: StringFilter<"LeadCapture"> | string
    industry?: StringFilter<"LeadCapture"> | string
    newsletterConsent?: BoolFilter<"LeadCapture"> | boolean
    createdAt?: DateTimeFilter<"LeadCapture"> | Date | string
    updatedAt?: DateTimeFilter<"LeadCapture"> | Date | string
  }

  export type LeadCaptureOrderByWithRelationInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    industry?: SortOrder
    newsletterConsent?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LeadCaptureWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: LeadCaptureWhereInput | LeadCaptureWhereInput[]
    OR?: LeadCaptureWhereInput[]
    NOT?: LeadCaptureWhereInput | LeadCaptureWhereInput[]
    firstName?: StringFilter<"LeadCapture"> | string
    lastName?: StringFilter<"LeadCapture"> | string
    industry?: StringFilter<"LeadCapture"> | string
    newsletterConsent?: BoolFilter<"LeadCapture"> | boolean
    createdAt?: DateTimeFilter<"LeadCapture"> | Date | string
    updatedAt?: DateTimeFilter<"LeadCapture"> | Date | string
  }, "id" | "email">

  export type LeadCaptureOrderByWithAggregationInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    industry?: SortOrder
    newsletterConsent?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: LeadCaptureCountOrderByAggregateInput
    _max?: LeadCaptureMaxOrderByAggregateInput
    _min?: LeadCaptureMinOrderByAggregateInput
  }

  export type LeadCaptureScalarWhereWithAggregatesInput = {
    AND?: LeadCaptureScalarWhereWithAggregatesInput | LeadCaptureScalarWhereWithAggregatesInput[]
    OR?: LeadCaptureScalarWhereWithAggregatesInput[]
    NOT?: LeadCaptureScalarWhereWithAggregatesInput | LeadCaptureScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"LeadCapture"> | string
    firstName?: StringWithAggregatesFilter<"LeadCapture"> | string
    lastName?: StringWithAggregatesFilter<"LeadCapture"> | string
    email?: StringWithAggregatesFilter<"LeadCapture"> | string
    industry?: StringWithAggregatesFilter<"LeadCapture"> | string
    newsletterConsent?: BoolWithAggregatesFilter<"LeadCapture"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"LeadCapture"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"LeadCapture"> | Date | string
  }

  export type JobApplicationWhereInput = {
    AND?: JobApplicationWhereInput | JobApplicationWhereInput[]
    OR?: JobApplicationWhereInput[]
    NOT?: JobApplicationWhereInput | JobApplicationWhereInput[]
    id?: UuidFilter<"JobApplication"> | string
    profileId?: UuidNullableFilter<"JobApplication"> | string | null
    firstName?: StringFilter<"JobApplication"> | string
    lastName?: StringFilter<"JobApplication"> | string
    email?: StringFilter<"JobApplication"> | string
    phone?: StringNullableFilter<"JobApplication"> | string | null
    position?: StringFilter<"JobApplication"> | string
    addressStreet?: StringFilter<"JobApplication"> | string
    addressCity?: StringFilter<"JobApplication"> | string
    addressState?: StringFilter<"JobApplication"> | string
    addressZip?: StringFilter<"JobApplication"> | string
    education?: StringNullableFilter<"JobApplication"> | string | null
    workExperience?: StringNullableFilter<"JobApplication"> | string | null
    skills?: StringNullableFilter<"JobApplication"> | string | null
    coverLetter?: StringNullableFilter<"JobApplication"> | string | null
    resumeFilePath?: StringNullableFilter<"JobApplication"> | string | null
    driversLicenseFilePath?: StringNullableFilter<"JobApplication"> | string | null
    insuranceFilePath?: StringNullableFilter<"JobApplication"> | string | null
    vehicleRegFilePath?: StringNullableFilter<"JobApplication"> | string | null
    foodHandlerFilePath?: StringNullableFilter<"JobApplication"> | string | null
    hipaaFilePath?: StringNullableFilter<"JobApplication"> | string | null
    driverPhotoFilePath?: StringNullableFilter<"JobApplication"> | string | null
    carPhotoFilePath?: StringNullableFilter<"JobApplication"> | string | null
    equipmentPhotoFilePath?: StringNullableFilter<"JobApplication"> | string | null
    status?: EnumApplicationStatusFilter<"JobApplication"> | $Enums.ApplicationStatus
    createdAt?: DateTimeFilter<"JobApplication"> | Date | string
    updatedAt?: DateTimeFilter<"JobApplication"> | Date | string
    deletedAt?: DateTimeNullableFilter<"JobApplication"> | Date | string | null
    fileUploads?: FileUploadListRelationFilter
    profile?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
  }

  export type JobApplicationOrderByWithRelationInput = {
    id?: SortOrder
    profileId?: SortOrderInput | SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    position?: SortOrder
    addressStreet?: SortOrder
    addressCity?: SortOrder
    addressState?: SortOrder
    addressZip?: SortOrder
    education?: SortOrderInput | SortOrder
    workExperience?: SortOrderInput | SortOrder
    skills?: SortOrderInput | SortOrder
    coverLetter?: SortOrderInput | SortOrder
    resumeFilePath?: SortOrderInput | SortOrder
    driversLicenseFilePath?: SortOrderInput | SortOrder
    insuranceFilePath?: SortOrderInput | SortOrder
    vehicleRegFilePath?: SortOrderInput | SortOrder
    foodHandlerFilePath?: SortOrderInput | SortOrder
    hipaaFilePath?: SortOrderInput | SortOrder
    driverPhotoFilePath?: SortOrderInput | SortOrder
    carPhotoFilePath?: SortOrderInput | SortOrder
    equipmentPhotoFilePath?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    fileUploads?: FileUploadOrderByRelationAggregateInput
    profile?: ProfileOrderByWithRelationInput
  }

  export type JobApplicationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: JobApplicationWhereInput | JobApplicationWhereInput[]
    OR?: JobApplicationWhereInput[]
    NOT?: JobApplicationWhereInput | JobApplicationWhereInput[]
    profileId?: UuidNullableFilter<"JobApplication"> | string | null
    firstName?: StringFilter<"JobApplication"> | string
    lastName?: StringFilter<"JobApplication"> | string
    email?: StringFilter<"JobApplication"> | string
    phone?: StringNullableFilter<"JobApplication"> | string | null
    position?: StringFilter<"JobApplication"> | string
    addressStreet?: StringFilter<"JobApplication"> | string
    addressCity?: StringFilter<"JobApplication"> | string
    addressState?: StringFilter<"JobApplication"> | string
    addressZip?: StringFilter<"JobApplication"> | string
    education?: StringNullableFilter<"JobApplication"> | string | null
    workExperience?: StringNullableFilter<"JobApplication"> | string | null
    skills?: StringNullableFilter<"JobApplication"> | string | null
    coverLetter?: StringNullableFilter<"JobApplication"> | string | null
    resumeFilePath?: StringNullableFilter<"JobApplication"> | string | null
    driversLicenseFilePath?: StringNullableFilter<"JobApplication"> | string | null
    insuranceFilePath?: StringNullableFilter<"JobApplication"> | string | null
    vehicleRegFilePath?: StringNullableFilter<"JobApplication"> | string | null
    foodHandlerFilePath?: StringNullableFilter<"JobApplication"> | string | null
    hipaaFilePath?: StringNullableFilter<"JobApplication"> | string | null
    driverPhotoFilePath?: StringNullableFilter<"JobApplication"> | string | null
    carPhotoFilePath?: StringNullableFilter<"JobApplication"> | string | null
    equipmentPhotoFilePath?: StringNullableFilter<"JobApplication"> | string | null
    status?: EnumApplicationStatusFilter<"JobApplication"> | $Enums.ApplicationStatus
    createdAt?: DateTimeFilter<"JobApplication"> | Date | string
    updatedAt?: DateTimeFilter<"JobApplication"> | Date | string
    deletedAt?: DateTimeNullableFilter<"JobApplication"> | Date | string | null
    fileUploads?: FileUploadListRelationFilter
    profile?: XOR<ProfileNullableScalarRelationFilter, ProfileWhereInput> | null
  }, "id">

  export type JobApplicationOrderByWithAggregationInput = {
    id?: SortOrder
    profileId?: SortOrderInput | SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    position?: SortOrder
    addressStreet?: SortOrder
    addressCity?: SortOrder
    addressState?: SortOrder
    addressZip?: SortOrder
    education?: SortOrderInput | SortOrder
    workExperience?: SortOrderInput | SortOrder
    skills?: SortOrderInput | SortOrder
    coverLetter?: SortOrderInput | SortOrder
    resumeFilePath?: SortOrderInput | SortOrder
    driversLicenseFilePath?: SortOrderInput | SortOrder
    insuranceFilePath?: SortOrderInput | SortOrder
    vehicleRegFilePath?: SortOrderInput | SortOrder
    foodHandlerFilePath?: SortOrderInput | SortOrder
    hipaaFilePath?: SortOrderInput | SortOrder
    driverPhotoFilePath?: SortOrderInput | SortOrder
    carPhotoFilePath?: SortOrderInput | SortOrder
    equipmentPhotoFilePath?: SortOrderInput | SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrderInput | SortOrder
    _count?: JobApplicationCountOrderByAggregateInput
    _max?: JobApplicationMaxOrderByAggregateInput
    _min?: JobApplicationMinOrderByAggregateInput
  }

  export type JobApplicationScalarWhereWithAggregatesInput = {
    AND?: JobApplicationScalarWhereWithAggregatesInput | JobApplicationScalarWhereWithAggregatesInput[]
    OR?: JobApplicationScalarWhereWithAggregatesInput[]
    NOT?: JobApplicationScalarWhereWithAggregatesInput | JobApplicationScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"JobApplication"> | string
    profileId?: UuidNullableWithAggregatesFilter<"JobApplication"> | string | null
    firstName?: StringWithAggregatesFilter<"JobApplication"> | string
    lastName?: StringWithAggregatesFilter<"JobApplication"> | string
    email?: StringWithAggregatesFilter<"JobApplication"> | string
    phone?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    position?: StringWithAggregatesFilter<"JobApplication"> | string
    addressStreet?: StringWithAggregatesFilter<"JobApplication"> | string
    addressCity?: StringWithAggregatesFilter<"JobApplication"> | string
    addressState?: StringWithAggregatesFilter<"JobApplication"> | string
    addressZip?: StringWithAggregatesFilter<"JobApplication"> | string
    education?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    workExperience?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    skills?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    coverLetter?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    resumeFilePath?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    driversLicenseFilePath?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    insuranceFilePath?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    vehicleRegFilePath?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    foodHandlerFilePath?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    hipaaFilePath?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    driverPhotoFilePath?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    carPhotoFilePath?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    equipmentPhotoFilePath?: StringNullableWithAggregatesFilter<"JobApplication"> | string | null
    status?: EnumApplicationStatusWithAggregatesFilter<"JobApplication"> | $Enums.ApplicationStatus
    createdAt?: DateTimeWithAggregatesFilter<"JobApplication"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"JobApplication"> | Date | string
    deletedAt?: DateTimeNullableWithAggregatesFilter<"JobApplication"> | Date | string | null
  }

  export type ProfileCreateInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    createdAddresses?: AddressCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    createdAddresses?: AddressUncheckedCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestUncheckedCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchUncheckedCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchUncheckedCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUncheckedUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUncheckedUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUncheckedUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUncheckedUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProfileCreateManyInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
  }

  export type ProfileUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type ProfileUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AccountCreateInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refreshToken?: string | null
    accessToken?: string | null
    expiresAt?: number | null
    tokenType?: string | null
    scope?: string | null
    idToken?: string | null
    sessionState?: string | null
    user: ProfileCreateNestedOneWithoutAccountsInput
  }

  export type AccountUncheckedCreateInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refreshToken?: string | null
    accessToken?: string | null
    expiresAt?: number | null
    tokenType?: string | null
    scope?: string | null
    idToken?: string | null
    sessionState?: string | null
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableIntFieldUpdateOperationsInput | number | null
    tokenType?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    sessionState?: NullableStringFieldUpdateOperationsInput | string | null
    user?: ProfileUpdateOneRequiredWithoutAccountsNestedInput
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableIntFieldUpdateOperationsInput | number | null
    tokenType?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    sessionState?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountCreateManyInput = {
    id?: string
    userId: string
    type: string
    provider: string
    providerAccountId: string
    refreshToken?: string | null
    accessToken?: string | null
    expiresAt?: number | null
    tokenType?: string | null
    scope?: string | null
    idToken?: string | null
    sessionState?: string | null
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableIntFieldUpdateOperationsInput | number | null
    tokenType?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    sessionState?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableIntFieldUpdateOperationsInput | number | null
    tokenType?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    sessionState?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type SessionCreateInput = {
    id?: string
    sessionToken: string
    expires: Date | string
    user: ProfileCreateNestedOneWithoutSessionsInput
  }

  export type SessionUncheckedCreateInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
  }

  export type SessionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: ProfileUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type SessionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionCreateManyInput = {
    id?: string
    sessionToken: string
    userId: string
    expires: Date | string
  }

  export type SessionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AddressCreateInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    creator?: ProfileCreateNestedOneWithoutCreatedAddressesInput
    cateringDeliveryRequests?: CateringRequestCreateNestedManyWithoutDeliveryAddressInput
    cateringPickupRequests?: CateringRequestCreateNestedManyWithoutPickupAddressInput
    onDemandDeliveryRequests?: OnDemandCreateNestedManyWithoutDeliveryAddressInput
    onDemandPickupRequests?: OnDemandCreateNestedManyWithoutPickupAddressInput
    userAddresses?: UserAddressCreateNestedManyWithoutAddressInput
  }

  export type AddressUncheckedCreateInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    createdBy?: string | null
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    cateringDeliveryRequests?: CateringRequestUncheckedCreateNestedManyWithoutDeliveryAddressInput
    cateringPickupRequests?: CateringRequestUncheckedCreateNestedManyWithoutPickupAddressInput
    onDemandDeliveryRequests?: OnDemandUncheckedCreateNestedManyWithoutDeliveryAddressInput
    onDemandPickupRequests?: OnDemandUncheckedCreateNestedManyWithoutPickupAddressInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creator?: ProfileUpdateOneWithoutCreatedAddressesNestedInput
    cateringDeliveryRequests?: CateringRequestUpdateManyWithoutDeliveryAddressNestedInput
    cateringPickupRequests?: CateringRequestUpdateManyWithoutPickupAddressNestedInput
    onDemandDeliveryRequests?: OnDemandUpdateManyWithoutDeliveryAddressNestedInput
    onDemandPickupRequests?: OnDemandUpdateManyWithoutPickupAddressNestedInput
    userAddresses?: UserAddressUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cateringDeliveryRequests?: CateringRequestUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    cateringPickupRequests?: CateringRequestUncheckedUpdateManyWithoutPickupAddressNestedInput
    onDemandDeliveryRequests?: OnDemandUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    onDemandPickupRequests?: OnDemandUncheckedUpdateManyWithoutPickupAddressNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type AddressCreateManyInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    createdBy?: string | null
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
  }

  export type AddressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type AddressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CateringRequestCreateInput = {
    id?: string
    guid?: string | null
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    deliveryAddress: AddressCreateNestedOneWithoutCateringDeliveryRequestsInput
    pickupAddress: AddressCreateNestedOneWithoutCateringPickupRequestsInput
    user: ProfileCreateNestedOneWithoutCateringRequestsInput
    dispatches?: DispatchCreateNestedManyWithoutCateringRequestInput
    fileUploads?: FileUploadCreateNestedManyWithoutCateringRequestInput
  }

  export type CateringRequestUncheckedCreateInput = {
    id?: string
    guid?: string | null
    userId: string
    pickupAddressId: string
    deliveryAddressId: string
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchUncheckedCreateNestedManyWithoutCateringRequestInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutCateringRequestInput
  }

  export type CateringRequestUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: AddressUpdateOneRequiredWithoutCateringDeliveryRequestsNestedInput
    pickupAddress?: AddressUpdateOneRequiredWithoutCateringPickupRequestsNestedInput
    user?: ProfileUpdateOneRequiredWithoutCateringRequestsNestedInput
    dispatches?: DispatchUpdateManyWithoutCateringRequestNestedInput
    fileUploads?: FileUploadUpdateManyWithoutCateringRequestNestedInput
  }

  export type CateringRequestUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUncheckedUpdateManyWithoutCateringRequestNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutCateringRequestNestedInput
  }

  export type CateringRequestCreateManyInput = {
    id?: string
    guid?: string | null
    userId: string
    pickupAddressId: string
    deliveryAddressId: string
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
  }

  export type CateringRequestUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CateringRequestUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DispatchCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    cateringRequest?: CateringRequestCreateNestedOneWithoutDispatchesInput
    driver?: ProfileCreateNestedOneWithoutDriverDispatchesInput
    onDemand?: OnDemandCreateNestedOneWithoutDispatchesInput
    user?: ProfileCreateNestedOneWithoutUserDispatchesInput
  }

  export type DispatchUncheckedCreateInput = {
    id?: string
    cateringRequestId?: string | null
    createdAt?: Date | string
    driverId?: string | null
    onDemandId?: string | null
    updatedAt?: Date | string
    userId?: string | null
  }

  export type DispatchUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateringRequest?: CateringRequestUpdateOneWithoutDispatchesNestedInput
    driver?: ProfileUpdateOneWithoutDriverDispatchesNestedInput
    onDemand?: OnDemandUpdateOneWithoutDispatchesNestedInput
    user?: ProfileUpdateOneWithoutUserDispatchesNestedInput
  }

  export type DispatchUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DispatchCreateManyInput = {
    id?: string
    cateringRequestId?: string | null
    createdAt?: Date | string
    driverId?: string | null
    onDemandId?: string | null
    updatedAt?: Date | string
    userId?: string | null
  }

  export type DispatchUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DispatchUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FileUploadCreateInput = {
    id?: string
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    isTemporary?: boolean
    cateringRequest?: CateringRequestCreateNestedOneWithoutFileUploadsInput
    jobApplication?: JobApplicationCreateNestedOneWithoutFileUploadsInput
    onDemand?: OnDemandCreateNestedOneWithoutFileUploadsInput
    user?: ProfileCreateNestedOneWithoutFileUploadsInput
  }

  export type FileUploadUncheckedCreateInput = {
    id?: string
    userId?: string | null
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    cateringRequestId?: string | null
    onDemandId?: string | null
    jobApplicationId?: string | null
    category?: string | null
    isTemporary?: boolean
  }

  export type FileUploadUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
    cateringRequest?: CateringRequestUpdateOneWithoutFileUploadsNestedInput
    jobApplication?: JobApplicationUpdateOneWithoutFileUploadsNestedInput
    onDemand?: OnDemandUpdateOneWithoutFileUploadsNestedInput
    user?: ProfileUpdateOneWithoutFileUploadsNestedInput
  }

  export type FileUploadUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    jobApplicationId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FileUploadCreateManyInput = {
    id?: string
    userId?: string | null
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    cateringRequestId?: string | null
    onDemandId?: string | null
    jobApplicationId?: string | null
    category?: string | null
    isTemporary?: boolean
  }

  export type FileUploadUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FileUploadUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    jobApplicationId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OnDemandCreateInput = {
    id?: string
    guid?: string | null
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchCreateNestedManyWithoutOnDemandInput
    fileUploads?: FileUploadCreateNestedManyWithoutOnDemandInput
    deliveryAddress: AddressCreateNestedOneWithoutOnDemandDeliveryRequestsInput
    pickupAddress: AddressCreateNestedOneWithoutOnDemandPickupRequestsInput
    user: ProfileCreateNestedOneWithoutOnDemandRequestsInput
  }

  export type OnDemandUncheckedCreateInput = {
    id?: string
    guid?: string | null
    userId: string
    pickupAddressId: string
    deliveryAddressId: string
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchUncheckedCreateNestedManyWithoutOnDemandInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutOnDemandInput
  }

  export type OnDemandUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUpdateManyWithoutOnDemandNestedInput
    fileUploads?: FileUploadUpdateManyWithoutOnDemandNestedInput
    deliveryAddress?: AddressUpdateOneRequiredWithoutOnDemandDeliveryRequestsNestedInput
    pickupAddress?: AddressUpdateOneRequiredWithoutOnDemandPickupRequestsNestedInput
    user?: ProfileUpdateOneRequiredWithoutOnDemandRequestsNestedInput
  }

  export type OnDemandUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUncheckedUpdateManyWithoutOnDemandNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutOnDemandNestedInput
  }

  export type OnDemandCreateManyInput = {
    id?: string
    guid?: string | null
    userId: string
    pickupAddressId: string
    deliveryAddressId: string
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
  }

  export type OnDemandUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OnDemandUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserAddressCreateInput = {
    id?: string
    alias?: string | null
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    address: AddressCreateNestedOneWithoutUserAddressesInput
    user: ProfileCreateNestedOneWithoutUserAddressesInput
  }

  export type UserAddressUncheckedCreateInput = {
    id?: string
    userId: string
    addressId: string
    alias?: string | null
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserAddressUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    address?: AddressUpdateOneRequiredWithoutUserAddressesNestedInput
    user?: ProfileUpdateOneRequiredWithoutUserAddressesNestedInput
  }

  export type UserAddressUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserAddressCreateManyInput = {
    id?: string
    userId: string
    addressId: string
    alias?: string | null
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserAddressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserAddressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenCreateInput = {
    id?: string
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUncheckedCreateInput = {
    id?: string
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenCreateManyInput = {
    id?: string
    identifier: string
    token: string
    expires: Date | string
  }

  export type VerificationTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type VerificationTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    identifier?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FormSubmissionCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    formType: $Enums.FormType
    companyName: string
    contactName: string
    email: string
    phone: string
    website: string
    counties: JsonNullValueInput | InputJsonValue
    frequency: string
    pickupAddress: JsonNullValueInput | InputJsonValue
    additionalComments: string
    specifications: string
  }

  export type FormSubmissionUncheckedCreateInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    formType: $Enums.FormType
    companyName: string
    contactName: string
    email: string
    phone: string
    website: string
    counties: JsonNullValueInput | InputJsonValue
    frequency: string
    pickupAddress: JsonNullValueInput | InputJsonValue
    additionalComments: string
    specifications: string
  }

  export type FormSubmissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    formType?: EnumFormTypeFieldUpdateOperationsInput | $Enums.FormType
    companyName?: StringFieldUpdateOperationsInput | string
    contactName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    website?: StringFieldUpdateOperationsInput | string
    counties?: JsonNullValueInput | InputJsonValue
    frequency?: StringFieldUpdateOperationsInput | string
    pickupAddress?: JsonNullValueInput | InputJsonValue
    additionalComments?: StringFieldUpdateOperationsInput | string
    specifications?: StringFieldUpdateOperationsInput | string
  }

  export type FormSubmissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    formType?: EnumFormTypeFieldUpdateOperationsInput | $Enums.FormType
    companyName?: StringFieldUpdateOperationsInput | string
    contactName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    website?: StringFieldUpdateOperationsInput | string
    counties?: JsonNullValueInput | InputJsonValue
    frequency?: StringFieldUpdateOperationsInput | string
    pickupAddress?: JsonNullValueInput | InputJsonValue
    additionalComments?: StringFieldUpdateOperationsInput | string
    specifications?: StringFieldUpdateOperationsInput | string
  }

  export type FormSubmissionCreateManyInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    formType: $Enums.FormType
    companyName: string
    contactName: string
    email: string
    phone: string
    website: string
    counties: JsonNullValueInput | InputJsonValue
    frequency: string
    pickupAddress: JsonNullValueInput | InputJsonValue
    additionalComments: string
    specifications: string
  }

  export type FormSubmissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    formType?: EnumFormTypeFieldUpdateOperationsInput | $Enums.FormType
    companyName?: StringFieldUpdateOperationsInput | string
    contactName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    website?: StringFieldUpdateOperationsInput | string
    counties?: JsonNullValueInput | InputJsonValue
    frequency?: StringFieldUpdateOperationsInput | string
    pickupAddress?: JsonNullValueInput | InputJsonValue
    additionalComments?: StringFieldUpdateOperationsInput | string
    specifications?: StringFieldUpdateOperationsInput | string
  }

  export type FormSubmissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    formType?: EnumFormTypeFieldUpdateOperationsInput | $Enums.FormType
    companyName?: StringFieldUpdateOperationsInput | string
    contactName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    website?: StringFieldUpdateOperationsInput | string
    counties?: JsonNullValueInput | InputJsonValue
    frequency?: StringFieldUpdateOperationsInput | string
    pickupAddress?: JsonNullValueInput | InputJsonValue
    additionalComments?: StringFieldUpdateOperationsInput | string
    specifications?: StringFieldUpdateOperationsInput | string
  }

  export type LeadCaptureCreateInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    industry: string
    newsletterConsent?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LeadCaptureUncheckedCreateInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    industry: string
    newsletterConsent?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LeadCaptureUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    industry?: StringFieldUpdateOperationsInput | string
    newsletterConsent?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeadCaptureUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    industry?: StringFieldUpdateOperationsInput | string
    newsletterConsent?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeadCaptureCreateManyInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    industry: string
    newsletterConsent?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type LeadCaptureUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    industry?: StringFieldUpdateOperationsInput | string
    newsletterConsent?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type LeadCaptureUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    industry?: StringFieldUpdateOperationsInput | string
    newsletterConsent?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type JobApplicationCreateInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    position: string
    addressStreet: string
    addressCity: string
    addressState: string
    addressZip: string
    education?: string | null
    workExperience?: string | null
    skills?: string | null
    coverLetter?: string | null
    resumeFilePath?: string | null
    driversLicenseFilePath?: string | null
    insuranceFilePath?: string | null
    vehicleRegFilePath?: string | null
    foodHandlerFilePath?: string | null
    hipaaFilePath?: string | null
    driverPhotoFilePath?: string | null
    carPhotoFilePath?: string | null
    equipmentPhotoFilePath?: string | null
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    fileUploads?: FileUploadCreateNestedManyWithoutJobApplicationInput
    profile?: ProfileCreateNestedOneWithoutJobApplicationsInput
  }

  export type JobApplicationUncheckedCreateInput = {
    id?: string
    profileId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    position: string
    addressStreet: string
    addressCity: string
    addressState: string
    addressZip: string
    education?: string | null
    workExperience?: string | null
    skills?: string | null
    coverLetter?: string | null
    resumeFilePath?: string | null
    driversLicenseFilePath?: string | null
    insuranceFilePath?: string | null
    vehicleRegFilePath?: string | null
    foodHandlerFilePath?: string | null
    hipaaFilePath?: string | null
    driverPhotoFilePath?: string | null
    carPhotoFilePath?: string | null
    equipmentPhotoFilePath?: string | null
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutJobApplicationInput
  }

  export type JobApplicationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    position?: StringFieldUpdateOperationsInput | string
    addressStreet?: StringFieldUpdateOperationsInput | string
    addressCity?: StringFieldUpdateOperationsInput | string
    addressState?: StringFieldUpdateOperationsInput | string
    addressZip?: StringFieldUpdateOperationsInput | string
    education?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    resumeFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driversLicenseFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleRegFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    foodHandlerFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    hipaaFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driverPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    carPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fileUploads?: FileUploadUpdateManyWithoutJobApplicationNestedInput
    profile?: ProfileUpdateOneWithoutJobApplicationsNestedInput
  }

  export type JobApplicationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    position?: StringFieldUpdateOperationsInput | string
    addressStreet?: StringFieldUpdateOperationsInput | string
    addressCity?: StringFieldUpdateOperationsInput | string
    addressState?: StringFieldUpdateOperationsInput | string
    addressZip?: StringFieldUpdateOperationsInput | string
    education?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    resumeFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driversLicenseFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleRegFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    foodHandlerFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    hipaaFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driverPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    carPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fileUploads?: FileUploadUncheckedUpdateManyWithoutJobApplicationNestedInput
  }

  export type JobApplicationCreateManyInput = {
    id?: string
    profileId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    position: string
    addressStreet: string
    addressCity: string
    addressState: string
    addressZip: string
    education?: string | null
    workExperience?: string | null
    skills?: string | null
    coverLetter?: string | null
    resumeFilePath?: string | null
    driversLicenseFilePath?: string | null
    insuranceFilePath?: string | null
    vehicleRegFilePath?: string | null
    foodHandlerFilePath?: string | null
    hipaaFilePath?: string | null
    driverPhotoFilePath?: string | null
    carPhotoFilePath?: string | null
    equipmentPhotoFilePath?: string | null
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type JobApplicationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    position?: StringFieldUpdateOperationsInput | string
    addressStreet?: StringFieldUpdateOperationsInput | string
    addressCity?: StringFieldUpdateOperationsInput | string
    addressState?: StringFieldUpdateOperationsInput | string
    addressZip?: StringFieldUpdateOperationsInput | string
    education?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    resumeFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driversLicenseFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleRegFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    foodHandlerFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    hipaaFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driverPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    carPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type JobApplicationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    position?: StringFieldUpdateOperationsInput | string
    addressStreet?: StringFieldUpdateOperationsInput | string
    addressCity?: StringFieldUpdateOperationsInput | string
    addressState?: StringFieldUpdateOperationsInput | string
    addressZip?: StringFieldUpdateOperationsInput | string
    education?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    resumeFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driversLicenseFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleRegFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    foodHandlerFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    hipaaFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driverPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    carPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type EnumUserTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeFilter<$PrismaModel> | $Enums.UserType
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type EnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type AccountListRelationFilter = {
    every?: AccountWhereInput
    some?: AccountWhereInput
    none?: AccountWhereInput
  }

  export type AddressListRelationFilter = {
    every?: AddressWhereInput
    some?: AddressWhereInput
    none?: AddressWhereInput
  }

  export type CateringRequestListRelationFilter = {
    every?: CateringRequestWhereInput
    some?: CateringRequestWhereInput
    none?: CateringRequestWhereInput
  }

  export type DispatchListRelationFilter = {
    every?: DispatchWhereInput
    some?: DispatchWhereInput
    none?: DispatchWhereInput
  }

  export type FileUploadListRelationFilter = {
    every?: FileUploadWhereInput
    some?: FileUploadWhereInput
    none?: FileUploadWhereInput
  }

  export type JobApplicationListRelationFilter = {
    every?: JobApplicationWhereInput
    some?: JobApplicationWhereInput
    none?: JobApplicationWhereInput
  }

  export type OnDemandListRelationFilter = {
    every?: OnDemandWhereInput
    some?: OnDemandWhereInput
    none?: OnDemandWhereInput
  }

  export type SessionListRelationFilter = {
    every?: SessionWhereInput
    some?: SessionWhereInput
    none?: SessionWhereInput
  }

  export type UserAddressListRelationFilter = {
    every?: UserAddressWhereInput
    some?: UserAddressWhereInput
    none?: UserAddressWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type AccountOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AddressOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CateringRequestOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type DispatchOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type FileUploadOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type JobApplicationOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OnDemandOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SessionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserAddressOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProfileCountOrderByAggregateInput = {
    id?: SortOrder
    guid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    image?: SortOrder
    type?: SortOrder
    companyName?: SortOrder
    contactName?: SortOrder
    contactNumber?: SortOrder
    website?: SortOrder
    street1?: SortOrder
    street2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zip?: SortOrder
    locationNumber?: SortOrder
    parkingLoading?: SortOrder
    counties?: SortOrder
    timeNeeded?: SortOrder
    cateringBrokerage?: SortOrder
    frequency?: SortOrder
    provide?: SortOrder
    headCount?: SortOrder
    status?: SortOrder
    sideNotes?: SortOrder
    confirmationCode?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isTemporaryPassword?: SortOrder
    deletedAt?: SortOrder
  }

  export type ProfileAvgOrderByAggregateInput = {
    headCount?: SortOrder
  }

  export type ProfileMaxOrderByAggregateInput = {
    id?: SortOrder
    guid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    image?: SortOrder
    type?: SortOrder
    companyName?: SortOrder
    contactName?: SortOrder
    contactNumber?: SortOrder
    website?: SortOrder
    street1?: SortOrder
    street2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zip?: SortOrder
    locationNumber?: SortOrder
    parkingLoading?: SortOrder
    timeNeeded?: SortOrder
    cateringBrokerage?: SortOrder
    frequency?: SortOrder
    provide?: SortOrder
    headCount?: SortOrder
    status?: SortOrder
    sideNotes?: SortOrder
    confirmationCode?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isTemporaryPassword?: SortOrder
    deletedAt?: SortOrder
  }

  export type ProfileMinOrderByAggregateInput = {
    id?: SortOrder
    guid?: SortOrder
    name?: SortOrder
    email?: SortOrder
    image?: SortOrder
    type?: SortOrder
    companyName?: SortOrder
    contactName?: SortOrder
    contactNumber?: SortOrder
    website?: SortOrder
    street1?: SortOrder
    street2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zip?: SortOrder
    locationNumber?: SortOrder
    parkingLoading?: SortOrder
    timeNeeded?: SortOrder
    cateringBrokerage?: SortOrder
    frequency?: SortOrder
    provide?: SortOrder
    headCount?: SortOrder
    status?: SortOrder
    sideNotes?: SortOrder
    confirmationCode?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    isTemporaryPassword?: SortOrder
    deletedAt?: SortOrder
  }

  export type ProfileSumOrderByAggregateInput = {
    headCount?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type EnumUserTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeWithAggregatesFilter<$PrismaModel> | $Enums.UserType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserTypeFilter<$PrismaModel>
    _max?: NestedEnumUserTypeFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type EnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type ProfileScalarRelationFilter = {
    is?: ProfileWhereInput
    isNot?: ProfileWhereInput
  }

  export type AccountProviderProviderAccountIdCompoundUniqueInput = {
    provider: string
    providerAccountId: string
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refreshToken?: SortOrder
    accessToken?: SortOrder
    expiresAt?: SortOrder
    tokenType?: SortOrder
    scope?: SortOrder
    idToken?: SortOrder
    sessionState?: SortOrder
  }

  export type AccountAvgOrderByAggregateInput = {
    expiresAt?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refreshToken?: SortOrder
    accessToken?: SortOrder
    expiresAt?: SortOrder
    tokenType?: SortOrder
    scope?: SortOrder
    idToken?: SortOrder
    sessionState?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    type?: SortOrder
    provider?: SortOrder
    providerAccountId?: SortOrder
    refreshToken?: SortOrder
    accessToken?: SortOrder
    expiresAt?: SortOrder
    tokenType?: SortOrder
    scope?: SortOrder
    idToken?: SortOrder
    sessionState?: SortOrder
  }

  export type AccountSumOrderByAggregateInput = {
    expiresAt?: SortOrder
  }

  export type SessionCountOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type SessionMaxOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type SessionMinOrderByAggregateInput = {
    id?: SortOrder
    sessionToken?: SortOrder
    userId?: SortOrder
    expires?: SortOrder
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type ProfileNullableScalarRelationFilter = {
    is?: ProfileWhereInput | null
    isNot?: ProfileWhereInput | null
  }

  export type AddressCountOrderByAggregateInput = {
    id?: SortOrder
    county?: SortOrder
    street1?: SortOrder
    street2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zip?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    isRestaurant?: SortOrder
    isShared?: SortOrder
    locationNumber?: SortOrder
    parkingLoading?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    deletedAt?: SortOrder
  }

  export type AddressAvgOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type AddressMaxOrderByAggregateInput = {
    id?: SortOrder
    county?: SortOrder
    street1?: SortOrder
    street2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zip?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    isRestaurant?: SortOrder
    isShared?: SortOrder
    locationNumber?: SortOrder
    parkingLoading?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    deletedAt?: SortOrder
  }

  export type AddressMinOrderByAggregateInput = {
    id?: SortOrder
    county?: SortOrder
    street1?: SortOrder
    street2?: SortOrder
    city?: SortOrder
    state?: SortOrder
    zip?: SortOrder
    createdAt?: SortOrder
    createdBy?: SortOrder
    isRestaurant?: SortOrder
    isShared?: SortOrder
    locationNumber?: SortOrder
    parkingLoading?: SortOrder
    updatedAt?: SortOrder
    name?: SortOrder
    latitude?: SortOrder
    longitude?: SortOrder
    deletedAt?: SortOrder
  }

  export type AddressSumOrderByAggregateInput = {
    latitude?: SortOrder
    longitude?: SortOrder
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type EnumCateringNeedHostFilter<$PrismaModel = never> = {
    equals?: $Enums.CateringNeedHost | EnumCateringNeedHostFieldRefInput<$PrismaModel>
    in?: $Enums.CateringNeedHost[] | ListEnumCateringNeedHostFieldRefInput<$PrismaModel>
    notIn?: $Enums.CateringNeedHost[] | ListEnumCateringNeedHostFieldRefInput<$PrismaModel>
    not?: NestedEnumCateringNeedHostFilter<$PrismaModel> | $Enums.CateringNeedHost
  }

  export type EnumCateringStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CateringStatus | EnumCateringStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CateringStatus[] | ListEnumCateringStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CateringStatus[] | ListEnumCateringStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCateringStatusFilter<$PrismaModel> | $Enums.CateringStatus
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type EnumDriverStatusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.DriverStatus | EnumDriverStatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDriverStatusNullableFilter<$PrismaModel> | $Enums.DriverStatus | null
  }

  export type AddressScalarRelationFilter = {
    is?: AddressWhereInput
    isNot?: AddressWhereInput
  }

  export type CateringRequestCountOrderByAggregateInput = {
    id?: SortOrder
    guid?: SortOrder
    userId?: SortOrder
    pickupAddressId?: SortOrder
    deliveryAddressId?: SortOrder
    brokerage?: SortOrder
    orderNumber?: SortOrder
    pickupDateTime?: SortOrder
    arrivalDateTime?: SortOrder
    completeDateTime?: SortOrder
    headcount?: SortOrder
    needHost?: SortOrder
    hoursNeeded?: SortOrder
    numberOfHosts?: SortOrder
    clientAttention?: SortOrder
    pickupNotes?: SortOrder
    specialNotes?: SortOrder
    image?: SortOrder
    status?: SortOrder
    orderTotal?: SortOrder
    tip?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverStatus?: SortOrder
    deletedAt?: SortOrder
  }

  export type CateringRequestAvgOrderByAggregateInput = {
    headcount?: SortOrder
    hoursNeeded?: SortOrder
    numberOfHosts?: SortOrder
    orderTotal?: SortOrder
    tip?: SortOrder
  }

  export type CateringRequestMaxOrderByAggregateInput = {
    id?: SortOrder
    guid?: SortOrder
    userId?: SortOrder
    pickupAddressId?: SortOrder
    deliveryAddressId?: SortOrder
    brokerage?: SortOrder
    orderNumber?: SortOrder
    pickupDateTime?: SortOrder
    arrivalDateTime?: SortOrder
    completeDateTime?: SortOrder
    headcount?: SortOrder
    needHost?: SortOrder
    hoursNeeded?: SortOrder
    numberOfHosts?: SortOrder
    clientAttention?: SortOrder
    pickupNotes?: SortOrder
    specialNotes?: SortOrder
    image?: SortOrder
    status?: SortOrder
    orderTotal?: SortOrder
    tip?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverStatus?: SortOrder
    deletedAt?: SortOrder
  }

  export type CateringRequestMinOrderByAggregateInput = {
    id?: SortOrder
    guid?: SortOrder
    userId?: SortOrder
    pickupAddressId?: SortOrder
    deliveryAddressId?: SortOrder
    brokerage?: SortOrder
    orderNumber?: SortOrder
    pickupDateTime?: SortOrder
    arrivalDateTime?: SortOrder
    completeDateTime?: SortOrder
    headcount?: SortOrder
    needHost?: SortOrder
    hoursNeeded?: SortOrder
    numberOfHosts?: SortOrder
    clientAttention?: SortOrder
    pickupNotes?: SortOrder
    specialNotes?: SortOrder
    image?: SortOrder
    status?: SortOrder
    orderTotal?: SortOrder
    tip?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverStatus?: SortOrder
    deletedAt?: SortOrder
  }

  export type CateringRequestSumOrderByAggregateInput = {
    headcount?: SortOrder
    hoursNeeded?: SortOrder
    numberOfHosts?: SortOrder
    orderTotal?: SortOrder
    tip?: SortOrder
  }

  export type EnumCateringNeedHostWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CateringNeedHost | EnumCateringNeedHostFieldRefInput<$PrismaModel>
    in?: $Enums.CateringNeedHost[] | ListEnumCateringNeedHostFieldRefInput<$PrismaModel>
    notIn?: $Enums.CateringNeedHost[] | ListEnumCateringNeedHostFieldRefInput<$PrismaModel>
    not?: NestedEnumCateringNeedHostWithAggregatesFilter<$PrismaModel> | $Enums.CateringNeedHost
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCateringNeedHostFilter<$PrismaModel>
    _max?: NestedEnumCateringNeedHostFilter<$PrismaModel>
  }

  export type EnumCateringStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CateringStatus | EnumCateringStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CateringStatus[] | ListEnumCateringStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CateringStatus[] | ListEnumCateringStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCateringStatusWithAggregatesFilter<$PrismaModel> | $Enums.CateringStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCateringStatusFilter<$PrismaModel>
    _max?: NestedEnumCateringStatusFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type EnumDriverStatusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DriverStatus | EnumDriverStatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDriverStatusNullableWithAggregatesFilter<$PrismaModel> | $Enums.DriverStatus | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumDriverStatusNullableFilter<$PrismaModel>
    _max?: NestedEnumDriverStatusNullableFilter<$PrismaModel>
  }

  export type CateringRequestNullableScalarRelationFilter = {
    is?: CateringRequestWhereInput | null
    isNot?: CateringRequestWhereInput | null
  }

  export type OnDemandNullableScalarRelationFilter = {
    is?: OnDemandWhereInput | null
    isNot?: OnDemandWhereInput | null
  }

  export type DispatchCountOrderByAggregateInput = {
    id?: SortOrder
    cateringRequestId?: SortOrder
    createdAt?: SortOrder
    driverId?: SortOrder
    onDemandId?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
  }

  export type DispatchMaxOrderByAggregateInput = {
    id?: SortOrder
    cateringRequestId?: SortOrder
    createdAt?: SortOrder
    driverId?: SortOrder
    onDemandId?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
  }

  export type DispatchMinOrderByAggregateInput = {
    id?: SortOrder
    cateringRequestId?: SortOrder
    createdAt?: SortOrder
    driverId?: SortOrder
    onDemandId?: SortOrder
    updatedAt?: SortOrder
    userId?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type JobApplicationNullableScalarRelationFilter = {
    is?: JobApplicationWhereInput | null
    isNot?: JobApplicationWhereInput | null
  }

  export type FileUploadCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    fileName?: SortOrder
    fileType?: SortOrder
    fileSize?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
    cateringRequestId?: SortOrder
    onDemandId?: SortOrder
    jobApplicationId?: SortOrder
    category?: SortOrder
    isTemporary?: SortOrder
  }

  export type FileUploadAvgOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type FileUploadMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    fileName?: SortOrder
    fileType?: SortOrder
    fileSize?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
    cateringRequestId?: SortOrder
    onDemandId?: SortOrder
    jobApplicationId?: SortOrder
    category?: SortOrder
    isTemporary?: SortOrder
  }

  export type FileUploadMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    fileName?: SortOrder
    fileType?: SortOrder
    fileSize?: SortOrder
    fileUrl?: SortOrder
    uploadedAt?: SortOrder
    updatedAt?: SortOrder
    cateringRequestId?: SortOrder
    onDemandId?: SortOrder
    jobApplicationId?: SortOrder
    category?: SortOrder
    isTemporary?: SortOrder
  }

  export type FileUploadSumOrderByAggregateInput = {
    fileSize?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EnumVehicleTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleType | EnumVehicleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleTypeFilter<$PrismaModel> | $Enums.VehicleType
  }

  export type EnumOnDemandStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OnDemandStatus | EnumOnDemandStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OnDemandStatus[] | ListEnumOnDemandStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OnDemandStatus[] | ListEnumOnDemandStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOnDemandStatusFilter<$PrismaModel> | $Enums.OnDemandStatus
  }

  export type OnDemandCountOrderByAggregateInput = {
    id?: SortOrder
    guid?: SortOrder
    userId?: SortOrder
    pickupAddressId?: SortOrder
    deliveryAddressId?: SortOrder
    orderNumber?: SortOrder
    pickupDateTime?: SortOrder
    arrivalDateTime?: SortOrder
    completeDateTime?: SortOrder
    hoursNeeded?: SortOrder
    itemDelivered?: SortOrder
    vehicleType?: SortOrder
    clientAttention?: SortOrder
    pickupNotes?: SortOrder
    specialNotes?: SortOrder
    image?: SortOrder
    status?: SortOrder
    orderTotal?: SortOrder
    tip?: SortOrder
    length?: SortOrder
    width?: SortOrder
    height?: SortOrder
    weight?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverStatus?: SortOrder
    deletedAt?: SortOrder
  }

  export type OnDemandAvgOrderByAggregateInput = {
    hoursNeeded?: SortOrder
    orderTotal?: SortOrder
    tip?: SortOrder
    length?: SortOrder
    width?: SortOrder
    height?: SortOrder
    weight?: SortOrder
  }

  export type OnDemandMaxOrderByAggregateInput = {
    id?: SortOrder
    guid?: SortOrder
    userId?: SortOrder
    pickupAddressId?: SortOrder
    deliveryAddressId?: SortOrder
    orderNumber?: SortOrder
    pickupDateTime?: SortOrder
    arrivalDateTime?: SortOrder
    completeDateTime?: SortOrder
    hoursNeeded?: SortOrder
    itemDelivered?: SortOrder
    vehicleType?: SortOrder
    clientAttention?: SortOrder
    pickupNotes?: SortOrder
    specialNotes?: SortOrder
    image?: SortOrder
    status?: SortOrder
    orderTotal?: SortOrder
    tip?: SortOrder
    length?: SortOrder
    width?: SortOrder
    height?: SortOrder
    weight?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverStatus?: SortOrder
    deletedAt?: SortOrder
  }

  export type OnDemandMinOrderByAggregateInput = {
    id?: SortOrder
    guid?: SortOrder
    userId?: SortOrder
    pickupAddressId?: SortOrder
    deliveryAddressId?: SortOrder
    orderNumber?: SortOrder
    pickupDateTime?: SortOrder
    arrivalDateTime?: SortOrder
    completeDateTime?: SortOrder
    hoursNeeded?: SortOrder
    itemDelivered?: SortOrder
    vehicleType?: SortOrder
    clientAttention?: SortOrder
    pickupNotes?: SortOrder
    specialNotes?: SortOrder
    image?: SortOrder
    status?: SortOrder
    orderTotal?: SortOrder
    tip?: SortOrder
    length?: SortOrder
    width?: SortOrder
    height?: SortOrder
    weight?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    driverStatus?: SortOrder
    deletedAt?: SortOrder
  }

  export type OnDemandSumOrderByAggregateInput = {
    hoursNeeded?: SortOrder
    orderTotal?: SortOrder
    tip?: SortOrder
    length?: SortOrder
    width?: SortOrder
    height?: SortOrder
    weight?: SortOrder
  }

  export type EnumVehicleTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleType | EnumVehicleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleTypeWithAggregatesFilter<$PrismaModel> | $Enums.VehicleType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVehicleTypeFilter<$PrismaModel>
    _max?: NestedEnumVehicleTypeFilter<$PrismaModel>
  }

  export type EnumOnDemandStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OnDemandStatus | EnumOnDemandStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OnDemandStatus[] | ListEnumOnDemandStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OnDemandStatus[] | ListEnumOnDemandStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOnDemandStatusWithAggregatesFilter<$PrismaModel> | $Enums.OnDemandStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOnDemandStatusFilter<$PrismaModel>
    _max?: NestedEnumOnDemandStatusFilter<$PrismaModel>
  }

  export type UserAddressUserIdAddressIdCompoundUniqueInput = {
    userId: string
    addressId: string
  }

  export type UserAddressCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    addressId?: SortOrder
    alias?: SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAddressMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    addressId?: SortOrder
    alias?: SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserAddressMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    addressId?: SortOrder
    alias?: SortOrder
    isDefault?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type VerificationTokenIdentifierTokenCompoundUniqueInput = {
    identifier: string
    token: string
  }

  export type VerificationTokenCountOrderByAggregateInput = {
    id?: SortOrder
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type VerificationTokenMinOrderByAggregateInput = {
    id?: SortOrder
    identifier?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type EnumFormTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.FormType | EnumFormTypeFieldRefInput<$PrismaModel>
    in?: $Enums.FormType[] | ListEnumFormTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.FormType[] | ListEnumFormTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumFormTypeFilter<$PrismaModel> | $Enums.FormType
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type FormSubmissionCountOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    formType?: SortOrder
    companyName?: SortOrder
    contactName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    website?: SortOrder
    counties?: SortOrder
    frequency?: SortOrder
    pickupAddress?: SortOrder
    additionalComments?: SortOrder
    specifications?: SortOrder
  }

  export type FormSubmissionMaxOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    formType?: SortOrder
    companyName?: SortOrder
    contactName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    website?: SortOrder
    frequency?: SortOrder
    additionalComments?: SortOrder
    specifications?: SortOrder
  }

  export type FormSubmissionMinOrderByAggregateInput = {
    id?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    formType?: SortOrder
    companyName?: SortOrder
    contactName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    website?: SortOrder
    frequency?: SortOrder
    additionalComments?: SortOrder
    specifications?: SortOrder
  }

  export type EnumFormTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FormType | EnumFormTypeFieldRefInput<$PrismaModel>
    in?: $Enums.FormType[] | ListEnumFormTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.FormType[] | ListEnumFormTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumFormTypeWithAggregatesFilter<$PrismaModel> | $Enums.FormType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFormTypeFilter<$PrismaModel>
    _max?: NestedEnumFormTypeFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type LeadCaptureCountOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    industry?: SortOrder
    newsletterConsent?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LeadCaptureMaxOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    industry?: SortOrder
    newsletterConsent?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type LeadCaptureMinOrderByAggregateInput = {
    id?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    industry?: SortOrder
    newsletterConsent?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EnumApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusFilter<$PrismaModel> | $Enums.ApplicationStatus
  }

  export type JobApplicationCountOrderByAggregateInput = {
    id?: SortOrder
    profileId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    position?: SortOrder
    addressStreet?: SortOrder
    addressCity?: SortOrder
    addressState?: SortOrder
    addressZip?: SortOrder
    education?: SortOrder
    workExperience?: SortOrder
    skills?: SortOrder
    coverLetter?: SortOrder
    resumeFilePath?: SortOrder
    driversLicenseFilePath?: SortOrder
    insuranceFilePath?: SortOrder
    vehicleRegFilePath?: SortOrder
    foodHandlerFilePath?: SortOrder
    hipaaFilePath?: SortOrder
    driverPhotoFilePath?: SortOrder
    carPhotoFilePath?: SortOrder
    equipmentPhotoFilePath?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type JobApplicationMaxOrderByAggregateInput = {
    id?: SortOrder
    profileId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    position?: SortOrder
    addressStreet?: SortOrder
    addressCity?: SortOrder
    addressState?: SortOrder
    addressZip?: SortOrder
    education?: SortOrder
    workExperience?: SortOrder
    skills?: SortOrder
    coverLetter?: SortOrder
    resumeFilePath?: SortOrder
    driversLicenseFilePath?: SortOrder
    insuranceFilePath?: SortOrder
    vehicleRegFilePath?: SortOrder
    foodHandlerFilePath?: SortOrder
    hipaaFilePath?: SortOrder
    driverPhotoFilePath?: SortOrder
    carPhotoFilePath?: SortOrder
    equipmentPhotoFilePath?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type JobApplicationMinOrderByAggregateInput = {
    id?: SortOrder
    profileId?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    position?: SortOrder
    addressStreet?: SortOrder
    addressCity?: SortOrder
    addressState?: SortOrder
    addressZip?: SortOrder
    education?: SortOrder
    workExperience?: SortOrder
    skills?: SortOrder
    coverLetter?: SortOrder
    resumeFilePath?: SortOrder
    driversLicenseFilePath?: SortOrder
    insuranceFilePath?: SortOrder
    vehicleRegFilePath?: SortOrder
    foodHandlerFilePath?: SortOrder
    hipaaFilePath?: SortOrder
    driverPhotoFilePath?: SortOrder
    carPhotoFilePath?: SortOrder
    equipmentPhotoFilePath?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    deletedAt?: SortOrder
  }

  export type EnumApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumApplicationStatusFilter<$PrismaModel>
  }

  export type AccountCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type AddressCreateNestedManyWithoutCreatorInput = {
    create?: XOR<AddressCreateWithoutCreatorInput, AddressUncheckedCreateWithoutCreatorInput> | AddressCreateWithoutCreatorInput[] | AddressUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutCreatorInput | AddressCreateOrConnectWithoutCreatorInput[]
    createMany?: AddressCreateManyCreatorInputEnvelope
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
  }

  export type CateringRequestCreateNestedManyWithoutUserInput = {
    create?: XOR<CateringRequestCreateWithoutUserInput, CateringRequestUncheckedCreateWithoutUserInput> | CateringRequestCreateWithoutUserInput[] | CateringRequestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CateringRequestCreateOrConnectWithoutUserInput | CateringRequestCreateOrConnectWithoutUserInput[]
    createMany?: CateringRequestCreateManyUserInputEnvelope
    connect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
  }

  export type DispatchCreateNestedManyWithoutDriverInput = {
    create?: XOR<DispatchCreateWithoutDriverInput, DispatchUncheckedCreateWithoutDriverInput> | DispatchCreateWithoutDriverInput[] | DispatchUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutDriverInput | DispatchCreateOrConnectWithoutDriverInput[]
    createMany?: DispatchCreateManyDriverInputEnvelope
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
  }

  export type DispatchCreateNestedManyWithoutUserInput = {
    create?: XOR<DispatchCreateWithoutUserInput, DispatchUncheckedCreateWithoutUserInput> | DispatchCreateWithoutUserInput[] | DispatchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutUserInput | DispatchCreateOrConnectWithoutUserInput[]
    createMany?: DispatchCreateManyUserInputEnvelope
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
  }

  export type FileUploadCreateNestedManyWithoutUserInput = {
    create?: XOR<FileUploadCreateWithoutUserInput, FileUploadUncheckedCreateWithoutUserInput> | FileUploadCreateWithoutUserInput[] | FileUploadUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutUserInput | FileUploadCreateOrConnectWithoutUserInput[]
    createMany?: FileUploadCreateManyUserInputEnvelope
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
  }

  export type JobApplicationCreateNestedManyWithoutProfileInput = {
    create?: XOR<JobApplicationCreateWithoutProfileInput, JobApplicationUncheckedCreateWithoutProfileInput> | JobApplicationCreateWithoutProfileInput[] | JobApplicationUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: JobApplicationCreateOrConnectWithoutProfileInput | JobApplicationCreateOrConnectWithoutProfileInput[]
    createMany?: JobApplicationCreateManyProfileInputEnvelope
    connect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
  }

  export type OnDemandCreateNestedManyWithoutUserInput = {
    create?: XOR<OnDemandCreateWithoutUserInput, OnDemandUncheckedCreateWithoutUserInput> | OnDemandCreateWithoutUserInput[] | OnDemandUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OnDemandCreateOrConnectWithoutUserInput | OnDemandCreateOrConnectWithoutUserInput[]
    createMany?: OnDemandCreateManyUserInputEnvelope
    connect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
  }

  export type SessionCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type UserAddressCreateNestedManyWithoutUserInput = {
    create?: XOR<UserAddressCreateWithoutUserInput, UserAddressUncheckedCreateWithoutUserInput> | UserAddressCreateWithoutUserInput[] | UserAddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserAddressCreateOrConnectWithoutUserInput | UserAddressCreateOrConnectWithoutUserInput[]
    createMany?: UserAddressCreateManyUserInputEnvelope
    connect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
  }

  export type AccountUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
  }

  export type AddressUncheckedCreateNestedManyWithoutCreatorInput = {
    create?: XOR<AddressCreateWithoutCreatorInput, AddressUncheckedCreateWithoutCreatorInput> | AddressCreateWithoutCreatorInput[] | AddressUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutCreatorInput | AddressCreateOrConnectWithoutCreatorInput[]
    createMany?: AddressCreateManyCreatorInputEnvelope
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
  }

  export type CateringRequestUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<CateringRequestCreateWithoutUserInput, CateringRequestUncheckedCreateWithoutUserInput> | CateringRequestCreateWithoutUserInput[] | CateringRequestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CateringRequestCreateOrConnectWithoutUserInput | CateringRequestCreateOrConnectWithoutUserInput[]
    createMany?: CateringRequestCreateManyUserInputEnvelope
    connect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
  }

  export type DispatchUncheckedCreateNestedManyWithoutDriverInput = {
    create?: XOR<DispatchCreateWithoutDriverInput, DispatchUncheckedCreateWithoutDriverInput> | DispatchCreateWithoutDriverInput[] | DispatchUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutDriverInput | DispatchCreateOrConnectWithoutDriverInput[]
    createMany?: DispatchCreateManyDriverInputEnvelope
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
  }

  export type DispatchUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<DispatchCreateWithoutUserInput, DispatchUncheckedCreateWithoutUserInput> | DispatchCreateWithoutUserInput[] | DispatchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutUserInput | DispatchCreateOrConnectWithoutUserInput[]
    createMany?: DispatchCreateManyUserInputEnvelope
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
  }

  export type FileUploadUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<FileUploadCreateWithoutUserInput, FileUploadUncheckedCreateWithoutUserInput> | FileUploadCreateWithoutUserInput[] | FileUploadUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutUserInput | FileUploadCreateOrConnectWithoutUserInput[]
    createMany?: FileUploadCreateManyUserInputEnvelope
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
  }

  export type JobApplicationUncheckedCreateNestedManyWithoutProfileInput = {
    create?: XOR<JobApplicationCreateWithoutProfileInput, JobApplicationUncheckedCreateWithoutProfileInput> | JobApplicationCreateWithoutProfileInput[] | JobApplicationUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: JobApplicationCreateOrConnectWithoutProfileInput | JobApplicationCreateOrConnectWithoutProfileInput[]
    createMany?: JobApplicationCreateManyProfileInputEnvelope
    connect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
  }

  export type OnDemandUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<OnDemandCreateWithoutUserInput, OnDemandUncheckedCreateWithoutUserInput> | OnDemandCreateWithoutUserInput[] | OnDemandUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OnDemandCreateOrConnectWithoutUserInput | OnDemandCreateOrConnectWithoutUserInput[]
    createMany?: OnDemandCreateManyUserInputEnvelope
    connect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
  }

  export type SessionUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
  }

  export type UserAddressUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserAddressCreateWithoutUserInput, UserAddressUncheckedCreateWithoutUserInput> | UserAddressCreateWithoutUserInput[] | UserAddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserAddressCreateOrConnectWithoutUserInput | UserAddressCreateOrConnectWithoutUserInput[]
    createMany?: UserAddressCreateManyUserInputEnvelope
    connect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EnumUserTypeFieldUpdateOperationsInput = {
    set?: $Enums.UserType
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EnumUserStatusFieldUpdateOperationsInput = {
    set?: $Enums.UserStatus
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type AccountUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type AddressUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<AddressCreateWithoutCreatorInput, AddressUncheckedCreateWithoutCreatorInput> | AddressCreateWithoutCreatorInput[] | AddressUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutCreatorInput | AddressCreateOrConnectWithoutCreatorInput[]
    upsert?: AddressUpsertWithWhereUniqueWithoutCreatorInput | AddressUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: AddressCreateManyCreatorInputEnvelope
    set?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    disconnect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    delete?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    update?: AddressUpdateWithWhereUniqueWithoutCreatorInput | AddressUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: AddressUpdateManyWithWhereWithoutCreatorInput | AddressUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: AddressScalarWhereInput | AddressScalarWhereInput[]
  }

  export type CateringRequestUpdateManyWithoutUserNestedInput = {
    create?: XOR<CateringRequestCreateWithoutUserInput, CateringRequestUncheckedCreateWithoutUserInput> | CateringRequestCreateWithoutUserInput[] | CateringRequestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CateringRequestCreateOrConnectWithoutUserInput | CateringRequestCreateOrConnectWithoutUserInput[]
    upsert?: CateringRequestUpsertWithWhereUniqueWithoutUserInput | CateringRequestUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CateringRequestCreateManyUserInputEnvelope
    set?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    disconnect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    delete?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    connect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    update?: CateringRequestUpdateWithWhereUniqueWithoutUserInput | CateringRequestUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CateringRequestUpdateManyWithWhereWithoutUserInput | CateringRequestUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CateringRequestScalarWhereInput | CateringRequestScalarWhereInput[]
  }

  export type DispatchUpdateManyWithoutDriverNestedInput = {
    create?: XOR<DispatchCreateWithoutDriverInput, DispatchUncheckedCreateWithoutDriverInput> | DispatchCreateWithoutDriverInput[] | DispatchUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutDriverInput | DispatchCreateOrConnectWithoutDriverInput[]
    upsert?: DispatchUpsertWithWhereUniqueWithoutDriverInput | DispatchUpsertWithWhereUniqueWithoutDriverInput[]
    createMany?: DispatchCreateManyDriverInputEnvelope
    set?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    disconnect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    delete?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    update?: DispatchUpdateWithWhereUniqueWithoutDriverInput | DispatchUpdateWithWhereUniqueWithoutDriverInput[]
    updateMany?: DispatchUpdateManyWithWhereWithoutDriverInput | DispatchUpdateManyWithWhereWithoutDriverInput[]
    deleteMany?: DispatchScalarWhereInput | DispatchScalarWhereInput[]
  }

  export type DispatchUpdateManyWithoutUserNestedInput = {
    create?: XOR<DispatchCreateWithoutUserInput, DispatchUncheckedCreateWithoutUserInput> | DispatchCreateWithoutUserInput[] | DispatchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutUserInput | DispatchCreateOrConnectWithoutUserInput[]
    upsert?: DispatchUpsertWithWhereUniqueWithoutUserInput | DispatchUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DispatchCreateManyUserInputEnvelope
    set?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    disconnect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    delete?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    update?: DispatchUpdateWithWhereUniqueWithoutUserInput | DispatchUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DispatchUpdateManyWithWhereWithoutUserInput | DispatchUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DispatchScalarWhereInput | DispatchScalarWhereInput[]
  }

  export type FileUploadUpdateManyWithoutUserNestedInput = {
    create?: XOR<FileUploadCreateWithoutUserInput, FileUploadUncheckedCreateWithoutUserInput> | FileUploadCreateWithoutUserInput[] | FileUploadUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutUserInput | FileUploadCreateOrConnectWithoutUserInput[]
    upsert?: FileUploadUpsertWithWhereUniqueWithoutUserInput | FileUploadUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FileUploadCreateManyUserInputEnvelope
    set?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    disconnect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    delete?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    update?: FileUploadUpdateWithWhereUniqueWithoutUserInput | FileUploadUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FileUploadUpdateManyWithWhereWithoutUserInput | FileUploadUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FileUploadScalarWhereInput | FileUploadScalarWhereInput[]
  }

  export type JobApplicationUpdateManyWithoutProfileNestedInput = {
    create?: XOR<JobApplicationCreateWithoutProfileInput, JobApplicationUncheckedCreateWithoutProfileInput> | JobApplicationCreateWithoutProfileInput[] | JobApplicationUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: JobApplicationCreateOrConnectWithoutProfileInput | JobApplicationCreateOrConnectWithoutProfileInput[]
    upsert?: JobApplicationUpsertWithWhereUniqueWithoutProfileInput | JobApplicationUpsertWithWhereUniqueWithoutProfileInput[]
    createMany?: JobApplicationCreateManyProfileInputEnvelope
    set?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    disconnect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    delete?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    connect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    update?: JobApplicationUpdateWithWhereUniqueWithoutProfileInput | JobApplicationUpdateWithWhereUniqueWithoutProfileInput[]
    updateMany?: JobApplicationUpdateManyWithWhereWithoutProfileInput | JobApplicationUpdateManyWithWhereWithoutProfileInput[]
    deleteMany?: JobApplicationScalarWhereInput | JobApplicationScalarWhereInput[]
  }

  export type OnDemandUpdateManyWithoutUserNestedInput = {
    create?: XOR<OnDemandCreateWithoutUserInput, OnDemandUncheckedCreateWithoutUserInput> | OnDemandCreateWithoutUserInput[] | OnDemandUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OnDemandCreateOrConnectWithoutUserInput | OnDemandCreateOrConnectWithoutUserInput[]
    upsert?: OnDemandUpsertWithWhereUniqueWithoutUserInput | OnDemandUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OnDemandCreateManyUserInputEnvelope
    set?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    disconnect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    delete?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    connect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    update?: OnDemandUpdateWithWhereUniqueWithoutUserInput | OnDemandUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OnDemandUpdateManyWithWhereWithoutUserInput | OnDemandUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OnDemandScalarWhereInput | OnDemandScalarWhereInput[]
  }

  export type SessionUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type UserAddressUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserAddressCreateWithoutUserInput, UserAddressUncheckedCreateWithoutUserInput> | UserAddressCreateWithoutUserInput[] | UserAddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserAddressCreateOrConnectWithoutUserInput | UserAddressCreateOrConnectWithoutUserInput[]
    upsert?: UserAddressUpsertWithWhereUniqueWithoutUserInput | UserAddressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserAddressCreateManyUserInputEnvelope
    set?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    disconnect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    delete?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    connect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    update?: UserAddressUpdateWithWhereUniqueWithoutUserInput | UserAddressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserAddressUpdateManyWithWhereWithoutUserInput | UserAddressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserAddressScalarWhereInput | UserAddressScalarWhereInput[]
  }

  export type AccountUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput> | AccountCreateWithoutUserInput[] | AccountUncheckedCreateWithoutUserInput[]
    connectOrCreate?: AccountCreateOrConnectWithoutUserInput | AccountCreateOrConnectWithoutUserInput[]
    upsert?: AccountUpsertWithWhereUniqueWithoutUserInput | AccountUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: AccountCreateManyUserInputEnvelope
    set?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    disconnect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    delete?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    connect?: AccountWhereUniqueInput | AccountWhereUniqueInput[]
    update?: AccountUpdateWithWhereUniqueWithoutUserInput | AccountUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: AccountUpdateManyWithWhereWithoutUserInput | AccountUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: AccountScalarWhereInput | AccountScalarWhereInput[]
  }

  export type AddressUncheckedUpdateManyWithoutCreatorNestedInput = {
    create?: XOR<AddressCreateWithoutCreatorInput, AddressUncheckedCreateWithoutCreatorInput> | AddressCreateWithoutCreatorInput[] | AddressUncheckedCreateWithoutCreatorInput[]
    connectOrCreate?: AddressCreateOrConnectWithoutCreatorInput | AddressCreateOrConnectWithoutCreatorInput[]
    upsert?: AddressUpsertWithWhereUniqueWithoutCreatorInput | AddressUpsertWithWhereUniqueWithoutCreatorInput[]
    createMany?: AddressCreateManyCreatorInputEnvelope
    set?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    disconnect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    delete?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    connect?: AddressWhereUniqueInput | AddressWhereUniqueInput[]
    update?: AddressUpdateWithWhereUniqueWithoutCreatorInput | AddressUpdateWithWhereUniqueWithoutCreatorInput[]
    updateMany?: AddressUpdateManyWithWhereWithoutCreatorInput | AddressUpdateManyWithWhereWithoutCreatorInput[]
    deleteMany?: AddressScalarWhereInput | AddressScalarWhereInput[]
  }

  export type CateringRequestUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<CateringRequestCreateWithoutUserInput, CateringRequestUncheckedCreateWithoutUserInput> | CateringRequestCreateWithoutUserInput[] | CateringRequestUncheckedCreateWithoutUserInput[]
    connectOrCreate?: CateringRequestCreateOrConnectWithoutUserInput | CateringRequestCreateOrConnectWithoutUserInput[]
    upsert?: CateringRequestUpsertWithWhereUniqueWithoutUserInput | CateringRequestUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: CateringRequestCreateManyUserInputEnvelope
    set?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    disconnect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    delete?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    connect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    update?: CateringRequestUpdateWithWhereUniqueWithoutUserInput | CateringRequestUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: CateringRequestUpdateManyWithWhereWithoutUserInput | CateringRequestUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: CateringRequestScalarWhereInput | CateringRequestScalarWhereInput[]
  }

  export type DispatchUncheckedUpdateManyWithoutDriverNestedInput = {
    create?: XOR<DispatchCreateWithoutDriverInput, DispatchUncheckedCreateWithoutDriverInput> | DispatchCreateWithoutDriverInput[] | DispatchUncheckedCreateWithoutDriverInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutDriverInput | DispatchCreateOrConnectWithoutDriverInput[]
    upsert?: DispatchUpsertWithWhereUniqueWithoutDriverInput | DispatchUpsertWithWhereUniqueWithoutDriverInput[]
    createMany?: DispatchCreateManyDriverInputEnvelope
    set?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    disconnect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    delete?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    update?: DispatchUpdateWithWhereUniqueWithoutDriverInput | DispatchUpdateWithWhereUniqueWithoutDriverInput[]
    updateMany?: DispatchUpdateManyWithWhereWithoutDriverInput | DispatchUpdateManyWithWhereWithoutDriverInput[]
    deleteMany?: DispatchScalarWhereInput | DispatchScalarWhereInput[]
  }

  export type DispatchUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<DispatchCreateWithoutUserInput, DispatchUncheckedCreateWithoutUserInput> | DispatchCreateWithoutUserInput[] | DispatchUncheckedCreateWithoutUserInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutUserInput | DispatchCreateOrConnectWithoutUserInput[]
    upsert?: DispatchUpsertWithWhereUniqueWithoutUserInput | DispatchUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: DispatchCreateManyUserInputEnvelope
    set?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    disconnect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    delete?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    update?: DispatchUpdateWithWhereUniqueWithoutUserInput | DispatchUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: DispatchUpdateManyWithWhereWithoutUserInput | DispatchUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: DispatchScalarWhereInput | DispatchScalarWhereInput[]
  }

  export type FileUploadUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<FileUploadCreateWithoutUserInput, FileUploadUncheckedCreateWithoutUserInput> | FileUploadCreateWithoutUserInput[] | FileUploadUncheckedCreateWithoutUserInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutUserInput | FileUploadCreateOrConnectWithoutUserInput[]
    upsert?: FileUploadUpsertWithWhereUniqueWithoutUserInput | FileUploadUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: FileUploadCreateManyUserInputEnvelope
    set?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    disconnect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    delete?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    update?: FileUploadUpdateWithWhereUniqueWithoutUserInput | FileUploadUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: FileUploadUpdateManyWithWhereWithoutUserInput | FileUploadUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: FileUploadScalarWhereInput | FileUploadScalarWhereInput[]
  }

  export type JobApplicationUncheckedUpdateManyWithoutProfileNestedInput = {
    create?: XOR<JobApplicationCreateWithoutProfileInput, JobApplicationUncheckedCreateWithoutProfileInput> | JobApplicationCreateWithoutProfileInput[] | JobApplicationUncheckedCreateWithoutProfileInput[]
    connectOrCreate?: JobApplicationCreateOrConnectWithoutProfileInput | JobApplicationCreateOrConnectWithoutProfileInput[]
    upsert?: JobApplicationUpsertWithWhereUniqueWithoutProfileInput | JobApplicationUpsertWithWhereUniqueWithoutProfileInput[]
    createMany?: JobApplicationCreateManyProfileInputEnvelope
    set?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    disconnect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    delete?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    connect?: JobApplicationWhereUniqueInput | JobApplicationWhereUniqueInput[]
    update?: JobApplicationUpdateWithWhereUniqueWithoutProfileInput | JobApplicationUpdateWithWhereUniqueWithoutProfileInput[]
    updateMany?: JobApplicationUpdateManyWithWhereWithoutProfileInput | JobApplicationUpdateManyWithWhereWithoutProfileInput[]
    deleteMany?: JobApplicationScalarWhereInput | JobApplicationScalarWhereInput[]
  }

  export type OnDemandUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<OnDemandCreateWithoutUserInput, OnDemandUncheckedCreateWithoutUserInput> | OnDemandCreateWithoutUserInput[] | OnDemandUncheckedCreateWithoutUserInput[]
    connectOrCreate?: OnDemandCreateOrConnectWithoutUserInput | OnDemandCreateOrConnectWithoutUserInput[]
    upsert?: OnDemandUpsertWithWhereUniqueWithoutUserInput | OnDemandUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: OnDemandCreateManyUserInputEnvelope
    set?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    disconnect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    delete?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    connect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    update?: OnDemandUpdateWithWhereUniqueWithoutUserInput | OnDemandUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: OnDemandUpdateManyWithWhereWithoutUserInput | OnDemandUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: OnDemandScalarWhereInput | OnDemandScalarWhereInput[]
  }

  export type SessionUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput> | SessionCreateWithoutUserInput[] | SessionUncheckedCreateWithoutUserInput[]
    connectOrCreate?: SessionCreateOrConnectWithoutUserInput | SessionCreateOrConnectWithoutUserInput[]
    upsert?: SessionUpsertWithWhereUniqueWithoutUserInput | SessionUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: SessionCreateManyUserInputEnvelope
    set?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    disconnect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    delete?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    connect?: SessionWhereUniqueInput | SessionWhereUniqueInput[]
    update?: SessionUpdateWithWhereUniqueWithoutUserInput | SessionUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: SessionUpdateManyWithWhereWithoutUserInput | SessionUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: SessionScalarWhereInput | SessionScalarWhereInput[]
  }

  export type UserAddressUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserAddressCreateWithoutUserInput, UserAddressUncheckedCreateWithoutUserInput> | UserAddressCreateWithoutUserInput[] | UserAddressUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserAddressCreateOrConnectWithoutUserInput | UserAddressCreateOrConnectWithoutUserInput[]
    upsert?: UserAddressUpsertWithWhereUniqueWithoutUserInput | UserAddressUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserAddressCreateManyUserInputEnvelope
    set?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    disconnect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    delete?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    connect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    update?: UserAddressUpdateWithWhereUniqueWithoutUserInput | UserAddressUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserAddressUpdateManyWithWhereWithoutUserInput | UserAddressUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserAddressScalarWhereInput | UserAddressScalarWhereInput[]
  }

  export type ProfileCreateNestedOneWithoutAccountsInput = {
    create?: XOR<ProfileCreateWithoutAccountsInput, ProfileUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutAccountsInput
    connect?: ProfileWhereUniqueInput
  }

  export type ProfileUpdateOneRequiredWithoutAccountsNestedInput = {
    create?: XOR<ProfileCreateWithoutAccountsInput, ProfileUncheckedCreateWithoutAccountsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutAccountsInput
    upsert?: ProfileUpsertWithoutAccountsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutAccountsInput, ProfileUpdateWithoutAccountsInput>, ProfileUncheckedUpdateWithoutAccountsInput>
  }

  export type ProfileCreateNestedOneWithoutSessionsInput = {
    create?: XOR<ProfileCreateWithoutSessionsInput, ProfileUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutSessionsInput
    connect?: ProfileWhereUniqueInput
  }

  export type ProfileUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<ProfileCreateWithoutSessionsInput, ProfileUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutSessionsInput
    upsert?: ProfileUpsertWithoutSessionsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutSessionsInput, ProfileUpdateWithoutSessionsInput>, ProfileUncheckedUpdateWithoutSessionsInput>
  }

  export type ProfileCreateNestedOneWithoutCreatedAddressesInput = {
    create?: XOR<ProfileCreateWithoutCreatedAddressesInput, ProfileUncheckedCreateWithoutCreatedAddressesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutCreatedAddressesInput
    connect?: ProfileWhereUniqueInput
  }

  export type CateringRequestCreateNestedManyWithoutDeliveryAddressInput = {
    create?: XOR<CateringRequestCreateWithoutDeliveryAddressInput, CateringRequestUncheckedCreateWithoutDeliveryAddressInput> | CateringRequestCreateWithoutDeliveryAddressInput[] | CateringRequestUncheckedCreateWithoutDeliveryAddressInput[]
    connectOrCreate?: CateringRequestCreateOrConnectWithoutDeliveryAddressInput | CateringRequestCreateOrConnectWithoutDeliveryAddressInput[]
    createMany?: CateringRequestCreateManyDeliveryAddressInputEnvelope
    connect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
  }

  export type CateringRequestCreateNestedManyWithoutPickupAddressInput = {
    create?: XOR<CateringRequestCreateWithoutPickupAddressInput, CateringRequestUncheckedCreateWithoutPickupAddressInput> | CateringRequestCreateWithoutPickupAddressInput[] | CateringRequestUncheckedCreateWithoutPickupAddressInput[]
    connectOrCreate?: CateringRequestCreateOrConnectWithoutPickupAddressInput | CateringRequestCreateOrConnectWithoutPickupAddressInput[]
    createMany?: CateringRequestCreateManyPickupAddressInputEnvelope
    connect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
  }

  export type OnDemandCreateNestedManyWithoutDeliveryAddressInput = {
    create?: XOR<OnDemandCreateWithoutDeliveryAddressInput, OnDemandUncheckedCreateWithoutDeliveryAddressInput> | OnDemandCreateWithoutDeliveryAddressInput[] | OnDemandUncheckedCreateWithoutDeliveryAddressInput[]
    connectOrCreate?: OnDemandCreateOrConnectWithoutDeliveryAddressInput | OnDemandCreateOrConnectWithoutDeliveryAddressInput[]
    createMany?: OnDemandCreateManyDeliveryAddressInputEnvelope
    connect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
  }

  export type OnDemandCreateNestedManyWithoutPickupAddressInput = {
    create?: XOR<OnDemandCreateWithoutPickupAddressInput, OnDemandUncheckedCreateWithoutPickupAddressInput> | OnDemandCreateWithoutPickupAddressInput[] | OnDemandUncheckedCreateWithoutPickupAddressInput[]
    connectOrCreate?: OnDemandCreateOrConnectWithoutPickupAddressInput | OnDemandCreateOrConnectWithoutPickupAddressInput[]
    createMany?: OnDemandCreateManyPickupAddressInputEnvelope
    connect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
  }

  export type UserAddressCreateNestedManyWithoutAddressInput = {
    create?: XOR<UserAddressCreateWithoutAddressInput, UserAddressUncheckedCreateWithoutAddressInput> | UserAddressCreateWithoutAddressInput[] | UserAddressUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: UserAddressCreateOrConnectWithoutAddressInput | UserAddressCreateOrConnectWithoutAddressInput[]
    createMany?: UserAddressCreateManyAddressInputEnvelope
    connect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
  }

  export type CateringRequestUncheckedCreateNestedManyWithoutDeliveryAddressInput = {
    create?: XOR<CateringRequestCreateWithoutDeliveryAddressInput, CateringRequestUncheckedCreateWithoutDeliveryAddressInput> | CateringRequestCreateWithoutDeliveryAddressInput[] | CateringRequestUncheckedCreateWithoutDeliveryAddressInput[]
    connectOrCreate?: CateringRequestCreateOrConnectWithoutDeliveryAddressInput | CateringRequestCreateOrConnectWithoutDeliveryAddressInput[]
    createMany?: CateringRequestCreateManyDeliveryAddressInputEnvelope
    connect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
  }

  export type CateringRequestUncheckedCreateNestedManyWithoutPickupAddressInput = {
    create?: XOR<CateringRequestCreateWithoutPickupAddressInput, CateringRequestUncheckedCreateWithoutPickupAddressInput> | CateringRequestCreateWithoutPickupAddressInput[] | CateringRequestUncheckedCreateWithoutPickupAddressInput[]
    connectOrCreate?: CateringRequestCreateOrConnectWithoutPickupAddressInput | CateringRequestCreateOrConnectWithoutPickupAddressInput[]
    createMany?: CateringRequestCreateManyPickupAddressInputEnvelope
    connect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
  }

  export type OnDemandUncheckedCreateNestedManyWithoutDeliveryAddressInput = {
    create?: XOR<OnDemandCreateWithoutDeliveryAddressInput, OnDemandUncheckedCreateWithoutDeliveryAddressInput> | OnDemandCreateWithoutDeliveryAddressInput[] | OnDemandUncheckedCreateWithoutDeliveryAddressInput[]
    connectOrCreate?: OnDemandCreateOrConnectWithoutDeliveryAddressInput | OnDemandCreateOrConnectWithoutDeliveryAddressInput[]
    createMany?: OnDemandCreateManyDeliveryAddressInputEnvelope
    connect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
  }

  export type OnDemandUncheckedCreateNestedManyWithoutPickupAddressInput = {
    create?: XOR<OnDemandCreateWithoutPickupAddressInput, OnDemandUncheckedCreateWithoutPickupAddressInput> | OnDemandCreateWithoutPickupAddressInput[] | OnDemandUncheckedCreateWithoutPickupAddressInput[]
    connectOrCreate?: OnDemandCreateOrConnectWithoutPickupAddressInput | OnDemandCreateOrConnectWithoutPickupAddressInput[]
    createMany?: OnDemandCreateManyPickupAddressInputEnvelope
    connect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
  }

  export type UserAddressUncheckedCreateNestedManyWithoutAddressInput = {
    create?: XOR<UserAddressCreateWithoutAddressInput, UserAddressUncheckedCreateWithoutAddressInput> | UserAddressCreateWithoutAddressInput[] | UserAddressUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: UserAddressCreateOrConnectWithoutAddressInput | UserAddressCreateOrConnectWithoutAddressInput[]
    createMany?: UserAddressCreateManyAddressInputEnvelope
    connect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type ProfileUpdateOneWithoutCreatedAddressesNestedInput = {
    create?: XOR<ProfileCreateWithoutCreatedAddressesInput, ProfileUncheckedCreateWithoutCreatedAddressesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutCreatedAddressesInput
    upsert?: ProfileUpsertWithoutCreatedAddressesInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutCreatedAddressesInput, ProfileUpdateWithoutCreatedAddressesInput>, ProfileUncheckedUpdateWithoutCreatedAddressesInput>
  }

  export type CateringRequestUpdateManyWithoutDeliveryAddressNestedInput = {
    create?: XOR<CateringRequestCreateWithoutDeliveryAddressInput, CateringRequestUncheckedCreateWithoutDeliveryAddressInput> | CateringRequestCreateWithoutDeliveryAddressInput[] | CateringRequestUncheckedCreateWithoutDeliveryAddressInput[]
    connectOrCreate?: CateringRequestCreateOrConnectWithoutDeliveryAddressInput | CateringRequestCreateOrConnectWithoutDeliveryAddressInput[]
    upsert?: CateringRequestUpsertWithWhereUniqueWithoutDeliveryAddressInput | CateringRequestUpsertWithWhereUniqueWithoutDeliveryAddressInput[]
    createMany?: CateringRequestCreateManyDeliveryAddressInputEnvelope
    set?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    disconnect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    delete?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    connect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    update?: CateringRequestUpdateWithWhereUniqueWithoutDeliveryAddressInput | CateringRequestUpdateWithWhereUniqueWithoutDeliveryAddressInput[]
    updateMany?: CateringRequestUpdateManyWithWhereWithoutDeliveryAddressInput | CateringRequestUpdateManyWithWhereWithoutDeliveryAddressInput[]
    deleteMany?: CateringRequestScalarWhereInput | CateringRequestScalarWhereInput[]
  }

  export type CateringRequestUpdateManyWithoutPickupAddressNestedInput = {
    create?: XOR<CateringRequestCreateWithoutPickupAddressInput, CateringRequestUncheckedCreateWithoutPickupAddressInput> | CateringRequestCreateWithoutPickupAddressInput[] | CateringRequestUncheckedCreateWithoutPickupAddressInput[]
    connectOrCreate?: CateringRequestCreateOrConnectWithoutPickupAddressInput | CateringRequestCreateOrConnectWithoutPickupAddressInput[]
    upsert?: CateringRequestUpsertWithWhereUniqueWithoutPickupAddressInput | CateringRequestUpsertWithWhereUniqueWithoutPickupAddressInput[]
    createMany?: CateringRequestCreateManyPickupAddressInputEnvelope
    set?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    disconnect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    delete?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    connect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    update?: CateringRequestUpdateWithWhereUniqueWithoutPickupAddressInput | CateringRequestUpdateWithWhereUniqueWithoutPickupAddressInput[]
    updateMany?: CateringRequestUpdateManyWithWhereWithoutPickupAddressInput | CateringRequestUpdateManyWithWhereWithoutPickupAddressInput[]
    deleteMany?: CateringRequestScalarWhereInput | CateringRequestScalarWhereInput[]
  }

  export type OnDemandUpdateManyWithoutDeliveryAddressNestedInput = {
    create?: XOR<OnDemandCreateWithoutDeliveryAddressInput, OnDemandUncheckedCreateWithoutDeliveryAddressInput> | OnDemandCreateWithoutDeliveryAddressInput[] | OnDemandUncheckedCreateWithoutDeliveryAddressInput[]
    connectOrCreate?: OnDemandCreateOrConnectWithoutDeliveryAddressInput | OnDemandCreateOrConnectWithoutDeliveryAddressInput[]
    upsert?: OnDemandUpsertWithWhereUniqueWithoutDeliveryAddressInput | OnDemandUpsertWithWhereUniqueWithoutDeliveryAddressInput[]
    createMany?: OnDemandCreateManyDeliveryAddressInputEnvelope
    set?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    disconnect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    delete?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    connect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    update?: OnDemandUpdateWithWhereUniqueWithoutDeliveryAddressInput | OnDemandUpdateWithWhereUniqueWithoutDeliveryAddressInput[]
    updateMany?: OnDemandUpdateManyWithWhereWithoutDeliveryAddressInput | OnDemandUpdateManyWithWhereWithoutDeliveryAddressInput[]
    deleteMany?: OnDemandScalarWhereInput | OnDemandScalarWhereInput[]
  }

  export type OnDemandUpdateManyWithoutPickupAddressNestedInput = {
    create?: XOR<OnDemandCreateWithoutPickupAddressInput, OnDemandUncheckedCreateWithoutPickupAddressInput> | OnDemandCreateWithoutPickupAddressInput[] | OnDemandUncheckedCreateWithoutPickupAddressInput[]
    connectOrCreate?: OnDemandCreateOrConnectWithoutPickupAddressInput | OnDemandCreateOrConnectWithoutPickupAddressInput[]
    upsert?: OnDemandUpsertWithWhereUniqueWithoutPickupAddressInput | OnDemandUpsertWithWhereUniqueWithoutPickupAddressInput[]
    createMany?: OnDemandCreateManyPickupAddressInputEnvelope
    set?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    disconnect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    delete?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    connect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    update?: OnDemandUpdateWithWhereUniqueWithoutPickupAddressInput | OnDemandUpdateWithWhereUniqueWithoutPickupAddressInput[]
    updateMany?: OnDemandUpdateManyWithWhereWithoutPickupAddressInput | OnDemandUpdateManyWithWhereWithoutPickupAddressInput[]
    deleteMany?: OnDemandScalarWhereInput | OnDemandScalarWhereInput[]
  }

  export type UserAddressUpdateManyWithoutAddressNestedInput = {
    create?: XOR<UserAddressCreateWithoutAddressInput, UserAddressUncheckedCreateWithoutAddressInput> | UserAddressCreateWithoutAddressInput[] | UserAddressUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: UserAddressCreateOrConnectWithoutAddressInput | UserAddressCreateOrConnectWithoutAddressInput[]
    upsert?: UserAddressUpsertWithWhereUniqueWithoutAddressInput | UserAddressUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: UserAddressCreateManyAddressInputEnvelope
    set?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    disconnect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    delete?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    connect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    update?: UserAddressUpdateWithWhereUniqueWithoutAddressInput | UserAddressUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: UserAddressUpdateManyWithWhereWithoutAddressInput | UserAddressUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: UserAddressScalarWhereInput | UserAddressScalarWhereInput[]
  }

  export type CateringRequestUncheckedUpdateManyWithoutDeliveryAddressNestedInput = {
    create?: XOR<CateringRequestCreateWithoutDeliveryAddressInput, CateringRequestUncheckedCreateWithoutDeliveryAddressInput> | CateringRequestCreateWithoutDeliveryAddressInput[] | CateringRequestUncheckedCreateWithoutDeliveryAddressInput[]
    connectOrCreate?: CateringRequestCreateOrConnectWithoutDeliveryAddressInput | CateringRequestCreateOrConnectWithoutDeliveryAddressInput[]
    upsert?: CateringRequestUpsertWithWhereUniqueWithoutDeliveryAddressInput | CateringRequestUpsertWithWhereUniqueWithoutDeliveryAddressInput[]
    createMany?: CateringRequestCreateManyDeliveryAddressInputEnvelope
    set?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    disconnect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    delete?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    connect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    update?: CateringRequestUpdateWithWhereUniqueWithoutDeliveryAddressInput | CateringRequestUpdateWithWhereUniqueWithoutDeliveryAddressInput[]
    updateMany?: CateringRequestUpdateManyWithWhereWithoutDeliveryAddressInput | CateringRequestUpdateManyWithWhereWithoutDeliveryAddressInput[]
    deleteMany?: CateringRequestScalarWhereInput | CateringRequestScalarWhereInput[]
  }

  export type CateringRequestUncheckedUpdateManyWithoutPickupAddressNestedInput = {
    create?: XOR<CateringRequestCreateWithoutPickupAddressInput, CateringRequestUncheckedCreateWithoutPickupAddressInput> | CateringRequestCreateWithoutPickupAddressInput[] | CateringRequestUncheckedCreateWithoutPickupAddressInput[]
    connectOrCreate?: CateringRequestCreateOrConnectWithoutPickupAddressInput | CateringRequestCreateOrConnectWithoutPickupAddressInput[]
    upsert?: CateringRequestUpsertWithWhereUniqueWithoutPickupAddressInput | CateringRequestUpsertWithWhereUniqueWithoutPickupAddressInput[]
    createMany?: CateringRequestCreateManyPickupAddressInputEnvelope
    set?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    disconnect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    delete?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    connect?: CateringRequestWhereUniqueInput | CateringRequestWhereUniqueInput[]
    update?: CateringRequestUpdateWithWhereUniqueWithoutPickupAddressInput | CateringRequestUpdateWithWhereUniqueWithoutPickupAddressInput[]
    updateMany?: CateringRequestUpdateManyWithWhereWithoutPickupAddressInput | CateringRequestUpdateManyWithWhereWithoutPickupAddressInput[]
    deleteMany?: CateringRequestScalarWhereInput | CateringRequestScalarWhereInput[]
  }

  export type OnDemandUncheckedUpdateManyWithoutDeliveryAddressNestedInput = {
    create?: XOR<OnDemandCreateWithoutDeliveryAddressInput, OnDemandUncheckedCreateWithoutDeliveryAddressInput> | OnDemandCreateWithoutDeliveryAddressInput[] | OnDemandUncheckedCreateWithoutDeliveryAddressInput[]
    connectOrCreate?: OnDemandCreateOrConnectWithoutDeliveryAddressInput | OnDemandCreateOrConnectWithoutDeliveryAddressInput[]
    upsert?: OnDemandUpsertWithWhereUniqueWithoutDeliveryAddressInput | OnDemandUpsertWithWhereUniqueWithoutDeliveryAddressInput[]
    createMany?: OnDemandCreateManyDeliveryAddressInputEnvelope
    set?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    disconnect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    delete?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    connect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    update?: OnDemandUpdateWithWhereUniqueWithoutDeliveryAddressInput | OnDemandUpdateWithWhereUniqueWithoutDeliveryAddressInput[]
    updateMany?: OnDemandUpdateManyWithWhereWithoutDeliveryAddressInput | OnDemandUpdateManyWithWhereWithoutDeliveryAddressInput[]
    deleteMany?: OnDemandScalarWhereInput | OnDemandScalarWhereInput[]
  }

  export type OnDemandUncheckedUpdateManyWithoutPickupAddressNestedInput = {
    create?: XOR<OnDemandCreateWithoutPickupAddressInput, OnDemandUncheckedCreateWithoutPickupAddressInput> | OnDemandCreateWithoutPickupAddressInput[] | OnDemandUncheckedCreateWithoutPickupAddressInput[]
    connectOrCreate?: OnDemandCreateOrConnectWithoutPickupAddressInput | OnDemandCreateOrConnectWithoutPickupAddressInput[]
    upsert?: OnDemandUpsertWithWhereUniqueWithoutPickupAddressInput | OnDemandUpsertWithWhereUniqueWithoutPickupAddressInput[]
    createMany?: OnDemandCreateManyPickupAddressInputEnvelope
    set?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    disconnect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    delete?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    connect?: OnDemandWhereUniqueInput | OnDemandWhereUniqueInput[]
    update?: OnDemandUpdateWithWhereUniqueWithoutPickupAddressInput | OnDemandUpdateWithWhereUniqueWithoutPickupAddressInput[]
    updateMany?: OnDemandUpdateManyWithWhereWithoutPickupAddressInput | OnDemandUpdateManyWithWhereWithoutPickupAddressInput[]
    deleteMany?: OnDemandScalarWhereInput | OnDemandScalarWhereInput[]
  }

  export type UserAddressUncheckedUpdateManyWithoutAddressNestedInput = {
    create?: XOR<UserAddressCreateWithoutAddressInput, UserAddressUncheckedCreateWithoutAddressInput> | UserAddressCreateWithoutAddressInput[] | UserAddressUncheckedCreateWithoutAddressInput[]
    connectOrCreate?: UserAddressCreateOrConnectWithoutAddressInput | UserAddressCreateOrConnectWithoutAddressInput[]
    upsert?: UserAddressUpsertWithWhereUniqueWithoutAddressInput | UserAddressUpsertWithWhereUniqueWithoutAddressInput[]
    createMany?: UserAddressCreateManyAddressInputEnvelope
    set?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    disconnect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    delete?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    connect?: UserAddressWhereUniqueInput | UserAddressWhereUniqueInput[]
    update?: UserAddressUpdateWithWhereUniqueWithoutAddressInput | UserAddressUpdateWithWhereUniqueWithoutAddressInput[]
    updateMany?: UserAddressUpdateManyWithWhereWithoutAddressInput | UserAddressUpdateManyWithWhereWithoutAddressInput[]
    deleteMany?: UserAddressScalarWhereInput | UserAddressScalarWhereInput[]
  }

  export type AddressCreateNestedOneWithoutCateringDeliveryRequestsInput = {
    create?: XOR<AddressCreateWithoutCateringDeliveryRequestsInput, AddressUncheckedCreateWithoutCateringDeliveryRequestsInput>
    connectOrCreate?: AddressCreateOrConnectWithoutCateringDeliveryRequestsInput
    connect?: AddressWhereUniqueInput
  }

  export type AddressCreateNestedOneWithoutCateringPickupRequestsInput = {
    create?: XOR<AddressCreateWithoutCateringPickupRequestsInput, AddressUncheckedCreateWithoutCateringPickupRequestsInput>
    connectOrCreate?: AddressCreateOrConnectWithoutCateringPickupRequestsInput
    connect?: AddressWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutCateringRequestsInput = {
    create?: XOR<ProfileCreateWithoutCateringRequestsInput, ProfileUncheckedCreateWithoutCateringRequestsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutCateringRequestsInput
    connect?: ProfileWhereUniqueInput
  }

  export type DispatchCreateNestedManyWithoutCateringRequestInput = {
    create?: XOR<DispatchCreateWithoutCateringRequestInput, DispatchUncheckedCreateWithoutCateringRequestInput> | DispatchCreateWithoutCateringRequestInput[] | DispatchUncheckedCreateWithoutCateringRequestInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutCateringRequestInput | DispatchCreateOrConnectWithoutCateringRequestInput[]
    createMany?: DispatchCreateManyCateringRequestInputEnvelope
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
  }

  export type FileUploadCreateNestedManyWithoutCateringRequestInput = {
    create?: XOR<FileUploadCreateWithoutCateringRequestInput, FileUploadUncheckedCreateWithoutCateringRequestInput> | FileUploadCreateWithoutCateringRequestInput[] | FileUploadUncheckedCreateWithoutCateringRequestInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutCateringRequestInput | FileUploadCreateOrConnectWithoutCateringRequestInput[]
    createMany?: FileUploadCreateManyCateringRequestInputEnvelope
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
  }

  export type DispatchUncheckedCreateNestedManyWithoutCateringRequestInput = {
    create?: XOR<DispatchCreateWithoutCateringRequestInput, DispatchUncheckedCreateWithoutCateringRequestInput> | DispatchCreateWithoutCateringRequestInput[] | DispatchUncheckedCreateWithoutCateringRequestInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutCateringRequestInput | DispatchCreateOrConnectWithoutCateringRequestInput[]
    createMany?: DispatchCreateManyCateringRequestInputEnvelope
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
  }

  export type FileUploadUncheckedCreateNestedManyWithoutCateringRequestInput = {
    create?: XOR<FileUploadCreateWithoutCateringRequestInput, FileUploadUncheckedCreateWithoutCateringRequestInput> | FileUploadCreateWithoutCateringRequestInput[] | FileUploadUncheckedCreateWithoutCateringRequestInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutCateringRequestInput | FileUploadCreateOrConnectWithoutCateringRequestInput[]
    createMany?: FileUploadCreateManyCateringRequestInputEnvelope
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
  }

  export type EnumCateringNeedHostFieldUpdateOperationsInput = {
    set?: $Enums.CateringNeedHost
  }

  export type EnumCateringStatusFieldUpdateOperationsInput = {
    set?: $Enums.CateringStatus
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type NullableEnumDriverStatusFieldUpdateOperationsInput = {
    set?: $Enums.DriverStatus | null
  }

  export type AddressUpdateOneRequiredWithoutCateringDeliveryRequestsNestedInput = {
    create?: XOR<AddressCreateWithoutCateringDeliveryRequestsInput, AddressUncheckedCreateWithoutCateringDeliveryRequestsInput>
    connectOrCreate?: AddressCreateOrConnectWithoutCateringDeliveryRequestsInput
    upsert?: AddressUpsertWithoutCateringDeliveryRequestsInput
    connect?: AddressWhereUniqueInput
    update?: XOR<XOR<AddressUpdateToOneWithWhereWithoutCateringDeliveryRequestsInput, AddressUpdateWithoutCateringDeliveryRequestsInput>, AddressUncheckedUpdateWithoutCateringDeliveryRequestsInput>
  }

  export type AddressUpdateOneRequiredWithoutCateringPickupRequestsNestedInput = {
    create?: XOR<AddressCreateWithoutCateringPickupRequestsInput, AddressUncheckedCreateWithoutCateringPickupRequestsInput>
    connectOrCreate?: AddressCreateOrConnectWithoutCateringPickupRequestsInput
    upsert?: AddressUpsertWithoutCateringPickupRequestsInput
    connect?: AddressWhereUniqueInput
    update?: XOR<XOR<AddressUpdateToOneWithWhereWithoutCateringPickupRequestsInput, AddressUpdateWithoutCateringPickupRequestsInput>, AddressUncheckedUpdateWithoutCateringPickupRequestsInput>
  }

  export type ProfileUpdateOneRequiredWithoutCateringRequestsNestedInput = {
    create?: XOR<ProfileCreateWithoutCateringRequestsInput, ProfileUncheckedCreateWithoutCateringRequestsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutCateringRequestsInput
    upsert?: ProfileUpsertWithoutCateringRequestsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutCateringRequestsInput, ProfileUpdateWithoutCateringRequestsInput>, ProfileUncheckedUpdateWithoutCateringRequestsInput>
  }

  export type DispatchUpdateManyWithoutCateringRequestNestedInput = {
    create?: XOR<DispatchCreateWithoutCateringRequestInput, DispatchUncheckedCreateWithoutCateringRequestInput> | DispatchCreateWithoutCateringRequestInput[] | DispatchUncheckedCreateWithoutCateringRequestInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutCateringRequestInput | DispatchCreateOrConnectWithoutCateringRequestInput[]
    upsert?: DispatchUpsertWithWhereUniqueWithoutCateringRequestInput | DispatchUpsertWithWhereUniqueWithoutCateringRequestInput[]
    createMany?: DispatchCreateManyCateringRequestInputEnvelope
    set?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    disconnect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    delete?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    update?: DispatchUpdateWithWhereUniqueWithoutCateringRequestInput | DispatchUpdateWithWhereUniqueWithoutCateringRequestInput[]
    updateMany?: DispatchUpdateManyWithWhereWithoutCateringRequestInput | DispatchUpdateManyWithWhereWithoutCateringRequestInput[]
    deleteMany?: DispatchScalarWhereInput | DispatchScalarWhereInput[]
  }

  export type FileUploadUpdateManyWithoutCateringRequestNestedInput = {
    create?: XOR<FileUploadCreateWithoutCateringRequestInput, FileUploadUncheckedCreateWithoutCateringRequestInput> | FileUploadCreateWithoutCateringRequestInput[] | FileUploadUncheckedCreateWithoutCateringRequestInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutCateringRequestInput | FileUploadCreateOrConnectWithoutCateringRequestInput[]
    upsert?: FileUploadUpsertWithWhereUniqueWithoutCateringRequestInput | FileUploadUpsertWithWhereUniqueWithoutCateringRequestInput[]
    createMany?: FileUploadCreateManyCateringRequestInputEnvelope
    set?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    disconnect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    delete?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    update?: FileUploadUpdateWithWhereUniqueWithoutCateringRequestInput | FileUploadUpdateWithWhereUniqueWithoutCateringRequestInput[]
    updateMany?: FileUploadUpdateManyWithWhereWithoutCateringRequestInput | FileUploadUpdateManyWithWhereWithoutCateringRequestInput[]
    deleteMany?: FileUploadScalarWhereInput | FileUploadScalarWhereInput[]
  }

  export type DispatchUncheckedUpdateManyWithoutCateringRequestNestedInput = {
    create?: XOR<DispatchCreateWithoutCateringRequestInput, DispatchUncheckedCreateWithoutCateringRequestInput> | DispatchCreateWithoutCateringRequestInput[] | DispatchUncheckedCreateWithoutCateringRequestInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutCateringRequestInput | DispatchCreateOrConnectWithoutCateringRequestInput[]
    upsert?: DispatchUpsertWithWhereUniqueWithoutCateringRequestInput | DispatchUpsertWithWhereUniqueWithoutCateringRequestInput[]
    createMany?: DispatchCreateManyCateringRequestInputEnvelope
    set?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    disconnect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    delete?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    update?: DispatchUpdateWithWhereUniqueWithoutCateringRequestInput | DispatchUpdateWithWhereUniqueWithoutCateringRequestInput[]
    updateMany?: DispatchUpdateManyWithWhereWithoutCateringRequestInput | DispatchUpdateManyWithWhereWithoutCateringRequestInput[]
    deleteMany?: DispatchScalarWhereInput | DispatchScalarWhereInput[]
  }

  export type FileUploadUncheckedUpdateManyWithoutCateringRequestNestedInput = {
    create?: XOR<FileUploadCreateWithoutCateringRequestInput, FileUploadUncheckedCreateWithoutCateringRequestInput> | FileUploadCreateWithoutCateringRequestInput[] | FileUploadUncheckedCreateWithoutCateringRequestInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutCateringRequestInput | FileUploadCreateOrConnectWithoutCateringRequestInput[]
    upsert?: FileUploadUpsertWithWhereUniqueWithoutCateringRequestInput | FileUploadUpsertWithWhereUniqueWithoutCateringRequestInput[]
    createMany?: FileUploadCreateManyCateringRequestInputEnvelope
    set?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    disconnect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    delete?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    update?: FileUploadUpdateWithWhereUniqueWithoutCateringRequestInput | FileUploadUpdateWithWhereUniqueWithoutCateringRequestInput[]
    updateMany?: FileUploadUpdateManyWithWhereWithoutCateringRequestInput | FileUploadUpdateManyWithWhereWithoutCateringRequestInput[]
    deleteMany?: FileUploadScalarWhereInput | FileUploadScalarWhereInput[]
  }

  export type CateringRequestCreateNestedOneWithoutDispatchesInput = {
    create?: XOR<CateringRequestCreateWithoutDispatchesInput, CateringRequestUncheckedCreateWithoutDispatchesInput>
    connectOrCreate?: CateringRequestCreateOrConnectWithoutDispatchesInput
    connect?: CateringRequestWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutDriverDispatchesInput = {
    create?: XOR<ProfileCreateWithoutDriverDispatchesInput, ProfileUncheckedCreateWithoutDriverDispatchesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutDriverDispatchesInput
    connect?: ProfileWhereUniqueInput
  }

  export type OnDemandCreateNestedOneWithoutDispatchesInput = {
    create?: XOR<OnDemandCreateWithoutDispatchesInput, OnDemandUncheckedCreateWithoutDispatchesInput>
    connectOrCreate?: OnDemandCreateOrConnectWithoutDispatchesInput
    connect?: OnDemandWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutUserDispatchesInput = {
    create?: XOR<ProfileCreateWithoutUserDispatchesInput, ProfileUncheckedCreateWithoutUserDispatchesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserDispatchesInput
    connect?: ProfileWhereUniqueInput
  }

  export type CateringRequestUpdateOneWithoutDispatchesNestedInput = {
    create?: XOR<CateringRequestCreateWithoutDispatchesInput, CateringRequestUncheckedCreateWithoutDispatchesInput>
    connectOrCreate?: CateringRequestCreateOrConnectWithoutDispatchesInput
    upsert?: CateringRequestUpsertWithoutDispatchesInput
    disconnect?: CateringRequestWhereInput | boolean
    delete?: CateringRequestWhereInput | boolean
    connect?: CateringRequestWhereUniqueInput
    update?: XOR<XOR<CateringRequestUpdateToOneWithWhereWithoutDispatchesInput, CateringRequestUpdateWithoutDispatchesInput>, CateringRequestUncheckedUpdateWithoutDispatchesInput>
  }

  export type ProfileUpdateOneWithoutDriverDispatchesNestedInput = {
    create?: XOR<ProfileCreateWithoutDriverDispatchesInput, ProfileUncheckedCreateWithoutDriverDispatchesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutDriverDispatchesInput
    upsert?: ProfileUpsertWithoutDriverDispatchesInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutDriverDispatchesInput, ProfileUpdateWithoutDriverDispatchesInput>, ProfileUncheckedUpdateWithoutDriverDispatchesInput>
  }

  export type OnDemandUpdateOneWithoutDispatchesNestedInput = {
    create?: XOR<OnDemandCreateWithoutDispatchesInput, OnDemandUncheckedCreateWithoutDispatchesInput>
    connectOrCreate?: OnDemandCreateOrConnectWithoutDispatchesInput
    upsert?: OnDemandUpsertWithoutDispatchesInput
    disconnect?: OnDemandWhereInput | boolean
    delete?: OnDemandWhereInput | boolean
    connect?: OnDemandWhereUniqueInput
    update?: XOR<XOR<OnDemandUpdateToOneWithWhereWithoutDispatchesInput, OnDemandUpdateWithoutDispatchesInput>, OnDemandUncheckedUpdateWithoutDispatchesInput>
  }

  export type ProfileUpdateOneWithoutUserDispatchesNestedInput = {
    create?: XOR<ProfileCreateWithoutUserDispatchesInput, ProfileUncheckedCreateWithoutUserDispatchesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserDispatchesInput
    upsert?: ProfileUpsertWithoutUserDispatchesInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutUserDispatchesInput, ProfileUpdateWithoutUserDispatchesInput>, ProfileUncheckedUpdateWithoutUserDispatchesInput>
  }

  export type CateringRequestCreateNestedOneWithoutFileUploadsInput = {
    create?: XOR<CateringRequestCreateWithoutFileUploadsInput, CateringRequestUncheckedCreateWithoutFileUploadsInput>
    connectOrCreate?: CateringRequestCreateOrConnectWithoutFileUploadsInput
    connect?: CateringRequestWhereUniqueInput
  }

  export type JobApplicationCreateNestedOneWithoutFileUploadsInput = {
    create?: XOR<JobApplicationCreateWithoutFileUploadsInput, JobApplicationUncheckedCreateWithoutFileUploadsInput>
    connectOrCreate?: JobApplicationCreateOrConnectWithoutFileUploadsInput
    connect?: JobApplicationWhereUniqueInput
  }

  export type OnDemandCreateNestedOneWithoutFileUploadsInput = {
    create?: XOR<OnDemandCreateWithoutFileUploadsInput, OnDemandUncheckedCreateWithoutFileUploadsInput>
    connectOrCreate?: OnDemandCreateOrConnectWithoutFileUploadsInput
    connect?: OnDemandWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutFileUploadsInput = {
    create?: XOR<ProfileCreateWithoutFileUploadsInput, ProfileUncheckedCreateWithoutFileUploadsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutFileUploadsInput
    connect?: ProfileWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CateringRequestUpdateOneWithoutFileUploadsNestedInput = {
    create?: XOR<CateringRequestCreateWithoutFileUploadsInput, CateringRequestUncheckedCreateWithoutFileUploadsInput>
    connectOrCreate?: CateringRequestCreateOrConnectWithoutFileUploadsInput
    upsert?: CateringRequestUpsertWithoutFileUploadsInput
    disconnect?: CateringRequestWhereInput | boolean
    delete?: CateringRequestWhereInput | boolean
    connect?: CateringRequestWhereUniqueInput
    update?: XOR<XOR<CateringRequestUpdateToOneWithWhereWithoutFileUploadsInput, CateringRequestUpdateWithoutFileUploadsInput>, CateringRequestUncheckedUpdateWithoutFileUploadsInput>
  }

  export type JobApplicationUpdateOneWithoutFileUploadsNestedInput = {
    create?: XOR<JobApplicationCreateWithoutFileUploadsInput, JobApplicationUncheckedCreateWithoutFileUploadsInput>
    connectOrCreate?: JobApplicationCreateOrConnectWithoutFileUploadsInput
    upsert?: JobApplicationUpsertWithoutFileUploadsInput
    disconnect?: JobApplicationWhereInput | boolean
    delete?: JobApplicationWhereInput | boolean
    connect?: JobApplicationWhereUniqueInput
    update?: XOR<XOR<JobApplicationUpdateToOneWithWhereWithoutFileUploadsInput, JobApplicationUpdateWithoutFileUploadsInput>, JobApplicationUncheckedUpdateWithoutFileUploadsInput>
  }

  export type OnDemandUpdateOneWithoutFileUploadsNestedInput = {
    create?: XOR<OnDemandCreateWithoutFileUploadsInput, OnDemandUncheckedCreateWithoutFileUploadsInput>
    connectOrCreate?: OnDemandCreateOrConnectWithoutFileUploadsInput
    upsert?: OnDemandUpsertWithoutFileUploadsInput
    disconnect?: OnDemandWhereInput | boolean
    delete?: OnDemandWhereInput | boolean
    connect?: OnDemandWhereUniqueInput
    update?: XOR<XOR<OnDemandUpdateToOneWithWhereWithoutFileUploadsInput, OnDemandUpdateWithoutFileUploadsInput>, OnDemandUncheckedUpdateWithoutFileUploadsInput>
  }

  export type ProfileUpdateOneWithoutFileUploadsNestedInput = {
    create?: XOR<ProfileCreateWithoutFileUploadsInput, ProfileUncheckedCreateWithoutFileUploadsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutFileUploadsInput
    upsert?: ProfileUpsertWithoutFileUploadsInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutFileUploadsInput, ProfileUpdateWithoutFileUploadsInput>, ProfileUncheckedUpdateWithoutFileUploadsInput>
  }

  export type DispatchCreateNestedManyWithoutOnDemandInput = {
    create?: XOR<DispatchCreateWithoutOnDemandInput, DispatchUncheckedCreateWithoutOnDemandInput> | DispatchCreateWithoutOnDemandInput[] | DispatchUncheckedCreateWithoutOnDemandInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutOnDemandInput | DispatchCreateOrConnectWithoutOnDemandInput[]
    createMany?: DispatchCreateManyOnDemandInputEnvelope
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
  }

  export type FileUploadCreateNestedManyWithoutOnDemandInput = {
    create?: XOR<FileUploadCreateWithoutOnDemandInput, FileUploadUncheckedCreateWithoutOnDemandInput> | FileUploadCreateWithoutOnDemandInput[] | FileUploadUncheckedCreateWithoutOnDemandInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutOnDemandInput | FileUploadCreateOrConnectWithoutOnDemandInput[]
    createMany?: FileUploadCreateManyOnDemandInputEnvelope
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
  }

  export type AddressCreateNestedOneWithoutOnDemandDeliveryRequestsInput = {
    create?: XOR<AddressCreateWithoutOnDemandDeliveryRequestsInput, AddressUncheckedCreateWithoutOnDemandDeliveryRequestsInput>
    connectOrCreate?: AddressCreateOrConnectWithoutOnDemandDeliveryRequestsInput
    connect?: AddressWhereUniqueInput
  }

  export type AddressCreateNestedOneWithoutOnDemandPickupRequestsInput = {
    create?: XOR<AddressCreateWithoutOnDemandPickupRequestsInput, AddressUncheckedCreateWithoutOnDemandPickupRequestsInput>
    connectOrCreate?: AddressCreateOrConnectWithoutOnDemandPickupRequestsInput
    connect?: AddressWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutOnDemandRequestsInput = {
    create?: XOR<ProfileCreateWithoutOnDemandRequestsInput, ProfileUncheckedCreateWithoutOnDemandRequestsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutOnDemandRequestsInput
    connect?: ProfileWhereUniqueInput
  }

  export type DispatchUncheckedCreateNestedManyWithoutOnDemandInput = {
    create?: XOR<DispatchCreateWithoutOnDemandInput, DispatchUncheckedCreateWithoutOnDemandInput> | DispatchCreateWithoutOnDemandInput[] | DispatchUncheckedCreateWithoutOnDemandInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutOnDemandInput | DispatchCreateOrConnectWithoutOnDemandInput[]
    createMany?: DispatchCreateManyOnDemandInputEnvelope
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
  }

  export type FileUploadUncheckedCreateNestedManyWithoutOnDemandInput = {
    create?: XOR<FileUploadCreateWithoutOnDemandInput, FileUploadUncheckedCreateWithoutOnDemandInput> | FileUploadCreateWithoutOnDemandInput[] | FileUploadUncheckedCreateWithoutOnDemandInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutOnDemandInput | FileUploadCreateOrConnectWithoutOnDemandInput[]
    createMany?: FileUploadCreateManyOnDemandInputEnvelope
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
  }

  export type EnumVehicleTypeFieldUpdateOperationsInput = {
    set?: $Enums.VehicleType
  }

  export type EnumOnDemandStatusFieldUpdateOperationsInput = {
    set?: $Enums.OnDemandStatus
  }

  export type DispatchUpdateManyWithoutOnDemandNestedInput = {
    create?: XOR<DispatchCreateWithoutOnDemandInput, DispatchUncheckedCreateWithoutOnDemandInput> | DispatchCreateWithoutOnDemandInput[] | DispatchUncheckedCreateWithoutOnDemandInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutOnDemandInput | DispatchCreateOrConnectWithoutOnDemandInput[]
    upsert?: DispatchUpsertWithWhereUniqueWithoutOnDemandInput | DispatchUpsertWithWhereUniqueWithoutOnDemandInput[]
    createMany?: DispatchCreateManyOnDemandInputEnvelope
    set?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    disconnect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    delete?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    update?: DispatchUpdateWithWhereUniqueWithoutOnDemandInput | DispatchUpdateWithWhereUniqueWithoutOnDemandInput[]
    updateMany?: DispatchUpdateManyWithWhereWithoutOnDemandInput | DispatchUpdateManyWithWhereWithoutOnDemandInput[]
    deleteMany?: DispatchScalarWhereInput | DispatchScalarWhereInput[]
  }

  export type FileUploadUpdateManyWithoutOnDemandNestedInput = {
    create?: XOR<FileUploadCreateWithoutOnDemandInput, FileUploadUncheckedCreateWithoutOnDemandInput> | FileUploadCreateWithoutOnDemandInput[] | FileUploadUncheckedCreateWithoutOnDemandInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutOnDemandInput | FileUploadCreateOrConnectWithoutOnDemandInput[]
    upsert?: FileUploadUpsertWithWhereUniqueWithoutOnDemandInput | FileUploadUpsertWithWhereUniqueWithoutOnDemandInput[]
    createMany?: FileUploadCreateManyOnDemandInputEnvelope
    set?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    disconnect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    delete?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    update?: FileUploadUpdateWithWhereUniqueWithoutOnDemandInput | FileUploadUpdateWithWhereUniqueWithoutOnDemandInput[]
    updateMany?: FileUploadUpdateManyWithWhereWithoutOnDemandInput | FileUploadUpdateManyWithWhereWithoutOnDemandInput[]
    deleteMany?: FileUploadScalarWhereInput | FileUploadScalarWhereInput[]
  }

  export type AddressUpdateOneRequiredWithoutOnDemandDeliveryRequestsNestedInput = {
    create?: XOR<AddressCreateWithoutOnDemandDeliveryRequestsInput, AddressUncheckedCreateWithoutOnDemandDeliveryRequestsInput>
    connectOrCreate?: AddressCreateOrConnectWithoutOnDemandDeliveryRequestsInput
    upsert?: AddressUpsertWithoutOnDemandDeliveryRequestsInput
    connect?: AddressWhereUniqueInput
    update?: XOR<XOR<AddressUpdateToOneWithWhereWithoutOnDemandDeliveryRequestsInput, AddressUpdateWithoutOnDemandDeliveryRequestsInput>, AddressUncheckedUpdateWithoutOnDemandDeliveryRequestsInput>
  }

  export type AddressUpdateOneRequiredWithoutOnDemandPickupRequestsNestedInput = {
    create?: XOR<AddressCreateWithoutOnDemandPickupRequestsInput, AddressUncheckedCreateWithoutOnDemandPickupRequestsInput>
    connectOrCreate?: AddressCreateOrConnectWithoutOnDemandPickupRequestsInput
    upsert?: AddressUpsertWithoutOnDemandPickupRequestsInput
    connect?: AddressWhereUniqueInput
    update?: XOR<XOR<AddressUpdateToOneWithWhereWithoutOnDemandPickupRequestsInput, AddressUpdateWithoutOnDemandPickupRequestsInput>, AddressUncheckedUpdateWithoutOnDemandPickupRequestsInput>
  }

  export type ProfileUpdateOneRequiredWithoutOnDemandRequestsNestedInput = {
    create?: XOR<ProfileCreateWithoutOnDemandRequestsInput, ProfileUncheckedCreateWithoutOnDemandRequestsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutOnDemandRequestsInput
    upsert?: ProfileUpsertWithoutOnDemandRequestsInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutOnDemandRequestsInput, ProfileUpdateWithoutOnDemandRequestsInput>, ProfileUncheckedUpdateWithoutOnDemandRequestsInput>
  }

  export type DispatchUncheckedUpdateManyWithoutOnDemandNestedInput = {
    create?: XOR<DispatchCreateWithoutOnDemandInput, DispatchUncheckedCreateWithoutOnDemandInput> | DispatchCreateWithoutOnDemandInput[] | DispatchUncheckedCreateWithoutOnDemandInput[]
    connectOrCreate?: DispatchCreateOrConnectWithoutOnDemandInput | DispatchCreateOrConnectWithoutOnDemandInput[]
    upsert?: DispatchUpsertWithWhereUniqueWithoutOnDemandInput | DispatchUpsertWithWhereUniqueWithoutOnDemandInput[]
    createMany?: DispatchCreateManyOnDemandInputEnvelope
    set?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    disconnect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    delete?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    connect?: DispatchWhereUniqueInput | DispatchWhereUniqueInput[]
    update?: DispatchUpdateWithWhereUniqueWithoutOnDemandInput | DispatchUpdateWithWhereUniqueWithoutOnDemandInput[]
    updateMany?: DispatchUpdateManyWithWhereWithoutOnDemandInput | DispatchUpdateManyWithWhereWithoutOnDemandInput[]
    deleteMany?: DispatchScalarWhereInput | DispatchScalarWhereInput[]
  }

  export type FileUploadUncheckedUpdateManyWithoutOnDemandNestedInput = {
    create?: XOR<FileUploadCreateWithoutOnDemandInput, FileUploadUncheckedCreateWithoutOnDemandInput> | FileUploadCreateWithoutOnDemandInput[] | FileUploadUncheckedCreateWithoutOnDemandInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutOnDemandInput | FileUploadCreateOrConnectWithoutOnDemandInput[]
    upsert?: FileUploadUpsertWithWhereUniqueWithoutOnDemandInput | FileUploadUpsertWithWhereUniqueWithoutOnDemandInput[]
    createMany?: FileUploadCreateManyOnDemandInputEnvelope
    set?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    disconnect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    delete?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    update?: FileUploadUpdateWithWhereUniqueWithoutOnDemandInput | FileUploadUpdateWithWhereUniqueWithoutOnDemandInput[]
    updateMany?: FileUploadUpdateManyWithWhereWithoutOnDemandInput | FileUploadUpdateManyWithWhereWithoutOnDemandInput[]
    deleteMany?: FileUploadScalarWhereInput | FileUploadScalarWhereInput[]
  }

  export type AddressCreateNestedOneWithoutUserAddressesInput = {
    create?: XOR<AddressCreateWithoutUserAddressesInput, AddressUncheckedCreateWithoutUserAddressesInput>
    connectOrCreate?: AddressCreateOrConnectWithoutUserAddressesInput
    connect?: AddressWhereUniqueInput
  }

  export type ProfileCreateNestedOneWithoutUserAddressesInput = {
    create?: XOR<ProfileCreateWithoutUserAddressesInput, ProfileUncheckedCreateWithoutUserAddressesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserAddressesInput
    connect?: ProfileWhereUniqueInput
  }

  export type AddressUpdateOneRequiredWithoutUserAddressesNestedInput = {
    create?: XOR<AddressCreateWithoutUserAddressesInput, AddressUncheckedCreateWithoutUserAddressesInput>
    connectOrCreate?: AddressCreateOrConnectWithoutUserAddressesInput
    upsert?: AddressUpsertWithoutUserAddressesInput
    connect?: AddressWhereUniqueInput
    update?: XOR<XOR<AddressUpdateToOneWithWhereWithoutUserAddressesInput, AddressUpdateWithoutUserAddressesInput>, AddressUncheckedUpdateWithoutUserAddressesInput>
  }

  export type ProfileUpdateOneRequiredWithoutUserAddressesNestedInput = {
    create?: XOR<ProfileCreateWithoutUserAddressesInput, ProfileUncheckedCreateWithoutUserAddressesInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutUserAddressesInput
    upsert?: ProfileUpsertWithoutUserAddressesInput
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutUserAddressesInput, ProfileUpdateWithoutUserAddressesInput>, ProfileUncheckedUpdateWithoutUserAddressesInput>
  }

  export type EnumFormTypeFieldUpdateOperationsInput = {
    set?: $Enums.FormType
  }

  export type FileUploadCreateNestedManyWithoutJobApplicationInput = {
    create?: XOR<FileUploadCreateWithoutJobApplicationInput, FileUploadUncheckedCreateWithoutJobApplicationInput> | FileUploadCreateWithoutJobApplicationInput[] | FileUploadUncheckedCreateWithoutJobApplicationInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutJobApplicationInput | FileUploadCreateOrConnectWithoutJobApplicationInput[]
    createMany?: FileUploadCreateManyJobApplicationInputEnvelope
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
  }

  export type ProfileCreateNestedOneWithoutJobApplicationsInput = {
    create?: XOR<ProfileCreateWithoutJobApplicationsInput, ProfileUncheckedCreateWithoutJobApplicationsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutJobApplicationsInput
    connect?: ProfileWhereUniqueInput
  }

  export type FileUploadUncheckedCreateNestedManyWithoutJobApplicationInput = {
    create?: XOR<FileUploadCreateWithoutJobApplicationInput, FileUploadUncheckedCreateWithoutJobApplicationInput> | FileUploadCreateWithoutJobApplicationInput[] | FileUploadUncheckedCreateWithoutJobApplicationInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutJobApplicationInput | FileUploadCreateOrConnectWithoutJobApplicationInput[]
    createMany?: FileUploadCreateManyJobApplicationInputEnvelope
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
  }

  export type EnumApplicationStatusFieldUpdateOperationsInput = {
    set?: $Enums.ApplicationStatus
  }

  export type FileUploadUpdateManyWithoutJobApplicationNestedInput = {
    create?: XOR<FileUploadCreateWithoutJobApplicationInput, FileUploadUncheckedCreateWithoutJobApplicationInput> | FileUploadCreateWithoutJobApplicationInput[] | FileUploadUncheckedCreateWithoutJobApplicationInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutJobApplicationInput | FileUploadCreateOrConnectWithoutJobApplicationInput[]
    upsert?: FileUploadUpsertWithWhereUniqueWithoutJobApplicationInput | FileUploadUpsertWithWhereUniqueWithoutJobApplicationInput[]
    createMany?: FileUploadCreateManyJobApplicationInputEnvelope
    set?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    disconnect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    delete?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    update?: FileUploadUpdateWithWhereUniqueWithoutJobApplicationInput | FileUploadUpdateWithWhereUniqueWithoutJobApplicationInput[]
    updateMany?: FileUploadUpdateManyWithWhereWithoutJobApplicationInput | FileUploadUpdateManyWithWhereWithoutJobApplicationInput[]
    deleteMany?: FileUploadScalarWhereInput | FileUploadScalarWhereInput[]
  }

  export type ProfileUpdateOneWithoutJobApplicationsNestedInput = {
    create?: XOR<ProfileCreateWithoutJobApplicationsInput, ProfileUncheckedCreateWithoutJobApplicationsInput>
    connectOrCreate?: ProfileCreateOrConnectWithoutJobApplicationsInput
    upsert?: ProfileUpsertWithoutJobApplicationsInput
    disconnect?: ProfileWhereInput | boolean
    delete?: ProfileWhereInput | boolean
    connect?: ProfileWhereUniqueInput
    update?: XOR<XOR<ProfileUpdateToOneWithWhereWithoutJobApplicationsInput, ProfileUpdateWithoutJobApplicationsInput>, ProfileUncheckedUpdateWithoutJobApplicationsInput>
  }

  export type FileUploadUncheckedUpdateManyWithoutJobApplicationNestedInput = {
    create?: XOR<FileUploadCreateWithoutJobApplicationInput, FileUploadUncheckedCreateWithoutJobApplicationInput> | FileUploadCreateWithoutJobApplicationInput[] | FileUploadUncheckedCreateWithoutJobApplicationInput[]
    connectOrCreate?: FileUploadCreateOrConnectWithoutJobApplicationInput | FileUploadCreateOrConnectWithoutJobApplicationInput[]
    upsert?: FileUploadUpsertWithWhereUniqueWithoutJobApplicationInput | FileUploadUpsertWithWhereUniqueWithoutJobApplicationInput[]
    createMany?: FileUploadCreateManyJobApplicationInputEnvelope
    set?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    disconnect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    delete?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    connect?: FileUploadWhereUniqueInput | FileUploadWhereUniqueInput[]
    update?: FileUploadUpdateWithWhereUniqueWithoutJobApplicationInput | FileUploadUpdateWithWhereUniqueWithoutJobApplicationInput[]
    updateMany?: FileUploadUpdateManyWithWhereWithoutJobApplicationInput | FileUploadUpdateManyWithWhereWithoutJobApplicationInput[]
    deleteMany?: FileUploadScalarWhereInput | FileUploadScalarWhereInput[]
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedEnumUserTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeFilter<$PrismaModel> | $Enums.UserType
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumUserStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusFilter<$PrismaModel> | $Enums.UserStatus
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedEnumUserTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserType | EnumUserTypeFieldRefInput<$PrismaModel>
    in?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserType[] | ListEnumUserTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumUserTypeWithAggregatesFilter<$PrismaModel> | $Enums.UserType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserTypeFilter<$PrismaModel>
    _max?: NestedEnumUserTypeFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumUserStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.UserStatus | EnumUserStatusFieldRefInput<$PrismaModel>
    in?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.UserStatus[] | ListEnumUserStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumUserStatusWithAggregatesFilter<$PrismaModel> | $Enums.UserStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumUserStatusFilter<$PrismaModel>
    _max?: NestedEnumUserStatusFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumCateringNeedHostFilter<$PrismaModel = never> = {
    equals?: $Enums.CateringNeedHost | EnumCateringNeedHostFieldRefInput<$PrismaModel>
    in?: $Enums.CateringNeedHost[] | ListEnumCateringNeedHostFieldRefInput<$PrismaModel>
    notIn?: $Enums.CateringNeedHost[] | ListEnumCateringNeedHostFieldRefInput<$PrismaModel>
    not?: NestedEnumCateringNeedHostFilter<$PrismaModel> | $Enums.CateringNeedHost
  }

  export type NestedEnumCateringStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.CateringStatus | EnumCateringStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CateringStatus[] | ListEnumCateringStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CateringStatus[] | ListEnumCateringStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCateringStatusFilter<$PrismaModel> | $Enums.CateringStatus
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedEnumDriverStatusNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.DriverStatus | EnumDriverStatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDriverStatusNullableFilter<$PrismaModel> | $Enums.DriverStatus | null
  }

  export type NestedEnumCateringNeedHostWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CateringNeedHost | EnumCateringNeedHostFieldRefInput<$PrismaModel>
    in?: $Enums.CateringNeedHost[] | ListEnumCateringNeedHostFieldRefInput<$PrismaModel>
    notIn?: $Enums.CateringNeedHost[] | ListEnumCateringNeedHostFieldRefInput<$PrismaModel>
    not?: NestedEnumCateringNeedHostWithAggregatesFilter<$PrismaModel> | $Enums.CateringNeedHost
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCateringNeedHostFilter<$PrismaModel>
    _max?: NestedEnumCateringNeedHostFilter<$PrismaModel>
  }

  export type NestedEnumCateringStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.CateringStatus | EnumCateringStatusFieldRefInput<$PrismaModel>
    in?: $Enums.CateringStatus[] | ListEnumCateringStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.CateringStatus[] | ListEnumCateringStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumCateringStatusWithAggregatesFilter<$PrismaModel> | $Enums.CateringStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumCateringStatusFilter<$PrismaModel>
    _max?: NestedEnumCateringStatusFilter<$PrismaModel>
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | ListDecimalFieldRefInput<$PrismaModel> | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedEnumDriverStatusNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.DriverStatus | EnumDriverStatusFieldRefInput<$PrismaModel> | null
    in?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.DriverStatus[] | ListEnumDriverStatusFieldRefInput<$PrismaModel> | null
    not?: NestedEnumDriverStatusNullableWithAggregatesFilter<$PrismaModel> | $Enums.DriverStatus | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumDriverStatusNullableFilter<$PrismaModel>
    _max?: NestedEnumDriverStatusNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedEnumVehicleTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleType | EnumVehicleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleTypeFilter<$PrismaModel> | $Enums.VehicleType
  }

  export type NestedEnumOnDemandStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OnDemandStatus | EnumOnDemandStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OnDemandStatus[] | ListEnumOnDemandStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OnDemandStatus[] | ListEnumOnDemandStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOnDemandStatusFilter<$PrismaModel> | $Enums.OnDemandStatus
  }

  export type NestedEnumVehicleTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.VehicleType | EnumVehicleTypeFieldRefInput<$PrismaModel>
    in?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.VehicleType[] | ListEnumVehicleTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumVehicleTypeWithAggregatesFilter<$PrismaModel> | $Enums.VehicleType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumVehicleTypeFilter<$PrismaModel>
    _max?: NestedEnumVehicleTypeFilter<$PrismaModel>
  }

  export type NestedEnumOnDemandStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OnDemandStatus | EnumOnDemandStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OnDemandStatus[] | ListEnumOnDemandStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.OnDemandStatus[] | ListEnumOnDemandStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumOnDemandStatusWithAggregatesFilter<$PrismaModel> | $Enums.OnDemandStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOnDemandStatusFilter<$PrismaModel>
    _max?: NestedEnumOnDemandStatusFilter<$PrismaModel>
  }

  export type NestedEnumFormTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.FormType | EnumFormTypeFieldRefInput<$PrismaModel>
    in?: $Enums.FormType[] | ListEnumFormTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.FormType[] | ListEnumFormTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumFormTypeFilter<$PrismaModel> | $Enums.FormType
  }

  export type NestedEnumFormTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.FormType | EnumFormTypeFieldRefInput<$PrismaModel>
    in?: $Enums.FormType[] | ListEnumFormTypeFieldRefInput<$PrismaModel>
    notIn?: $Enums.FormType[] | ListEnumFormTypeFieldRefInput<$PrismaModel>
    not?: NestedEnumFormTypeWithAggregatesFilter<$PrismaModel> | $Enums.FormType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumFormTypeFilter<$PrismaModel>
    _max?: NestedEnumFormTypeFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumApplicationStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusFilter<$PrismaModel> | $Enums.ApplicationStatus
  }

  export type NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.ApplicationStatus | EnumApplicationStatusFieldRefInput<$PrismaModel>
    in?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.ApplicationStatus[] | ListEnumApplicationStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumApplicationStatusWithAggregatesFilter<$PrismaModel> | $Enums.ApplicationStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumApplicationStatusFilter<$PrismaModel>
    _max?: NestedEnumApplicationStatusFilter<$PrismaModel>
  }

  export type AccountCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refreshToken?: string | null
    accessToken?: string | null
    expiresAt?: number | null
    tokenType?: string | null
    scope?: string | null
    idToken?: string | null
    sessionState?: string | null
  }

  export type AccountUncheckedCreateWithoutUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refreshToken?: string | null
    accessToken?: string | null
    expiresAt?: number | null
    tokenType?: string | null
    scope?: string | null
    idToken?: string | null
    sessionState?: string | null
  }

  export type AccountCreateOrConnectWithoutUserInput = {
    where: AccountWhereUniqueInput
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountCreateManyUserInputEnvelope = {
    data: AccountCreateManyUserInput | AccountCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AddressCreateWithoutCreatorInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    cateringDeliveryRequests?: CateringRequestCreateNestedManyWithoutDeliveryAddressInput
    cateringPickupRequests?: CateringRequestCreateNestedManyWithoutPickupAddressInput
    onDemandDeliveryRequests?: OnDemandCreateNestedManyWithoutDeliveryAddressInput
    onDemandPickupRequests?: OnDemandCreateNestedManyWithoutPickupAddressInput
    userAddresses?: UserAddressCreateNestedManyWithoutAddressInput
  }

  export type AddressUncheckedCreateWithoutCreatorInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    cateringDeliveryRequests?: CateringRequestUncheckedCreateNestedManyWithoutDeliveryAddressInput
    cateringPickupRequests?: CateringRequestUncheckedCreateNestedManyWithoutPickupAddressInput
    onDemandDeliveryRequests?: OnDemandUncheckedCreateNestedManyWithoutDeliveryAddressInput
    onDemandPickupRequests?: OnDemandUncheckedCreateNestedManyWithoutPickupAddressInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressCreateOrConnectWithoutCreatorInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutCreatorInput, AddressUncheckedCreateWithoutCreatorInput>
  }

  export type AddressCreateManyCreatorInputEnvelope = {
    data: AddressCreateManyCreatorInput | AddressCreateManyCreatorInput[]
    skipDuplicates?: boolean
  }

  export type CateringRequestCreateWithoutUserInput = {
    id?: string
    guid?: string | null
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    deliveryAddress: AddressCreateNestedOneWithoutCateringDeliveryRequestsInput
    pickupAddress: AddressCreateNestedOneWithoutCateringPickupRequestsInput
    dispatches?: DispatchCreateNestedManyWithoutCateringRequestInput
    fileUploads?: FileUploadCreateNestedManyWithoutCateringRequestInput
  }

  export type CateringRequestUncheckedCreateWithoutUserInput = {
    id?: string
    guid?: string | null
    pickupAddressId: string
    deliveryAddressId: string
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchUncheckedCreateNestedManyWithoutCateringRequestInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutCateringRequestInput
  }

  export type CateringRequestCreateOrConnectWithoutUserInput = {
    where: CateringRequestWhereUniqueInput
    create: XOR<CateringRequestCreateWithoutUserInput, CateringRequestUncheckedCreateWithoutUserInput>
  }

  export type CateringRequestCreateManyUserInputEnvelope = {
    data: CateringRequestCreateManyUserInput | CateringRequestCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type DispatchCreateWithoutDriverInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    cateringRequest?: CateringRequestCreateNestedOneWithoutDispatchesInput
    onDemand?: OnDemandCreateNestedOneWithoutDispatchesInput
    user?: ProfileCreateNestedOneWithoutUserDispatchesInput
  }

  export type DispatchUncheckedCreateWithoutDriverInput = {
    id?: string
    cateringRequestId?: string | null
    createdAt?: Date | string
    onDemandId?: string | null
    updatedAt?: Date | string
    userId?: string | null
  }

  export type DispatchCreateOrConnectWithoutDriverInput = {
    where: DispatchWhereUniqueInput
    create: XOR<DispatchCreateWithoutDriverInput, DispatchUncheckedCreateWithoutDriverInput>
  }

  export type DispatchCreateManyDriverInputEnvelope = {
    data: DispatchCreateManyDriverInput | DispatchCreateManyDriverInput[]
    skipDuplicates?: boolean
  }

  export type DispatchCreateWithoutUserInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    cateringRequest?: CateringRequestCreateNestedOneWithoutDispatchesInput
    driver?: ProfileCreateNestedOneWithoutDriverDispatchesInput
    onDemand?: OnDemandCreateNestedOneWithoutDispatchesInput
  }

  export type DispatchUncheckedCreateWithoutUserInput = {
    id?: string
    cateringRequestId?: string | null
    createdAt?: Date | string
    driverId?: string | null
    onDemandId?: string | null
    updatedAt?: Date | string
  }

  export type DispatchCreateOrConnectWithoutUserInput = {
    where: DispatchWhereUniqueInput
    create: XOR<DispatchCreateWithoutUserInput, DispatchUncheckedCreateWithoutUserInput>
  }

  export type DispatchCreateManyUserInputEnvelope = {
    data: DispatchCreateManyUserInput | DispatchCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type FileUploadCreateWithoutUserInput = {
    id?: string
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    isTemporary?: boolean
    cateringRequest?: CateringRequestCreateNestedOneWithoutFileUploadsInput
    jobApplication?: JobApplicationCreateNestedOneWithoutFileUploadsInput
    onDemand?: OnDemandCreateNestedOneWithoutFileUploadsInput
  }

  export type FileUploadUncheckedCreateWithoutUserInput = {
    id?: string
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    cateringRequestId?: string | null
    onDemandId?: string | null
    jobApplicationId?: string | null
    category?: string | null
    isTemporary?: boolean
  }

  export type FileUploadCreateOrConnectWithoutUserInput = {
    where: FileUploadWhereUniqueInput
    create: XOR<FileUploadCreateWithoutUserInput, FileUploadUncheckedCreateWithoutUserInput>
  }

  export type FileUploadCreateManyUserInputEnvelope = {
    data: FileUploadCreateManyUserInput | FileUploadCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type JobApplicationCreateWithoutProfileInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    position: string
    addressStreet: string
    addressCity: string
    addressState: string
    addressZip: string
    education?: string | null
    workExperience?: string | null
    skills?: string | null
    coverLetter?: string | null
    resumeFilePath?: string | null
    driversLicenseFilePath?: string | null
    insuranceFilePath?: string | null
    vehicleRegFilePath?: string | null
    foodHandlerFilePath?: string | null
    hipaaFilePath?: string | null
    driverPhotoFilePath?: string | null
    carPhotoFilePath?: string | null
    equipmentPhotoFilePath?: string | null
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    fileUploads?: FileUploadCreateNestedManyWithoutJobApplicationInput
  }

  export type JobApplicationUncheckedCreateWithoutProfileInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    position: string
    addressStreet: string
    addressCity: string
    addressState: string
    addressZip: string
    education?: string | null
    workExperience?: string | null
    skills?: string | null
    coverLetter?: string | null
    resumeFilePath?: string | null
    driversLicenseFilePath?: string | null
    insuranceFilePath?: string | null
    vehicleRegFilePath?: string | null
    foodHandlerFilePath?: string | null
    hipaaFilePath?: string | null
    driverPhotoFilePath?: string | null
    carPhotoFilePath?: string | null
    equipmentPhotoFilePath?: string | null
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutJobApplicationInput
  }

  export type JobApplicationCreateOrConnectWithoutProfileInput = {
    where: JobApplicationWhereUniqueInput
    create: XOR<JobApplicationCreateWithoutProfileInput, JobApplicationUncheckedCreateWithoutProfileInput>
  }

  export type JobApplicationCreateManyProfileInputEnvelope = {
    data: JobApplicationCreateManyProfileInput | JobApplicationCreateManyProfileInput[]
    skipDuplicates?: boolean
  }

  export type OnDemandCreateWithoutUserInput = {
    id?: string
    guid?: string | null
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchCreateNestedManyWithoutOnDemandInput
    fileUploads?: FileUploadCreateNestedManyWithoutOnDemandInput
    deliveryAddress: AddressCreateNestedOneWithoutOnDemandDeliveryRequestsInput
    pickupAddress: AddressCreateNestedOneWithoutOnDemandPickupRequestsInput
  }

  export type OnDemandUncheckedCreateWithoutUserInput = {
    id?: string
    guid?: string | null
    pickupAddressId: string
    deliveryAddressId: string
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchUncheckedCreateNestedManyWithoutOnDemandInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutOnDemandInput
  }

  export type OnDemandCreateOrConnectWithoutUserInput = {
    where: OnDemandWhereUniqueInput
    create: XOR<OnDemandCreateWithoutUserInput, OnDemandUncheckedCreateWithoutUserInput>
  }

  export type OnDemandCreateManyUserInputEnvelope = {
    data: OnDemandCreateManyUserInput | OnDemandCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type SessionCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SessionUncheckedCreateWithoutUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type SessionCreateOrConnectWithoutUserInput = {
    where: SessionWhereUniqueInput
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionCreateManyUserInputEnvelope = {
    data: SessionCreateManyUserInput | SessionCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserAddressCreateWithoutUserInput = {
    id?: string
    alias?: string | null
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    address: AddressCreateNestedOneWithoutUserAddressesInput
  }

  export type UserAddressUncheckedCreateWithoutUserInput = {
    id?: string
    addressId: string
    alias?: string | null
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserAddressCreateOrConnectWithoutUserInput = {
    where: UserAddressWhereUniqueInput
    create: XOR<UserAddressCreateWithoutUserInput, UserAddressUncheckedCreateWithoutUserInput>
  }

  export type UserAddressCreateManyUserInputEnvelope = {
    data: UserAddressCreateManyUserInput | UserAddressCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type AccountUpsertWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    update: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
    create: XOR<AccountCreateWithoutUserInput, AccountUncheckedCreateWithoutUserInput>
  }

  export type AccountUpdateWithWhereUniqueWithoutUserInput = {
    where: AccountWhereUniqueInput
    data: XOR<AccountUpdateWithoutUserInput, AccountUncheckedUpdateWithoutUserInput>
  }

  export type AccountUpdateManyWithWhereWithoutUserInput = {
    where: AccountScalarWhereInput
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyWithoutUserInput>
  }

  export type AccountScalarWhereInput = {
    AND?: AccountScalarWhereInput | AccountScalarWhereInput[]
    OR?: AccountScalarWhereInput[]
    NOT?: AccountScalarWhereInput | AccountScalarWhereInput[]
    id?: UuidFilter<"Account"> | string
    userId?: UuidFilter<"Account"> | string
    type?: StringFilter<"Account"> | string
    provider?: StringFilter<"Account"> | string
    providerAccountId?: StringFilter<"Account"> | string
    refreshToken?: StringNullableFilter<"Account"> | string | null
    accessToken?: StringNullableFilter<"Account"> | string | null
    expiresAt?: IntNullableFilter<"Account"> | number | null
    tokenType?: StringNullableFilter<"Account"> | string | null
    scope?: StringNullableFilter<"Account"> | string | null
    idToken?: StringNullableFilter<"Account"> | string | null
    sessionState?: StringNullableFilter<"Account"> | string | null
  }

  export type AddressUpsertWithWhereUniqueWithoutCreatorInput = {
    where: AddressWhereUniqueInput
    update: XOR<AddressUpdateWithoutCreatorInput, AddressUncheckedUpdateWithoutCreatorInput>
    create: XOR<AddressCreateWithoutCreatorInput, AddressUncheckedCreateWithoutCreatorInput>
  }

  export type AddressUpdateWithWhereUniqueWithoutCreatorInput = {
    where: AddressWhereUniqueInput
    data: XOR<AddressUpdateWithoutCreatorInput, AddressUncheckedUpdateWithoutCreatorInput>
  }

  export type AddressUpdateManyWithWhereWithoutCreatorInput = {
    where: AddressScalarWhereInput
    data: XOR<AddressUpdateManyMutationInput, AddressUncheckedUpdateManyWithoutCreatorInput>
  }

  export type AddressScalarWhereInput = {
    AND?: AddressScalarWhereInput | AddressScalarWhereInput[]
    OR?: AddressScalarWhereInput[]
    NOT?: AddressScalarWhereInput | AddressScalarWhereInput[]
    id?: UuidFilter<"Address"> | string
    county?: StringNullableFilter<"Address"> | string | null
    street1?: StringFilter<"Address"> | string
    street2?: StringNullableFilter<"Address"> | string | null
    city?: StringFilter<"Address"> | string
    state?: StringFilter<"Address"> | string
    zip?: StringFilter<"Address"> | string
    createdAt?: DateTimeFilter<"Address"> | Date | string
    createdBy?: UuidNullableFilter<"Address"> | string | null
    isRestaurant?: BoolFilter<"Address"> | boolean
    isShared?: BoolFilter<"Address"> | boolean
    locationNumber?: StringNullableFilter<"Address"> | string | null
    parkingLoading?: StringNullableFilter<"Address"> | string | null
    updatedAt?: DateTimeFilter<"Address"> | Date | string
    name?: StringNullableFilter<"Address"> | string | null
    latitude?: FloatNullableFilter<"Address"> | number | null
    longitude?: FloatNullableFilter<"Address"> | number | null
    deletedAt?: DateTimeNullableFilter<"Address"> | Date | string | null
  }

  export type CateringRequestUpsertWithWhereUniqueWithoutUserInput = {
    where: CateringRequestWhereUniqueInput
    update: XOR<CateringRequestUpdateWithoutUserInput, CateringRequestUncheckedUpdateWithoutUserInput>
    create: XOR<CateringRequestCreateWithoutUserInput, CateringRequestUncheckedCreateWithoutUserInput>
  }

  export type CateringRequestUpdateWithWhereUniqueWithoutUserInput = {
    where: CateringRequestWhereUniqueInput
    data: XOR<CateringRequestUpdateWithoutUserInput, CateringRequestUncheckedUpdateWithoutUserInput>
  }

  export type CateringRequestUpdateManyWithWhereWithoutUserInput = {
    where: CateringRequestScalarWhereInput
    data: XOR<CateringRequestUpdateManyMutationInput, CateringRequestUncheckedUpdateManyWithoutUserInput>
  }

  export type CateringRequestScalarWhereInput = {
    AND?: CateringRequestScalarWhereInput | CateringRequestScalarWhereInput[]
    OR?: CateringRequestScalarWhereInput[]
    NOT?: CateringRequestScalarWhereInput | CateringRequestScalarWhereInput[]
    id?: UuidFilter<"CateringRequest"> | string
    guid?: StringNullableFilter<"CateringRequest"> | string | null
    userId?: UuidFilter<"CateringRequest"> | string
    pickupAddressId?: UuidFilter<"CateringRequest"> | string
    deliveryAddressId?: UuidFilter<"CateringRequest"> | string
    brokerage?: StringNullableFilter<"CateringRequest"> | string | null
    orderNumber?: StringFilter<"CateringRequest"> | string
    pickupDateTime?: DateTimeNullableFilter<"CateringRequest"> | Date | string | null
    arrivalDateTime?: DateTimeNullableFilter<"CateringRequest"> | Date | string | null
    completeDateTime?: DateTimeNullableFilter<"CateringRequest"> | Date | string | null
    headcount?: IntNullableFilter<"CateringRequest"> | number | null
    needHost?: EnumCateringNeedHostFilter<"CateringRequest"> | $Enums.CateringNeedHost
    hoursNeeded?: FloatNullableFilter<"CateringRequest"> | number | null
    numberOfHosts?: IntNullableFilter<"CateringRequest"> | number | null
    clientAttention?: StringNullableFilter<"CateringRequest"> | string | null
    pickupNotes?: StringNullableFilter<"CateringRequest"> | string | null
    specialNotes?: StringNullableFilter<"CateringRequest"> | string | null
    image?: StringNullableFilter<"CateringRequest"> | string | null
    status?: EnumCateringStatusFilter<"CateringRequest"> | $Enums.CateringStatus
    orderTotal?: DecimalNullableFilter<"CateringRequest"> | Decimal | DecimalJsLike | number | string | null
    tip?: DecimalNullableFilter<"CateringRequest"> | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFilter<"CateringRequest"> | Date | string
    updatedAt?: DateTimeFilter<"CateringRequest"> | Date | string
    driverStatus?: EnumDriverStatusNullableFilter<"CateringRequest"> | $Enums.DriverStatus | null
    deletedAt?: DateTimeNullableFilter<"CateringRequest"> | Date | string | null
  }

  export type DispatchUpsertWithWhereUniqueWithoutDriverInput = {
    where: DispatchWhereUniqueInput
    update: XOR<DispatchUpdateWithoutDriverInput, DispatchUncheckedUpdateWithoutDriverInput>
    create: XOR<DispatchCreateWithoutDriverInput, DispatchUncheckedCreateWithoutDriverInput>
  }

  export type DispatchUpdateWithWhereUniqueWithoutDriverInput = {
    where: DispatchWhereUniqueInput
    data: XOR<DispatchUpdateWithoutDriverInput, DispatchUncheckedUpdateWithoutDriverInput>
  }

  export type DispatchUpdateManyWithWhereWithoutDriverInput = {
    where: DispatchScalarWhereInput
    data: XOR<DispatchUpdateManyMutationInput, DispatchUncheckedUpdateManyWithoutDriverInput>
  }

  export type DispatchScalarWhereInput = {
    AND?: DispatchScalarWhereInput | DispatchScalarWhereInput[]
    OR?: DispatchScalarWhereInput[]
    NOT?: DispatchScalarWhereInput | DispatchScalarWhereInput[]
    id?: UuidFilter<"Dispatch"> | string
    cateringRequestId?: UuidNullableFilter<"Dispatch"> | string | null
    createdAt?: DateTimeFilter<"Dispatch"> | Date | string
    driverId?: UuidNullableFilter<"Dispatch"> | string | null
    onDemandId?: UuidNullableFilter<"Dispatch"> | string | null
    updatedAt?: DateTimeFilter<"Dispatch"> | Date | string
    userId?: UuidNullableFilter<"Dispatch"> | string | null
  }

  export type DispatchUpsertWithWhereUniqueWithoutUserInput = {
    where: DispatchWhereUniqueInput
    update: XOR<DispatchUpdateWithoutUserInput, DispatchUncheckedUpdateWithoutUserInput>
    create: XOR<DispatchCreateWithoutUserInput, DispatchUncheckedCreateWithoutUserInput>
  }

  export type DispatchUpdateWithWhereUniqueWithoutUserInput = {
    where: DispatchWhereUniqueInput
    data: XOR<DispatchUpdateWithoutUserInput, DispatchUncheckedUpdateWithoutUserInput>
  }

  export type DispatchUpdateManyWithWhereWithoutUserInput = {
    where: DispatchScalarWhereInput
    data: XOR<DispatchUpdateManyMutationInput, DispatchUncheckedUpdateManyWithoutUserInput>
  }

  export type FileUploadUpsertWithWhereUniqueWithoutUserInput = {
    where: FileUploadWhereUniqueInput
    update: XOR<FileUploadUpdateWithoutUserInput, FileUploadUncheckedUpdateWithoutUserInput>
    create: XOR<FileUploadCreateWithoutUserInput, FileUploadUncheckedCreateWithoutUserInput>
  }

  export type FileUploadUpdateWithWhereUniqueWithoutUserInput = {
    where: FileUploadWhereUniqueInput
    data: XOR<FileUploadUpdateWithoutUserInput, FileUploadUncheckedUpdateWithoutUserInput>
  }

  export type FileUploadUpdateManyWithWhereWithoutUserInput = {
    where: FileUploadScalarWhereInput
    data: XOR<FileUploadUpdateManyMutationInput, FileUploadUncheckedUpdateManyWithoutUserInput>
  }

  export type FileUploadScalarWhereInput = {
    AND?: FileUploadScalarWhereInput | FileUploadScalarWhereInput[]
    OR?: FileUploadScalarWhereInput[]
    NOT?: FileUploadScalarWhereInput | FileUploadScalarWhereInput[]
    id?: UuidFilter<"FileUpload"> | string
    userId?: UuidNullableFilter<"FileUpload"> | string | null
    fileName?: StringFilter<"FileUpload"> | string
    fileType?: StringFilter<"FileUpload"> | string
    fileSize?: IntFilter<"FileUpload"> | number
    fileUrl?: StringFilter<"FileUpload"> | string
    uploadedAt?: DateTimeFilter<"FileUpload"> | Date | string
    updatedAt?: DateTimeFilter<"FileUpload"> | Date | string
    cateringRequestId?: UuidNullableFilter<"FileUpload"> | string | null
    onDemandId?: UuidNullableFilter<"FileUpload"> | string | null
    jobApplicationId?: UuidNullableFilter<"FileUpload"> | string | null
    category?: StringNullableFilter<"FileUpload"> | string | null
    isTemporary?: BoolFilter<"FileUpload"> | boolean
  }

  export type JobApplicationUpsertWithWhereUniqueWithoutProfileInput = {
    where: JobApplicationWhereUniqueInput
    update: XOR<JobApplicationUpdateWithoutProfileInput, JobApplicationUncheckedUpdateWithoutProfileInput>
    create: XOR<JobApplicationCreateWithoutProfileInput, JobApplicationUncheckedCreateWithoutProfileInput>
  }

  export type JobApplicationUpdateWithWhereUniqueWithoutProfileInput = {
    where: JobApplicationWhereUniqueInput
    data: XOR<JobApplicationUpdateWithoutProfileInput, JobApplicationUncheckedUpdateWithoutProfileInput>
  }

  export type JobApplicationUpdateManyWithWhereWithoutProfileInput = {
    where: JobApplicationScalarWhereInput
    data: XOR<JobApplicationUpdateManyMutationInput, JobApplicationUncheckedUpdateManyWithoutProfileInput>
  }

  export type JobApplicationScalarWhereInput = {
    AND?: JobApplicationScalarWhereInput | JobApplicationScalarWhereInput[]
    OR?: JobApplicationScalarWhereInput[]
    NOT?: JobApplicationScalarWhereInput | JobApplicationScalarWhereInput[]
    id?: UuidFilter<"JobApplication"> | string
    profileId?: UuidNullableFilter<"JobApplication"> | string | null
    firstName?: StringFilter<"JobApplication"> | string
    lastName?: StringFilter<"JobApplication"> | string
    email?: StringFilter<"JobApplication"> | string
    phone?: StringNullableFilter<"JobApplication"> | string | null
    position?: StringFilter<"JobApplication"> | string
    addressStreet?: StringFilter<"JobApplication"> | string
    addressCity?: StringFilter<"JobApplication"> | string
    addressState?: StringFilter<"JobApplication"> | string
    addressZip?: StringFilter<"JobApplication"> | string
    education?: StringNullableFilter<"JobApplication"> | string | null
    workExperience?: StringNullableFilter<"JobApplication"> | string | null
    skills?: StringNullableFilter<"JobApplication"> | string | null
    coverLetter?: StringNullableFilter<"JobApplication"> | string | null
    resumeFilePath?: StringNullableFilter<"JobApplication"> | string | null
    driversLicenseFilePath?: StringNullableFilter<"JobApplication"> | string | null
    insuranceFilePath?: StringNullableFilter<"JobApplication"> | string | null
    vehicleRegFilePath?: StringNullableFilter<"JobApplication"> | string | null
    foodHandlerFilePath?: StringNullableFilter<"JobApplication"> | string | null
    hipaaFilePath?: StringNullableFilter<"JobApplication"> | string | null
    driverPhotoFilePath?: StringNullableFilter<"JobApplication"> | string | null
    carPhotoFilePath?: StringNullableFilter<"JobApplication"> | string | null
    equipmentPhotoFilePath?: StringNullableFilter<"JobApplication"> | string | null
    status?: EnumApplicationStatusFilter<"JobApplication"> | $Enums.ApplicationStatus
    createdAt?: DateTimeFilter<"JobApplication"> | Date | string
    updatedAt?: DateTimeFilter<"JobApplication"> | Date | string
    deletedAt?: DateTimeNullableFilter<"JobApplication"> | Date | string | null
  }

  export type OnDemandUpsertWithWhereUniqueWithoutUserInput = {
    where: OnDemandWhereUniqueInput
    update: XOR<OnDemandUpdateWithoutUserInput, OnDemandUncheckedUpdateWithoutUserInput>
    create: XOR<OnDemandCreateWithoutUserInput, OnDemandUncheckedCreateWithoutUserInput>
  }

  export type OnDemandUpdateWithWhereUniqueWithoutUserInput = {
    where: OnDemandWhereUniqueInput
    data: XOR<OnDemandUpdateWithoutUserInput, OnDemandUncheckedUpdateWithoutUserInput>
  }

  export type OnDemandUpdateManyWithWhereWithoutUserInput = {
    where: OnDemandScalarWhereInput
    data: XOR<OnDemandUpdateManyMutationInput, OnDemandUncheckedUpdateManyWithoutUserInput>
  }

  export type OnDemandScalarWhereInput = {
    AND?: OnDemandScalarWhereInput | OnDemandScalarWhereInput[]
    OR?: OnDemandScalarWhereInput[]
    NOT?: OnDemandScalarWhereInput | OnDemandScalarWhereInput[]
    id?: UuidFilter<"OnDemand"> | string
    guid?: StringNullableFilter<"OnDemand"> | string | null
    userId?: UuidFilter<"OnDemand"> | string
    pickupAddressId?: UuidFilter<"OnDemand"> | string
    deliveryAddressId?: UuidFilter<"OnDemand"> | string
    orderNumber?: StringFilter<"OnDemand"> | string
    pickupDateTime?: DateTimeFilter<"OnDemand"> | Date | string
    arrivalDateTime?: DateTimeFilter<"OnDemand"> | Date | string
    completeDateTime?: DateTimeNullableFilter<"OnDemand"> | Date | string | null
    hoursNeeded?: FloatNullableFilter<"OnDemand"> | number | null
    itemDelivered?: StringNullableFilter<"OnDemand"> | string | null
    vehicleType?: EnumVehicleTypeFilter<"OnDemand"> | $Enums.VehicleType
    clientAttention?: StringFilter<"OnDemand"> | string
    pickupNotes?: StringNullableFilter<"OnDemand"> | string | null
    specialNotes?: StringNullableFilter<"OnDemand"> | string | null
    image?: StringNullableFilter<"OnDemand"> | string | null
    status?: EnumOnDemandStatusFilter<"OnDemand"> | $Enums.OnDemandStatus
    orderTotal?: DecimalNullableFilter<"OnDemand"> | Decimal | DecimalJsLike | number | string | null
    tip?: DecimalNullableFilter<"OnDemand"> | Decimal | DecimalJsLike | number | string | null
    length?: FloatNullableFilter<"OnDemand"> | number | null
    width?: FloatNullableFilter<"OnDemand"> | number | null
    height?: FloatNullableFilter<"OnDemand"> | number | null
    weight?: FloatNullableFilter<"OnDemand"> | number | null
    createdAt?: DateTimeFilter<"OnDemand"> | Date | string
    updatedAt?: DateTimeFilter<"OnDemand"> | Date | string
    driverStatus?: EnumDriverStatusNullableFilter<"OnDemand"> | $Enums.DriverStatus | null
    deletedAt?: DateTimeNullableFilter<"OnDemand"> | Date | string | null
  }

  export type SessionUpsertWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    update: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
    create: XOR<SessionCreateWithoutUserInput, SessionUncheckedCreateWithoutUserInput>
  }

  export type SessionUpdateWithWhereUniqueWithoutUserInput = {
    where: SessionWhereUniqueInput
    data: XOR<SessionUpdateWithoutUserInput, SessionUncheckedUpdateWithoutUserInput>
  }

  export type SessionUpdateManyWithWhereWithoutUserInput = {
    where: SessionScalarWhereInput
    data: XOR<SessionUpdateManyMutationInput, SessionUncheckedUpdateManyWithoutUserInput>
  }

  export type SessionScalarWhereInput = {
    AND?: SessionScalarWhereInput | SessionScalarWhereInput[]
    OR?: SessionScalarWhereInput[]
    NOT?: SessionScalarWhereInput | SessionScalarWhereInput[]
    id?: UuidFilter<"Session"> | string
    sessionToken?: StringFilter<"Session"> | string
    userId?: UuidFilter<"Session"> | string
    expires?: DateTimeFilter<"Session"> | Date | string
  }

  export type UserAddressUpsertWithWhereUniqueWithoutUserInput = {
    where: UserAddressWhereUniqueInput
    update: XOR<UserAddressUpdateWithoutUserInput, UserAddressUncheckedUpdateWithoutUserInput>
    create: XOR<UserAddressCreateWithoutUserInput, UserAddressUncheckedCreateWithoutUserInput>
  }

  export type UserAddressUpdateWithWhereUniqueWithoutUserInput = {
    where: UserAddressWhereUniqueInput
    data: XOR<UserAddressUpdateWithoutUserInput, UserAddressUncheckedUpdateWithoutUserInput>
  }

  export type UserAddressUpdateManyWithWhereWithoutUserInput = {
    where: UserAddressScalarWhereInput
    data: XOR<UserAddressUpdateManyMutationInput, UserAddressUncheckedUpdateManyWithoutUserInput>
  }

  export type UserAddressScalarWhereInput = {
    AND?: UserAddressScalarWhereInput | UserAddressScalarWhereInput[]
    OR?: UserAddressScalarWhereInput[]
    NOT?: UserAddressScalarWhereInput | UserAddressScalarWhereInput[]
    id?: UuidFilter<"UserAddress"> | string
    userId?: UuidFilter<"UserAddress"> | string
    addressId?: UuidFilter<"UserAddress"> | string
    alias?: StringNullableFilter<"UserAddress"> | string | null
    isDefault?: BoolFilter<"UserAddress"> | boolean
    createdAt?: DateTimeFilter<"UserAddress"> | Date | string
    updatedAt?: DateTimeFilter<"UserAddress"> | Date | string
  }

  export type ProfileCreateWithoutAccountsInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    createdAddresses?: AddressCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutAccountsInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    createdAddresses?: AddressUncheckedCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestUncheckedCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchUncheckedCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchUncheckedCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutAccountsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutAccountsInput, ProfileUncheckedCreateWithoutAccountsInput>
  }

  export type ProfileUpsertWithoutAccountsInput = {
    update: XOR<ProfileUpdateWithoutAccountsInput, ProfileUncheckedUpdateWithoutAccountsInput>
    create: XOR<ProfileCreateWithoutAccountsInput, ProfileUncheckedCreateWithoutAccountsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutAccountsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutAccountsInput, ProfileUncheckedUpdateWithoutAccountsInput>
  }

  export type ProfileUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAddresses?: AddressUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutAccountsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAddresses?: AddressUncheckedUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUncheckedUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUncheckedUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUncheckedUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProfileCreateWithoutSessionsInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    createdAddresses?: AddressCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutSessionsInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    createdAddresses?: AddressUncheckedCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestUncheckedCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchUncheckedCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchUncheckedCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandUncheckedCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutSessionsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutSessionsInput, ProfileUncheckedCreateWithoutSessionsInput>
  }

  export type ProfileUpsertWithoutSessionsInput = {
    update: XOR<ProfileUpdateWithoutSessionsInput, ProfileUncheckedUpdateWithoutSessionsInput>
    create: XOR<ProfileCreateWithoutSessionsInput, ProfileUncheckedCreateWithoutSessionsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutSessionsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutSessionsInput, ProfileUncheckedUpdateWithoutSessionsInput>
  }

  export type ProfileUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUncheckedUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUncheckedUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUncheckedUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUncheckedUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUncheckedUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
  }

  export type ProfileCreateWithoutCreatedAddressesInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    cateringRequests?: CateringRequestCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutCreatedAddressesInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    cateringRequests?: CateringRequestUncheckedCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchUncheckedCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchUncheckedCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutCreatedAddressesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutCreatedAddressesInput, ProfileUncheckedCreateWithoutCreatedAddressesInput>
  }

  export type CateringRequestCreateWithoutDeliveryAddressInput = {
    id?: string
    guid?: string | null
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    pickupAddress: AddressCreateNestedOneWithoutCateringPickupRequestsInput
    user: ProfileCreateNestedOneWithoutCateringRequestsInput
    dispatches?: DispatchCreateNestedManyWithoutCateringRequestInput
    fileUploads?: FileUploadCreateNestedManyWithoutCateringRequestInput
  }

  export type CateringRequestUncheckedCreateWithoutDeliveryAddressInput = {
    id?: string
    guid?: string | null
    userId: string
    pickupAddressId: string
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchUncheckedCreateNestedManyWithoutCateringRequestInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutCateringRequestInput
  }

  export type CateringRequestCreateOrConnectWithoutDeliveryAddressInput = {
    where: CateringRequestWhereUniqueInput
    create: XOR<CateringRequestCreateWithoutDeliveryAddressInput, CateringRequestUncheckedCreateWithoutDeliveryAddressInput>
  }

  export type CateringRequestCreateManyDeliveryAddressInputEnvelope = {
    data: CateringRequestCreateManyDeliveryAddressInput | CateringRequestCreateManyDeliveryAddressInput[]
    skipDuplicates?: boolean
  }

  export type CateringRequestCreateWithoutPickupAddressInput = {
    id?: string
    guid?: string | null
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    deliveryAddress: AddressCreateNestedOneWithoutCateringDeliveryRequestsInput
    user: ProfileCreateNestedOneWithoutCateringRequestsInput
    dispatches?: DispatchCreateNestedManyWithoutCateringRequestInput
    fileUploads?: FileUploadCreateNestedManyWithoutCateringRequestInput
  }

  export type CateringRequestUncheckedCreateWithoutPickupAddressInput = {
    id?: string
    guid?: string | null
    userId: string
    deliveryAddressId: string
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchUncheckedCreateNestedManyWithoutCateringRequestInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutCateringRequestInput
  }

  export type CateringRequestCreateOrConnectWithoutPickupAddressInput = {
    where: CateringRequestWhereUniqueInput
    create: XOR<CateringRequestCreateWithoutPickupAddressInput, CateringRequestUncheckedCreateWithoutPickupAddressInput>
  }

  export type CateringRequestCreateManyPickupAddressInputEnvelope = {
    data: CateringRequestCreateManyPickupAddressInput | CateringRequestCreateManyPickupAddressInput[]
    skipDuplicates?: boolean
  }

  export type OnDemandCreateWithoutDeliveryAddressInput = {
    id?: string
    guid?: string | null
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchCreateNestedManyWithoutOnDemandInput
    fileUploads?: FileUploadCreateNestedManyWithoutOnDemandInput
    pickupAddress: AddressCreateNestedOneWithoutOnDemandPickupRequestsInput
    user: ProfileCreateNestedOneWithoutOnDemandRequestsInput
  }

  export type OnDemandUncheckedCreateWithoutDeliveryAddressInput = {
    id?: string
    guid?: string | null
    userId: string
    pickupAddressId: string
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchUncheckedCreateNestedManyWithoutOnDemandInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutOnDemandInput
  }

  export type OnDemandCreateOrConnectWithoutDeliveryAddressInput = {
    where: OnDemandWhereUniqueInput
    create: XOR<OnDemandCreateWithoutDeliveryAddressInput, OnDemandUncheckedCreateWithoutDeliveryAddressInput>
  }

  export type OnDemandCreateManyDeliveryAddressInputEnvelope = {
    data: OnDemandCreateManyDeliveryAddressInput | OnDemandCreateManyDeliveryAddressInput[]
    skipDuplicates?: boolean
  }

  export type OnDemandCreateWithoutPickupAddressInput = {
    id?: string
    guid?: string | null
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchCreateNestedManyWithoutOnDemandInput
    fileUploads?: FileUploadCreateNestedManyWithoutOnDemandInput
    deliveryAddress: AddressCreateNestedOneWithoutOnDemandDeliveryRequestsInput
    user: ProfileCreateNestedOneWithoutOnDemandRequestsInput
  }

  export type OnDemandUncheckedCreateWithoutPickupAddressInput = {
    id?: string
    guid?: string | null
    userId: string
    deliveryAddressId: string
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchUncheckedCreateNestedManyWithoutOnDemandInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutOnDemandInput
  }

  export type OnDemandCreateOrConnectWithoutPickupAddressInput = {
    where: OnDemandWhereUniqueInput
    create: XOR<OnDemandCreateWithoutPickupAddressInput, OnDemandUncheckedCreateWithoutPickupAddressInput>
  }

  export type OnDemandCreateManyPickupAddressInputEnvelope = {
    data: OnDemandCreateManyPickupAddressInput | OnDemandCreateManyPickupAddressInput[]
    skipDuplicates?: boolean
  }

  export type UserAddressCreateWithoutAddressInput = {
    id?: string
    alias?: string | null
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
    user: ProfileCreateNestedOneWithoutUserAddressesInput
  }

  export type UserAddressUncheckedCreateWithoutAddressInput = {
    id?: string
    userId: string
    alias?: string | null
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type UserAddressCreateOrConnectWithoutAddressInput = {
    where: UserAddressWhereUniqueInput
    create: XOR<UserAddressCreateWithoutAddressInput, UserAddressUncheckedCreateWithoutAddressInput>
  }

  export type UserAddressCreateManyAddressInputEnvelope = {
    data: UserAddressCreateManyAddressInput | UserAddressCreateManyAddressInput[]
    skipDuplicates?: boolean
  }

  export type ProfileUpsertWithoutCreatedAddressesInput = {
    update: XOR<ProfileUpdateWithoutCreatedAddressesInput, ProfileUncheckedUpdateWithoutCreatedAddressesInput>
    create: XOR<ProfileCreateWithoutCreatedAddressesInput, ProfileUncheckedCreateWithoutCreatedAddressesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutCreatedAddressesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutCreatedAddressesInput, ProfileUncheckedUpdateWithoutCreatedAddressesInput>
  }

  export type ProfileUpdateWithoutCreatedAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    cateringRequests?: CateringRequestUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutCreatedAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    cateringRequests?: CateringRequestUncheckedUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUncheckedUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUncheckedUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CateringRequestUpsertWithWhereUniqueWithoutDeliveryAddressInput = {
    where: CateringRequestWhereUniqueInput
    update: XOR<CateringRequestUpdateWithoutDeliveryAddressInput, CateringRequestUncheckedUpdateWithoutDeliveryAddressInput>
    create: XOR<CateringRequestCreateWithoutDeliveryAddressInput, CateringRequestUncheckedCreateWithoutDeliveryAddressInput>
  }

  export type CateringRequestUpdateWithWhereUniqueWithoutDeliveryAddressInput = {
    where: CateringRequestWhereUniqueInput
    data: XOR<CateringRequestUpdateWithoutDeliveryAddressInput, CateringRequestUncheckedUpdateWithoutDeliveryAddressInput>
  }

  export type CateringRequestUpdateManyWithWhereWithoutDeliveryAddressInput = {
    where: CateringRequestScalarWhereInput
    data: XOR<CateringRequestUpdateManyMutationInput, CateringRequestUncheckedUpdateManyWithoutDeliveryAddressInput>
  }

  export type CateringRequestUpsertWithWhereUniqueWithoutPickupAddressInput = {
    where: CateringRequestWhereUniqueInput
    update: XOR<CateringRequestUpdateWithoutPickupAddressInput, CateringRequestUncheckedUpdateWithoutPickupAddressInput>
    create: XOR<CateringRequestCreateWithoutPickupAddressInput, CateringRequestUncheckedCreateWithoutPickupAddressInput>
  }

  export type CateringRequestUpdateWithWhereUniqueWithoutPickupAddressInput = {
    where: CateringRequestWhereUniqueInput
    data: XOR<CateringRequestUpdateWithoutPickupAddressInput, CateringRequestUncheckedUpdateWithoutPickupAddressInput>
  }

  export type CateringRequestUpdateManyWithWhereWithoutPickupAddressInput = {
    where: CateringRequestScalarWhereInput
    data: XOR<CateringRequestUpdateManyMutationInput, CateringRequestUncheckedUpdateManyWithoutPickupAddressInput>
  }

  export type OnDemandUpsertWithWhereUniqueWithoutDeliveryAddressInput = {
    where: OnDemandWhereUniqueInput
    update: XOR<OnDemandUpdateWithoutDeliveryAddressInput, OnDemandUncheckedUpdateWithoutDeliveryAddressInput>
    create: XOR<OnDemandCreateWithoutDeliveryAddressInput, OnDemandUncheckedCreateWithoutDeliveryAddressInput>
  }

  export type OnDemandUpdateWithWhereUniqueWithoutDeliveryAddressInput = {
    where: OnDemandWhereUniqueInput
    data: XOR<OnDemandUpdateWithoutDeliveryAddressInput, OnDemandUncheckedUpdateWithoutDeliveryAddressInput>
  }

  export type OnDemandUpdateManyWithWhereWithoutDeliveryAddressInput = {
    where: OnDemandScalarWhereInput
    data: XOR<OnDemandUpdateManyMutationInput, OnDemandUncheckedUpdateManyWithoutDeliveryAddressInput>
  }

  export type OnDemandUpsertWithWhereUniqueWithoutPickupAddressInput = {
    where: OnDemandWhereUniqueInput
    update: XOR<OnDemandUpdateWithoutPickupAddressInput, OnDemandUncheckedUpdateWithoutPickupAddressInput>
    create: XOR<OnDemandCreateWithoutPickupAddressInput, OnDemandUncheckedCreateWithoutPickupAddressInput>
  }

  export type OnDemandUpdateWithWhereUniqueWithoutPickupAddressInput = {
    where: OnDemandWhereUniqueInput
    data: XOR<OnDemandUpdateWithoutPickupAddressInput, OnDemandUncheckedUpdateWithoutPickupAddressInput>
  }

  export type OnDemandUpdateManyWithWhereWithoutPickupAddressInput = {
    where: OnDemandScalarWhereInput
    data: XOR<OnDemandUpdateManyMutationInput, OnDemandUncheckedUpdateManyWithoutPickupAddressInput>
  }

  export type UserAddressUpsertWithWhereUniqueWithoutAddressInput = {
    where: UserAddressWhereUniqueInput
    update: XOR<UserAddressUpdateWithoutAddressInput, UserAddressUncheckedUpdateWithoutAddressInput>
    create: XOR<UserAddressCreateWithoutAddressInput, UserAddressUncheckedCreateWithoutAddressInput>
  }

  export type UserAddressUpdateWithWhereUniqueWithoutAddressInput = {
    where: UserAddressWhereUniqueInput
    data: XOR<UserAddressUpdateWithoutAddressInput, UserAddressUncheckedUpdateWithoutAddressInput>
  }

  export type UserAddressUpdateManyWithWhereWithoutAddressInput = {
    where: UserAddressScalarWhereInput
    data: XOR<UserAddressUpdateManyMutationInput, UserAddressUncheckedUpdateManyWithoutAddressInput>
  }

  export type AddressCreateWithoutCateringDeliveryRequestsInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    creator?: ProfileCreateNestedOneWithoutCreatedAddressesInput
    cateringPickupRequests?: CateringRequestCreateNestedManyWithoutPickupAddressInput
    onDemandDeliveryRequests?: OnDemandCreateNestedManyWithoutDeliveryAddressInput
    onDemandPickupRequests?: OnDemandCreateNestedManyWithoutPickupAddressInput
    userAddresses?: UserAddressCreateNestedManyWithoutAddressInput
  }

  export type AddressUncheckedCreateWithoutCateringDeliveryRequestsInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    createdBy?: string | null
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    cateringPickupRequests?: CateringRequestUncheckedCreateNestedManyWithoutPickupAddressInput
    onDemandDeliveryRequests?: OnDemandUncheckedCreateNestedManyWithoutDeliveryAddressInput
    onDemandPickupRequests?: OnDemandUncheckedCreateNestedManyWithoutPickupAddressInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressCreateOrConnectWithoutCateringDeliveryRequestsInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutCateringDeliveryRequestsInput, AddressUncheckedCreateWithoutCateringDeliveryRequestsInput>
  }

  export type AddressCreateWithoutCateringPickupRequestsInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    creator?: ProfileCreateNestedOneWithoutCreatedAddressesInput
    cateringDeliveryRequests?: CateringRequestCreateNestedManyWithoutDeliveryAddressInput
    onDemandDeliveryRequests?: OnDemandCreateNestedManyWithoutDeliveryAddressInput
    onDemandPickupRequests?: OnDemandCreateNestedManyWithoutPickupAddressInput
    userAddresses?: UserAddressCreateNestedManyWithoutAddressInput
  }

  export type AddressUncheckedCreateWithoutCateringPickupRequestsInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    createdBy?: string | null
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    cateringDeliveryRequests?: CateringRequestUncheckedCreateNestedManyWithoutDeliveryAddressInput
    onDemandDeliveryRequests?: OnDemandUncheckedCreateNestedManyWithoutDeliveryAddressInput
    onDemandPickupRequests?: OnDemandUncheckedCreateNestedManyWithoutPickupAddressInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressCreateOrConnectWithoutCateringPickupRequestsInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutCateringPickupRequestsInput, AddressUncheckedCreateWithoutCateringPickupRequestsInput>
  }

  export type ProfileCreateWithoutCateringRequestsInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    createdAddresses?: AddressCreateNestedManyWithoutCreatorInput
    driverDispatches?: DispatchCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutCateringRequestsInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    createdAddresses?: AddressUncheckedCreateNestedManyWithoutCreatorInput
    driverDispatches?: DispatchUncheckedCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchUncheckedCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutCateringRequestsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutCateringRequestsInput, ProfileUncheckedCreateWithoutCateringRequestsInput>
  }

  export type DispatchCreateWithoutCateringRequestInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    driver?: ProfileCreateNestedOneWithoutDriverDispatchesInput
    onDemand?: OnDemandCreateNestedOneWithoutDispatchesInput
    user?: ProfileCreateNestedOneWithoutUserDispatchesInput
  }

  export type DispatchUncheckedCreateWithoutCateringRequestInput = {
    id?: string
    createdAt?: Date | string
    driverId?: string | null
    onDemandId?: string | null
    updatedAt?: Date | string
    userId?: string | null
  }

  export type DispatchCreateOrConnectWithoutCateringRequestInput = {
    where: DispatchWhereUniqueInput
    create: XOR<DispatchCreateWithoutCateringRequestInput, DispatchUncheckedCreateWithoutCateringRequestInput>
  }

  export type DispatchCreateManyCateringRequestInputEnvelope = {
    data: DispatchCreateManyCateringRequestInput | DispatchCreateManyCateringRequestInput[]
    skipDuplicates?: boolean
  }

  export type FileUploadCreateWithoutCateringRequestInput = {
    id?: string
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    isTemporary?: boolean
    jobApplication?: JobApplicationCreateNestedOneWithoutFileUploadsInput
    onDemand?: OnDemandCreateNestedOneWithoutFileUploadsInput
    user?: ProfileCreateNestedOneWithoutFileUploadsInput
  }

  export type FileUploadUncheckedCreateWithoutCateringRequestInput = {
    id?: string
    userId?: string | null
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    onDemandId?: string | null
    jobApplicationId?: string | null
    category?: string | null
    isTemporary?: boolean
  }

  export type FileUploadCreateOrConnectWithoutCateringRequestInput = {
    where: FileUploadWhereUniqueInput
    create: XOR<FileUploadCreateWithoutCateringRequestInput, FileUploadUncheckedCreateWithoutCateringRequestInput>
  }

  export type FileUploadCreateManyCateringRequestInputEnvelope = {
    data: FileUploadCreateManyCateringRequestInput | FileUploadCreateManyCateringRequestInput[]
    skipDuplicates?: boolean
  }

  export type AddressUpsertWithoutCateringDeliveryRequestsInput = {
    update: XOR<AddressUpdateWithoutCateringDeliveryRequestsInput, AddressUncheckedUpdateWithoutCateringDeliveryRequestsInput>
    create: XOR<AddressCreateWithoutCateringDeliveryRequestsInput, AddressUncheckedCreateWithoutCateringDeliveryRequestsInput>
    where?: AddressWhereInput
  }

  export type AddressUpdateToOneWithWhereWithoutCateringDeliveryRequestsInput = {
    where?: AddressWhereInput
    data: XOR<AddressUpdateWithoutCateringDeliveryRequestsInput, AddressUncheckedUpdateWithoutCateringDeliveryRequestsInput>
  }

  export type AddressUpdateWithoutCateringDeliveryRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creator?: ProfileUpdateOneWithoutCreatedAddressesNestedInput
    cateringPickupRequests?: CateringRequestUpdateManyWithoutPickupAddressNestedInput
    onDemandDeliveryRequests?: OnDemandUpdateManyWithoutDeliveryAddressNestedInput
    onDemandPickupRequests?: OnDemandUpdateManyWithoutPickupAddressNestedInput
    userAddresses?: UserAddressUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateWithoutCateringDeliveryRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cateringPickupRequests?: CateringRequestUncheckedUpdateManyWithoutPickupAddressNestedInput
    onDemandDeliveryRequests?: OnDemandUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    onDemandPickupRequests?: OnDemandUncheckedUpdateManyWithoutPickupAddressNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type AddressUpsertWithoutCateringPickupRequestsInput = {
    update: XOR<AddressUpdateWithoutCateringPickupRequestsInput, AddressUncheckedUpdateWithoutCateringPickupRequestsInput>
    create: XOR<AddressCreateWithoutCateringPickupRequestsInput, AddressUncheckedCreateWithoutCateringPickupRequestsInput>
    where?: AddressWhereInput
  }

  export type AddressUpdateToOneWithWhereWithoutCateringPickupRequestsInput = {
    where?: AddressWhereInput
    data: XOR<AddressUpdateWithoutCateringPickupRequestsInput, AddressUncheckedUpdateWithoutCateringPickupRequestsInput>
  }

  export type AddressUpdateWithoutCateringPickupRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creator?: ProfileUpdateOneWithoutCreatedAddressesNestedInput
    cateringDeliveryRequests?: CateringRequestUpdateManyWithoutDeliveryAddressNestedInput
    onDemandDeliveryRequests?: OnDemandUpdateManyWithoutDeliveryAddressNestedInput
    onDemandPickupRequests?: OnDemandUpdateManyWithoutPickupAddressNestedInput
    userAddresses?: UserAddressUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateWithoutCateringPickupRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cateringDeliveryRequests?: CateringRequestUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    onDemandDeliveryRequests?: OnDemandUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    onDemandPickupRequests?: OnDemandUncheckedUpdateManyWithoutPickupAddressNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type ProfileUpsertWithoutCateringRequestsInput = {
    update: XOR<ProfileUpdateWithoutCateringRequestsInput, ProfileUncheckedUpdateWithoutCateringRequestsInput>
    create: XOR<ProfileCreateWithoutCateringRequestsInput, ProfileUncheckedCreateWithoutCateringRequestsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutCateringRequestsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutCateringRequestsInput, ProfileUncheckedUpdateWithoutCateringRequestsInput>
  }

  export type ProfileUpdateWithoutCateringRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUpdateManyWithoutCreatorNestedInput
    driverDispatches?: DispatchUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutCateringRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUncheckedUpdateManyWithoutCreatorNestedInput
    driverDispatches?: DispatchUncheckedUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUncheckedUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
  }

  export type DispatchUpsertWithWhereUniqueWithoutCateringRequestInput = {
    where: DispatchWhereUniqueInput
    update: XOR<DispatchUpdateWithoutCateringRequestInput, DispatchUncheckedUpdateWithoutCateringRequestInput>
    create: XOR<DispatchCreateWithoutCateringRequestInput, DispatchUncheckedCreateWithoutCateringRequestInput>
  }

  export type DispatchUpdateWithWhereUniqueWithoutCateringRequestInput = {
    where: DispatchWhereUniqueInput
    data: XOR<DispatchUpdateWithoutCateringRequestInput, DispatchUncheckedUpdateWithoutCateringRequestInput>
  }

  export type DispatchUpdateManyWithWhereWithoutCateringRequestInput = {
    where: DispatchScalarWhereInput
    data: XOR<DispatchUpdateManyMutationInput, DispatchUncheckedUpdateManyWithoutCateringRequestInput>
  }

  export type FileUploadUpsertWithWhereUniqueWithoutCateringRequestInput = {
    where: FileUploadWhereUniqueInput
    update: XOR<FileUploadUpdateWithoutCateringRequestInput, FileUploadUncheckedUpdateWithoutCateringRequestInput>
    create: XOR<FileUploadCreateWithoutCateringRequestInput, FileUploadUncheckedCreateWithoutCateringRequestInput>
  }

  export type FileUploadUpdateWithWhereUniqueWithoutCateringRequestInput = {
    where: FileUploadWhereUniqueInput
    data: XOR<FileUploadUpdateWithoutCateringRequestInput, FileUploadUncheckedUpdateWithoutCateringRequestInput>
  }

  export type FileUploadUpdateManyWithWhereWithoutCateringRequestInput = {
    where: FileUploadScalarWhereInput
    data: XOR<FileUploadUpdateManyMutationInput, FileUploadUncheckedUpdateManyWithoutCateringRequestInput>
  }

  export type CateringRequestCreateWithoutDispatchesInput = {
    id?: string
    guid?: string | null
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    deliveryAddress: AddressCreateNestedOneWithoutCateringDeliveryRequestsInput
    pickupAddress: AddressCreateNestedOneWithoutCateringPickupRequestsInput
    user: ProfileCreateNestedOneWithoutCateringRequestsInput
    fileUploads?: FileUploadCreateNestedManyWithoutCateringRequestInput
  }

  export type CateringRequestUncheckedCreateWithoutDispatchesInput = {
    id?: string
    guid?: string | null
    userId: string
    pickupAddressId: string
    deliveryAddressId: string
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutCateringRequestInput
  }

  export type CateringRequestCreateOrConnectWithoutDispatchesInput = {
    where: CateringRequestWhereUniqueInput
    create: XOR<CateringRequestCreateWithoutDispatchesInput, CateringRequestUncheckedCreateWithoutDispatchesInput>
  }

  export type ProfileCreateWithoutDriverDispatchesInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    createdAddresses?: AddressCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestCreateNestedManyWithoutUserInput
    userDispatches?: DispatchCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutDriverDispatchesInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    createdAddresses?: AddressUncheckedCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestUncheckedCreateNestedManyWithoutUserInput
    userDispatches?: DispatchUncheckedCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutDriverDispatchesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutDriverDispatchesInput, ProfileUncheckedCreateWithoutDriverDispatchesInput>
  }

  export type OnDemandCreateWithoutDispatchesInput = {
    id?: string
    guid?: string | null
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    fileUploads?: FileUploadCreateNestedManyWithoutOnDemandInput
    deliveryAddress: AddressCreateNestedOneWithoutOnDemandDeliveryRequestsInput
    pickupAddress: AddressCreateNestedOneWithoutOnDemandPickupRequestsInput
    user: ProfileCreateNestedOneWithoutOnDemandRequestsInput
  }

  export type OnDemandUncheckedCreateWithoutDispatchesInput = {
    id?: string
    guid?: string | null
    userId: string
    pickupAddressId: string
    deliveryAddressId: string
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutOnDemandInput
  }

  export type OnDemandCreateOrConnectWithoutDispatchesInput = {
    where: OnDemandWhereUniqueInput
    create: XOR<OnDemandCreateWithoutDispatchesInput, OnDemandUncheckedCreateWithoutDispatchesInput>
  }

  export type ProfileCreateWithoutUserDispatchesInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    createdAddresses?: AddressCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchCreateNestedManyWithoutDriverInput
    fileUploads?: FileUploadCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutUserDispatchesInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    createdAddresses?: AddressUncheckedCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestUncheckedCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchUncheckedCreateNestedManyWithoutDriverInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutUserDispatchesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutUserDispatchesInput, ProfileUncheckedCreateWithoutUserDispatchesInput>
  }

  export type CateringRequestUpsertWithoutDispatchesInput = {
    update: XOR<CateringRequestUpdateWithoutDispatchesInput, CateringRequestUncheckedUpdateWithoutDispatchesInput>
    create: XOR<CateringRequestCreateWithoutDispatchesInput, CateringRequestUncheckedCreateWithoutDispatchesInput>
    where?: CateringRequestWhereInput
  }

  export type CateringRequestUpdateToOneWithWhereWithoutDispatchesInput = {
    where?: CateringRequestWhereInput
    data: XOR<CateringRequestUpdateWithoutDispatchesInput, CateringRequestUncheckedUpdateWithoutDispatchesInput>
  }

  export type CateringRequestUpdateWithoutDispatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: AddressUpdateOneRequiredWithoutCateringDeliveryRequestsNestedInput
    pickupAddress?: AddressUpdateOneRequiredWithoutCateringPickupRequestsNestedInput
    user?: ProfileUpdateOneRequiredWithoutCateringRequestsNestedInput
    fileUploads?: FileUploadUpdateManyWithoutCateringRequestNestedInput
  }

  export type CateringRequestUncheckedUpdateWithoutDispatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fileUploads?: FileUploadUncheckedUpdateManyWithoutCateringRequestNestedInput
  }

  export type ProfileUpsertWithoutDriverDispatchesInput = {
    update: XOR<ProfileUpdateWithoutDriverDispatchesInput, ProfileUncheckedUpdateWithoutDriverDispatchesInput>
    create: XOR<ProfileCreateWithoutDriverDispatchesInput, ProfileUncheckedCreateWithoutDriverDispatchesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutDriverDispatchesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutDriverDispatchesInput, ProfileUncheckedUpdateWithoutDriverDispatchesInput>
  }

  export type ProfileUpdateWithoutDriverDispatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUpdateManyWithoutUserNestedInput
    userDispatches?: DispatchUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutDriverDispatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUncheckedUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUncheckedUpdateManyWithoutUserNestedInput
    userDispatches?: DispatchUncheckedUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
  }

  export type OnDemandUpsertWithoutDispatchesInput = {
    update: XOR<OnDemandUpdateWithoutDispatchesInput, OnDemandUncheckedUpdateWithoutDispatchesInput>
    create: XOR<OnDemandCreateWithoutDispatchesInput, OnDemandUncheckedCreateWithoutDispatchesInput>
    where?: OnDemandWhereInput
  }

  export type OnDemandUpdateToOneWithWhereWithoutDispatchesInput = {
    where?: OnDemandWhereInput
    data: XOR<OnDemandUpdateWithoutDispatchesInput, OnDemandUncheckedUpdateWithoutDispatchesInput>
  }

  export type OnDemandUpdateWithoutDispatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fileUploads?: FileUploadUpdateManyWithoutOnDemandNestedInput
    deliveryAddress?: AddressUpdateOneRequiredWithoutOnDemandDeliveryRequestsNestedInput
    pickupAddress?: AddressUpdateOneRequiredWithoutOnDemandPickupRequestsNestedInput
    user?: ProfileUpdateOneRequiredWithoutOnDemandRequestsNestedInput
  }

  export type OnDemandUncheckedUpdateWithoutDispatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fileUploads?: FileUploadUncheckedUpdateManyWithoutOnDemandNestedInput
  }

  export type ProfileUpsertWithoutUserDispatchesInput = {
    update: XOR<ProfileUpdateWithoutUserDispatchesInput, ProfileUncheckedUpdateWithoutUserDispatchesInput>
    create: XOR<ProfileCreateWithoutUserDispatchesInput, ProfileUncheckedCreateWithoutUserDispatchesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutUserDispatchesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutUserDispatchesInput, ProfileUncheckedUpdateWithoutUserDispatchesInput>
  }

  export type ProfileUpdateWithoutUserDispatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUpdateManyWithoutDriverNestedInput
    fileUploads?: FileUploadUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutUserDispatchesInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUncheckedUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUncheckedUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUncheckedUpdateManyWithoutDriverNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CateringRequestCreateWithoutFileUploadsInput = {
    id?: string
    guid?: string | null
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    deliveryAddress: AddressCreateNestedOneWithoutCateringDeliveryRequestsInput
    pickupAddress: AddressCreateNestedOneWithoutCateringPickupRequestsInput
    user: ProfileCreateNestedOneWithoutCateringRequestsInput
    dispatches?: DispatchCreateNestedManyWithoutCateringRequestInput
  }

  export type CateringRequestUncheckedCreateWithoutFileUploadsInput = {
    id?: string
    guid?: string | null
    userId: string
    pickupAddressId: string
    deliveryAddressId: string
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchUncheckedCreateNestedManyWithoutCateringRequestInput
  }

  export type CateringRequestCreateOrConnectWithoutFileUploadsInput = {
    where: CateringRequestWhereUniqueInput
    create: XOR<CateringRequestCreateWithoutFileUploadsInput, CateringRequestUncheckedCreateWithoutFileUploadsInput>
  }

  export type JobApplicationCreateWithoutFileUploadsInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    position: string
    addressStreet: string
    addressCity: string
    addressState: string
    addressZip: string
    education?: string | null
    workExperience?: string | null
    skills?: string | null
    coverLetter?: string | null
    resumeFilePath?: string | null
    driversLicenseFilePath?: string | null
    insuranceFilePath?: string | null
    vehicleRegFilePath?: string | null
    foodHandlerFilePath?: string | null
    hipaaFilePath?: string | null
    driverPhotoFilePath?: string | null
    carPhotoFilePath?: string | null
    equipmentPhotoFilePath?: string | null
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
    profile?: ProfileCreateNestedOneWithoutJobApplicationsInput
  }

  export type JobApplicationUncheckedCreateWithoutFileUploadsInput = {
    id?: string
    profileId?: string | null
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    position: string
    addressStreet: string
    addressCity: string
    addressState: string
    addressZip: string
    education?: string | null
    workExperience?: string | null
    skills?: string | null
    coverLetter?: string | null
    resumeFilePath?: string | null
    driversLicenseFilePath?: string | null
    insuranceFilePath?: string | null
    vehicleRegFilePath?: string | null
    foodHandlerFilePath?: string | null
    hipaaFilePath?: string | null
    driverPhotoFilePath?: string | null
    carPhotoFilePath?: string | null
    equipmentPhotoFilePath?: string | null
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type JobApplicationCreateOrConnectWithoutFileUploadsInput = {
    where: JobApplicationWhereUniqueInput
    create: XOR<JobApplicationCreateWithoutFileUploadsInput, JobApplicationUncheckedCreateWithoutFileUploadsInput>
  }

  export type OnDemandCreateWithoutFileUploadsInput = {
    id?: string
    guid?: string | null
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchCreateNestedManyWithoutOnDemandInput
    deliveryAddress: AddressCreateNestedOneWithoutOnDemandDeliveryRequestsInput
    pickupAddress: AddressCreateNestedOneWithoutOnDemandPickupRequestsInput
    user: ProfileCreateNestedOneWithoutOnDemandRequestsInput
  }

  export type OnDemandUncheckedCreateWithoutFileUploadsInput = {
    id?: string
    guid?: string | null
    userId: string
    pickupAddressId: string
    deliveryAddressId: string
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
    dispatches?: DispatchUncheckedCreateNestedManyWithoutOnDemandInput
  }

  export type OnDemandCreateOrConnectWithoutFileUploadsInput = {
    where: OnDemandWhereUniqueInput
    create: XOR<OnDemandCreateWithoutFileUploadsInput, OnDemandUncheckedCreateWithoutFileUploadsInput>
  }

  export type ProfileCreateWithoutFileUploadsInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    createdAddresses?: AddressCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutFileUploadsInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    createdAddresses?: AddressUncheckedCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestUncheckedCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchUncheckedCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchUncheckedCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutFileUploadsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutFileUploadsInput, ProfileUncheckedCreateWithoutFileUploadsInput>
  }

  export type CateringRequestUpsertWithoutFileUploadsInput = {
    update: XOR<CateringRequestUpdateWithoutFileUploadsInput, CateringRequestUncheckedUpdateWithoutFileUploadsInput>
    create: XOR<CateringRequestCreateWithoutFileUploadsInput, CateringRequestUncheckedCreateWithoutFileUploadsInput>
    where?: CateringRequestWhereInput
  }

  export type CateringRequestUpdateToOneWithWhereWithoutFileUploadsInput = {
    where?: CateringRequestWhereInput
    data: XOR<CateringRequestUpdateWithoutFileUploadsInput, CateringRequestUncheckedUpdateWithoutFileUploadsInput>
  }

  export type CateringRequestUpdateWithoutFileUploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: AddressUpdateOneRequiredWithoutCateringDeliveryRequestsNestedInput
    pickupAddress?: AddressUpdateOneRequiredWithoutCateringPickupRequestsNestedInput
    user?: ProfileUpdateOneRequiredWithoutCateringRequestsNestedInput
    dispatches?: DispatchUpdateManyWithoutCateringRequestNestedInput
  }

  export type CateringRequestUncheckedUpdateWithoutFileUploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUncheckedUpdateManyWithoutCateringRequestNestedInput
  }

  export type JobApplicationUpsertWithoutFileUploadsInput = {
    update: XOR<JobApplicationUpdateWithoutFileUploadsInput, JobApplicationUncheckedUpdateWithoutFileUploadsInput>
    create: XOR<JobApplicationCreateWithoutFileUploadsInput, JobApplicationUncheckedCreateWithoutFileUploadsInput>
    where?: JobApplicationWhereInput
  }

  export type JobApplicationUpdateToOneWithWhereWithoutFileUploadsInput = {
    where?: JobApplicationWhereInput
    data: XOR<JobApplicationUpdateWithoutFileUploadsInput, JobApplicationUncheckedUpdateWithoutFileUploadsInput>
  }

  export type JobApplicationUpdateWithoutFileUploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    position?: StringFieldUpdateOperationsInput | string
    addressStreet?: StringFieldUpdateOperationsInput | string
    addressCity?: StringFieldUpdateOperationsInput | string
    addressState?: StringFieldUpdateOperationsInput | string
    addressZip?: StringFieldUpdateOperationsInput | string
    education?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    resumeFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driversLicenseFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleRegFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    foodHandlerFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    hipaaFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driverPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    carPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    profile?: ProfileUpdateOneWithoutJobApplicationsNestedInput
  }

  export type JobApplicationUncheckedUpdateWithoutFileUploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    profileId?: NullableStringFieldUpdateOperationsInput | string | null
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    position?: StringFieldUpdateOperationsInput | string
    addressStreet?: StringFieldUpdateOperationsInput | string
    addressCity?: StringFieldUpdateOperationsInput | string
    addressState?: StringFieldUpdateOperationsInput | string
    addressZip?: StringFieldUpdateOperationsInput | string
    education?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    resumeFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driversLicenseFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleRegFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    foodHandlerFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    hipaaFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driverPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    carPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OnDemandUpsertWithoutFileUploadsInput = {
    update: XOR<OnDemandUpdateWithoutFileUploadsInput, OnDemandUncheckedUpdateWithoutFileUploadsInput>
    create: XOR<OnDemandCreateWithoutFileUploadsInput, OnDemandUncheckedCreateWithoutFileUploadsInput>
    where?: OnDemandWhereInput
  }

  export type OnDemandUpdateToOneWithWhereWithoutFileUploadsInput = {
    where?: OnDemandWhereInput
    data: XOR<OnDemandUpdateWithoutFileUploadsInput, OnDemandUncheckedUpdateWithoutFileUploadsInput>
  }

  export type OnDemandUpdateWithoutFileUploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUpdateManyWithoutOnDemandNestedInput
    deliveryAddress?: AddressUpdateOneRequiredWithoutOnDemandDeliveryRequestsNestedInput
    pickupAddress?: AddressUpdateOneRequiredWithoutOnDemandPickupRequestsNestedInput
    user?: ProfileUpdateOneRequiredWithoutOnDemandRequestsNestedInput
  }

  export type OnDemandUncheckedUpdateWithoutFileUploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUncheckedUpdateManyWithoutOnDemandNestedInput
  }

  export type ProfileUpsertWithoutFileUploadsInput = {
    update: XOR<ProfileUpdateWithoutFileUploadsInput, ProfileUncheckedUpdateWithoutFileUploadsInput>
    create: XOR<ProfileCreateWithoutFileUploadsInput, ProfileUncheckedCreateWithoutFileUploadsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutFileUploadsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutFileUploadsInput, ProfileUncheckedUpdateWithoutFileUploadsInput>
  }

  export type ProfileUpdateWithoutFileUploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutFileUploadsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUncheckedUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUncheckedUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUncheckedUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUncheckedUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
  }

  export type DispatchCreateWithoutOnDemandInput = {
    id?: string
    createdAt?: Date | string
    updatedAt?: Date | string
    cateringRequest?: CateringRequestCreateNestedOneWithoutDispatchesInput
    driver?: ProfileCreateNestedOneWithoutDriverDispatchesInput
    user?: ProfileCreateNestedOneWithoutUserDispatchesInput
  }

  export type DispatchUncheckedCreateWithoutOnDemandInput = {
    id?: string
    cateringRequestId?: string | null
    createdAt?: Date | string
    driverId?: string | null
    updatedAt?: Date | string
    userId?: string | null
  }

  export type DispatchCreateOrConnectWithoutOnDemandInput = {
    where: DispatchWhereUniqueInput
    create: XOR<DispatchCreateWithoutOnDemandInput, DispatchUncheckedCreateWithoutOnDemandInput>
  }

  export type DispatchCreateManyOnDemandInputEnvelope = {
    data: DispatchCreateManyOnDemandInput | DispatchCreateManyOnDemandInput[]
    skipDuplicates?: boolean
  }

  export type FileUploadCreateWithoutOnDemandInput = {
    id?: string
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    isTemporary?: boolean
    cateringRequest?: CateringRequestCreateNestedOneWithoutFileUploadsInput
    jobApplication?: JobApplicationCreateNestedOneWithoutFileUploadsInput
    user?: ProfileCreateNestedOneWithoutFileUploadsInput
  }

  export type FileUploadUncheckedCreateWithoutOnDemandInput = {
    id?: string
    userId?: string | null
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    cateringRequestId?: string | null
    jobApplicationId?: string | null
    category?: string | null
    isTemporary?: boolean
  }

  export type FileUploadCreateOrConnectWithoutOnDemandInput = {
    where: FileUploadWhereUniqueInput
    create: XOR<FileUploadCreateWithoutOnDemandInput, FileUploadUncheckedCreateWithoutOnDemandInput>
  }

  export type FileUploadCreateManyOnDemandInputEnvelope = {
    data: FileUploadCreateManyOnDemandInput | FileUploadCreateManyOnDemandInput[]
    skipDuplicates?: boolean
  }

  export type AddressCreateWithoutOnDemandDeliveryRequestsInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    creator?: ProfileCreateNestedOneWithoutCreatedAddressesInput
    cateringDeliveryRequests?: CateringRequestCreateNestedManyWithoutDeliveryAddressInput
    cateringPickupRequests?: CateringRequestCreateNestedManyWithoutPickupAddressInput
    onDemandPickupRequests?: OnDemandCreateNestedManyWithoutPickupAddressInput
    userAddresses?: UserAddressCreateNestedManyWithoutAddressInput
  }

  export type AddressUncheckedCreateWithoutOnDemandDeliveryRequestsInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    createdBy?: string | null
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    cateringDeliveryRequests?: CateringRequestUncheckedCreateNestedManyWithoutDeliveryAddressInput
    cateringPickupRequests?: CateringRequestUncheckedCreateNestedManyWithoutPickupAddressInput
    onDemandPickupRequests?: OnDemandUncheckedCreateNestedManyWithoutPickupAddressInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressCreateOrConnectWithoutOnDemandDeliveryRequestsInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutOnDemandDeliveryRequestsInput, AddressUncheckedCreateWithoutOnDemandDeliveryRequestsInput>
  }

  export type AddressCreateWithoutOnDemandPickupRequestsInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    creator?: ProfileCreateNestedOneWithoutCreatedAddressesInput
    cateringDeliveryRequests?: CateringRequestCreateNestedManyWithoutDeliveryAddressInput
    cateringPickupRequests?: CateringRequestCreateNestedManyWithoutPickupAddressInput
    onDemandDeliveryRequests?: OnDemandCreateNestedManyWithoutDeliveryAddressInput
    userAddresses?: UserAddressCreateNestedManyWithoutAddressInput
  }

  export type AddressUncheckedCreateWithoutOnDemandPickupRequestsInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    createdBy?: string | null
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    cateringDeliveryRequests?: CateringRequestUncheckedCreateNestedManyWithoutDeliveryAddressInput
    cateringPickupRequests?: CateringRequestUncheckedCreateNestedManyWithoutPickupAddressInput
    onDemandDeliveryRequests?: OnDemandUncheckedCreateNestedManyWithoutDeliveryAddressInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutAddressInput
  }

  export type AddressCreateOrConnectWithoutOnDemandPickupRequestsInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutOnDemandPickupRequestsInput, AddressUncheckedCreateWithoutOnDemandPickupRequestsInput>
  }

  export type ProfileCreateWithoutOnDemandRequestsInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    createdAddresses?: AddressCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationCreateNestedManyWithoutProfileInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutOnDemandRequestsInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    createdAddresses?: AddressUncheckedCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestUncheckedCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchUncheckedCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchUncheckedCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutProfileInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutOnDemandRequestsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutOnDemandRequestsInput, ProfileUncheckedCreateWithoutOnDemandRequestsInput>
  }

  export type DispatchUpsertWithWhereUniqueWithoutOnDemandInput = {
    where: DispatchWhereUniqueInput
    update: XOR<DispatchUpdateWithoutOnDemandInput, DispatchUncheckedUpdateWithoutOnDemandInput>
    create: XOR<DispatchCreateWithoutOnDemandInput, DispatchUncheckedCreateWithoutOnDemandInput>
  }

  export type DispatchUpdateWithWhereUniqueWithoutOnDemandInput = {
    where: DispatchWhereUniqueInput
    data: XOR<DispatchUpdateWithoutOnDemandInput, DispatchUncheckedUpdateWithoutOnDemandInput>
  }

  export type DispatchUpdateManyWithWhereWithoutOnDemandInput = {
    where: DispatchScalarWhereInput
    data: XOR<DispatchUpdateManyMutationInput, DispatchUncheckedUpdateManyWithoutOnDemandInput>
  }

  export type FileUploadUpsertWithWhereUniqueWithoutOnDemandInput = {
    where: FileUploadWhereUniqueInput
    update: XOR<FileUploadUpdateWithoutOnDemandInput, FileUploadUncheckedUpdateWithoutOnDemandInput>
    create: XOR<FileUploadCreateWithoutOnDemandInput, FileUploadUncheckedCreateWithoutOnDemandInput>
  }

  export type FileUploadUpdateWithWhereUniqueWithoutOnDemandInput = {
    where: FileUploadWhereUniqueInput
    data: XOR<FileUploadUpdateWithoutOnDemandInput, FileUploadUncheckedUpdateWithoutOnDemandInput>
  }

  export type FileUploadUpdateManyWithWhereWithoutOnDemandInput = {
    where: FileUploadScalarWhereInput
    data: XOR<FileUploadUpdateManyMutationInput, FileUploadUncheckedUpdateManyWithoutOnDemandInput>
  }

  export type AddressUpsertWithoutOnDemandDeliveryRequestsInput = {
    update: XOR<AddressUpdateWithoutOnDemandDeliveryRequestsInput, AddressUncheckedUpdateWithoutOnDemandDeliveryRequestsInput>
    create: XOR<AddressCreateWithoutOnDemandDeliveryRequestsInput, AddressUncheckedCreateWithoutOnDemandDeliveryRequestsInput>
    where?: AddressWhereInput
  }

  export type AddressUpdateToOneWithWhereWithoutOnDemandDeliveryRequestsInput = {
    where?: AddressWhereInput
    data: XOR<AddressUpdateWithoutOnDemandDeliveryRequestsInput, AddressUncheckedUpdateWithoutOnDemandDeliveryRequestsInput>
  }

  export type AddressUpdateWithoutOnDemandDeliveryRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creator?: ProfileUpdateOneWithoutCreatedAddressesNestedInput
    cateringDeliveryRequests?: CateringRequestUpdateManyWithoutDeliveryAddressNestedInput
    cateringPickupRequests?: CateringRequestUpdateManyWithoutPickupAddressNestedInput
    onDemandPickupRequests?: OnDemandUpdateManyWithoutPickupAddressNestedInput
    userAddresses?: UserAddressUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateWithoutOnDemandDeliveryRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cateringDeliveryRequests?: CateringRequestUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    cateringPickupRequests?: CateringRequestUncheckedUpdateManyWithoutPickupAddressNestedInput
    onDemandPickupRequests?: OnDemandUncheckedUpdateManyWithoutPickupAddressNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type AddressUpsertWithoutOnDemandPickupRequestsInput = {
    update: XOR<AddressUpdateWithoutOnDemandPickupRequestsInput, AddressUncheckedUpdateWithoutOnDemandPickupRequestsInput>
    create: XOR<AddressCreateWithoutOnDemandPickupRequestsInput, AddressUncheckedCreateWithoutOnDemandPickupRequestsInput>
    where?: AddressWhereInput
  }

  export type AddressUpdateToOneWithWhereWithoutOnDemandPickupRequestsInput = {
    where?: AddressWhereInput
    data: XOR<AddressUpdateWithoutOnDemandPickupRequestsInput, AddressUncheckedUpdateWithoutOnDemandPickupRequestsInput>
  }

  export type AddressUpdateWithoutOnDemandPickupRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creator?: ProfileUpdateOneWithoutCreatedAddressesNestedInput
    cateringDeliveryRequests?: CateringRequestUpdateManyWithoutDeliveryAddressNestedInput
    cateringPickupRequests?: CateringRequestUpdateManyWithoutPickupAddressNestedInput
    onDemandDeliveryRequests?: OnDemandUpdateManyWithoutDeliveryAddressNestedInput
    userAddresses?: UserAddressUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateWithoutOnDemandPickupRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cateringDeliveryRequests?: CateringRequestUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    cateringPickupRequests?: CateringRequestUncheckedUpdateManyWithoutPickupAddressNestedInput
    onDemandDeliveryRequests?: OnDemandUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type ProfileUpsertWithoutOnDemandRequestsInput = {
    update: XOR<ProfileUpdateWithoutOnDemandRequestsInput, ProfileUncheckedUpdateWithoutOnDemandRequestsInput>
    create: XOR<ProfileCreateWithoutOnDemandRequestsInput, ProfileUncheckedCreateWithoutOnDemandRequestsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutOnDemandRequestsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutOnDemandRequestsInput, ProfileUncheckedUpdateWithoutOnDemandRequestsInput>
  }

  export type ProfileUpdateWithoutOnDemandRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutProfileNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutOnDemandRequestsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUncheckedUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUncheckedUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUncheckedUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUncheckedUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutProfileNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
  }

  export type AddressCreateWithoutUserAddressesInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    creator?: ProfileCreateNestedOneWithoutCreatedAddressesInput
    cateringDeliveryRequests?: CateringRequestCreateNestedManyWithoutDeliveryAddressInput
    cateringPickupRequests?: CateringRequestCreateNestedManyWithoutPickupAddressInput
    onDemandDeliveryRequests?: OnDemandCreateNestedManyWithoutDeliveryAddressInput
    onDemandPickupRequests?: OnDemandCreateNestedManyWithoutPickupAddressInput
  }

  export type AddressUncheckedCreateWithoutUserAddressesInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    createdBy?: string | null
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
    cateringDeliveryRequests?: CateringRequestUncheckedCreateNestedManyWithoutDeliveryAddressInput
    cateringPickupRequests?: CateringRequestUncheckedCreateNestedManyWithoutPickupAddressInput
    onDemandDeliveryRequests?: OnDemandUncheckedCreateNestedManyWithoutDeliveryAddressInput
    onDemandPickupRequests?: OnDemandUncheckedCreateNestedManyWithoutPickupAddressInput
  }

  export type AddressCreateOrConnectWithoutUserAddressesInput = {
    where: AddressWhereUniqueInput
    create: XOR<AddressCreateWithoutUserAddressesInput, AddressUncheckedCreateWithoutUserAddressesInput>
  }

  export type ProfileCreateWithoutUserAddressesInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    createdAddresses?: AddressCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutUserAddressesInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    createdAddresses?: AddressUncheckedCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestUncheckedCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchUncheckedCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchUncheckedCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutUserInput
    jobApplications?: JobApplicationUncheckedCreateNestedManyWithoutProfileInput
    onDemandRequests?: OnDemandUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutUserAddressesInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutUserAddressesInput, ProfileUncheckedCreateWithoutUserAddressesInput>
  }

  export type AddressUpsertWithoutUserAddressesInput = {
    update: XOR<AddressUpdateWithoutUserAddressesInput, AddressUncheckedUpdateWithoutUserAddressesInput>
    create: XOR<AddressCreateWithoutUserAddressesInput, AddressUncheckedCreateWithoutUserAddressesInput>
    where?: AddressWhereInput
  }

  export type AddressUpdateToOneWithWhereWithoutUserAddressesInput = {
    where?: AddressWhereInput
    data: XOR<AddressUpdateWithoutUserAddressesInput, AddressUncheckedUpdateWithoutUserAddressesInput>
  }

  export type AddressUpdateWithoutUserAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    creator?: ProfileUpdateOneWithoutCreatedAddressesNestedInput
    cateringDeliveryRequests?: CateringRequestUpdateManyWithoutDeliveryAddressNestedInput
    cateringPickupRequests?: CateringRequestUpdateManyWithoutPickupAddressNestedInput
    onDemandDeliveryRequests?: OnDemandUpdateManyWithoutDeliveryAddressNestedInput
    onDemandPickupRequests?: OnDemandUpdateManyWithoutPickupAddressNestedInput
  }

  export type AddressUncheckedUpdateWithoutUserAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdBy?: NullableStringFieldUpdateOperationsInput | string | null
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cateringDeliveryRequests?: CateringRequestUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    cateringPickupRequests?: CateringRequestUncheckedUpdateManyWithoutPickupAddressNestedInput
    onDemandDeliveryRequests?: OnDemandUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    onDemandPickupRequests?: OnDemandUncheckedUpdateManyWithoutPickupAddressNestedInput
  }

  export type ProfileUpsertWithoutUserAddressesInput = {
    update: XOR<ProfileUpdateWithoutUserAddressesInput, ProfileUncheckedUpdateWithoutUserAddressesInput>
    create: XOR<ProfileCreateWithoutUserAddressesInput, ProfileUncheckedCreateWithoutUserAddressesInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutUserAddressesInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutUserAddressesInput, ProfileUncheckedUpdateWithoutUserAddressesInput>
  }

  export type ProfileUpdateWithoutUserAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutUserAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUncheckedUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUncheckedUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUncheckedUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUncheckedUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutUserNestedInput
    jobApplications?: JobApplicationUncheckedUpdateManyWithoutProfileNestedInput
    onDemandRequests?: OnDemandUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
  }

  export type FileUploadCreateWithoutJobApplicationInput = {
    id?: string
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    category?: string | null
    isTemporary?: boolean
    cateringRequest?: CateringRequestCreateNestedOneWithoutFileUploadsInput
    onDemand?: OnDemandCreateNestedOneWithoutFileUploadsInput
    user?: ProfileCreateNestedOneWithoutFileUploadsInput
  }

  export type FileUploadUncheckedCreateWithoutJobApplicationInput = {
    id?: string
    userId?: string | null
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    cateringRequestId?: string | null
    onDemandId?: string | null
    category?: string | null
    isTemporary?: boolean
  }

  export type FileUploadCreateOrConnectWithoutJobApplicationInput = {
    where: FileUploadWhereUniqueInput
    create: XOR<FileUploadCreateWithoutJobApplicationInput, FileUploadUncheckedCreateWithoutJobApplicationInput>
  }

  export type FileUploadCreateManyJobApplicationInputEnvelope = {
    data: FileUploadCreateManyJobApplicationInput | FileUploadCreateManyJobApplicationInput[]
    skipDuplicates?: boolean
  }

  export type ProfileCreateWithoutJobApplicationsInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountCreateNestedManyWithoutUserInput
    createdAddresses?: AddressCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadCreateNestedManyWithoutUserInput
    onDemandRequests?: OnDemandCreateNestedManyWithoutUserInput
    sessions?: SessionCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressCreateNestedManyWithoutUserInput
  }

  export type ProfileUncheckedCreateWithoutJobApplicationsInput = {
    id?: string
    guid?: string | null
    name?: string | null
    email: string
    image?: string | null
    type?: $Enums.UserType
    companyName?: string | null
    contactName?: string | null
    contactNumber?: string | null
    website?: string | null
    street1?: string | null
    street2?: string | null
    city?: string | null
    state?: string | null
    zip?: string | null
    locationNumber?: string | null
    parkingLoading?: string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: string | null
    cateringBrokerage?: string | null
    frequency?: string | null
    provide?: string | null
    headCount?: number | null
    status?: $Enums.UserStatus
    sideNotes?: string | null
    confirmationCode?: string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    isTemporaryPassword?: boolean
    deletedAt?: Date | string | null
    accounts?: AccountUncheckedCreateNestedManyWithoutUserInput
    createdAddresses?: AddressUncheckedCreateNestedManyWithoutCreatorInput
    cateringRequests?: CateringRequestUncheckedCreateNestedManyWithoutUserInput
    driverDispatches?: DispatchUncheckedCreateNestedManyWithoutDriverInput
    userDispatches?: DispatchUncheckedCreateNestedManyWithoutUserInput
    fileUploads?: FileUploadUncheckedCreateNestedManyWithoutUserInput
    onDemandRequests?: OnDemandUncheckedCreateNestedManyWithoutUserInput
    sessions?: SessionUncheckedCreateNestedManyWithoutUserInput
    userAddresses?: UserAddressUncheckedCreateNestedManyWithoutUserInput
  }

  export type ProfileCreateOrConnectWithoutJobApplicationsInput = {
    where: ProfileWhereUniqueInput
    create: XOR<ProfileCreateWithoutJobApplicationsInput, ProfileUncheckedCreateWithoutJobApplicationsInput>
  }

  export type FileUploadUpsertWithWhereUniqueWithoutJobApplicationInput = {
    where: FileUploadWhereUniqueInput
    update: XOR<FileUploadUpdateWithoutJobApplicationInput, FileUploadUncheckedUpdateWithoutJobApplicationInput>
    create: XOR<FileUploadCreateWithoutJobApplicationInput, FileUploadUncheckedCreateWithoutJobApplicationInput>
  }

  export type FileUploadUpdateWithWhereUniqueWithoutJobApplicationInput = {
    where: FileUploadWhereUniqueInput
    data: XOR<FileUploadUpdateWithoutJobApplicationInput, FileUploadUncheckedUpdateWithoutJobApplicationInput>
  }

  export type FileUploadUpdateManyWithWhereWithoutJobApplicationInput = {
    where: FileUploadScalarWhereInput
    data: XOR<FileUploadUpdateManyMutationInput, FileUploadUncheckedUpdateManyWithoutJobApplicationInput>
  }

  export type ProfileUpsertWithoutJobApplicationsInput = {
    update: XOR<ProfileUpdateWithoutJobApplicationsInput, ProfileUncheckedUpdateWithoutJobApplicationsInput>
    create: XOR<ProfileCreateWithoutJobApplicationsInput, ProfileUncheckedCreateWithoutJobApplicationsInput>
    where?: ProfileWhereInput
  }

  export type ProfileUpdateToOneWithWhereWithoutJobApplicationsInput = {
    where?: ProfileWhereInput
    data: XOR<ProfileUpdateWithoutJobApplicationsInput, ProfileUncheckedUpdateWithoutJobApplicationsInput>
  }

  export type ProfileUpdateWithoutJobApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUpdateManyWithoutUserNestedInput
    onDemandRequests?: OnDemandUpdateManyWithoutUserNestedInput
    sessions?: SessionUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUpdateManyWithoutUserNestedInput
  }

  export type ProfileUncheckedUpdateWithoutJobApplicationsInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    type?: EnumUserTypeFieldUpdateOperationsInput | $Enums.UserType
    companyName?: NullableStringFieldUpdateOperationsInput | string | null
    contactName?: NullableStringFieldUpdateOperationsInput | string | null
    contactNumber?: NullableStringFieldUpdateOperationsInput | string | null
    website?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: NullableStringFieldUpdateOperationsInput | string | null
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    zip?: NullableStringFieldUpdateOperationsInput | string | null
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    counties?: NullableJsonNullValueInput | InputJsonValue
    timeNeeded?: NullableStringFieldUpdateOperationsInput | string | null
    cateringBrokerage?: NullableStringFieldUpdateOperationsInput | string | null
    frequency?: NullableStringFieldUpdateOperationsInput | string | null
    provide?: NullableStringFieldUpdateOperationsInput | string | null
    headCount?: NullableIntFieldUpdateOperationsInput | number | null
    status?: EnumUserStatusFieldUpdateOperationsInput | $Enums.UserStatus
    sideNotes?: NullableStringFieldUpdateOperationsInput | string | null
    confirmationCode?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isTemporaryPassword?: BoolFieldUpdateOperationsInput | boolean
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    accounts?: AccountUncheckedUpdateManyWithoutUserNestedInput
    createdAddresses?: AddressUncheckedUpdateManyWithoutCreatorNestedInput
    cateringRequests?: CateringRequestUncheckedUpdateManyWithoutUserNestedInput
    driverDispatches?: DispatchUncheckedUpdateManyWithoutDriverNestedInput
    userDispatches?: DispatchUncheckedUpdateManyWithoutUserNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutUserNestedInput
    onDemandRequests?: OnDemandUncheckedUpdateManyWithoutUserNestedInput
    sessions?: SessionUncheckedUpdateManyWithoutUserNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutUserNestedInput
  }

  export type AccountCreateManyUserInput = {
    id?: string
    type: string
    provider: string
    providerAccountId: string
    refreshToken?: string | null
    accessToken?: string | null
    expiresAt?: number | null
    tokenType?: string | null
    scope?: string | null
    idToken?: string | null
    sessionState?: string | null
  }

  export type AddressCreateManyCreatorInput = {
    id?: string
    county?: string | null
    street1: string
    street2?: string | null
    city: string
    state: string
    zip: string
    createdAt?: Date | string
    isRestaurant?: boolean
    isShared?: boolean
    locationNumber?: string | null
    parkingLoading?: string | null
    updatedAt?: Date | string
    name?: string | null
    latitude?: number | null
    longitude?: number | null
    deletedAt?: Date | string | null
  }

  export type CateringRequestCreateManyUserInput = {
    id?: string
    guid?: string | null
    pickupAddressId: string
    deliveryAddressId: string
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
  }

  export type DispatchCreateManyDriverInput = {
    id?: string
    cateringRequestId?: string | null
    createdAt?: Date | string
    onDemandId?: string | null
    updatedAt?: Date | string
    userId?: string | null
  }

  export type DispatchCreateManyUserInput = {
    id?: string
    cateringRequestId?: string | null
    createdAt?: Date | string
    driverId?: string | null
    onDemandId?: string | null
    updatedAt?: Date | string
  }

  export type FileUploadCreateManyUserInput = {
    id?: string
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    cateringRequestId?: string | null
    onDemandId?: string | null
    jobApplicationId?: string | null
    category?: string | null
    isTemporary?: boolean
  }

  export type JobApplicationCreateManyProfileInput = {
    id?: string
    firstName: string
    lastName: string
    email: string
    phone?: string | null
    position: string
    addressStreet: string
    addressCity: string
    addressState: string
    addressZip: string
    education?: string | null
    workExperience?: string | null
    skills?: string | null
    coverLetter?: string | null
    resumeFilePath?: string | null
    driversLicenseFilePath?: string | null
    insuranceFilePath?: string | null
    vehicleRegFilePath?: string | null
    foodHandlerFilePath?: string | null
    hipaaFilePath?: string | null
    driverPhotoFilePath?: string | null
    carPhotoFilePath?: string | null
    equipmentPhotoFilePath?: string | null
    status?: $Enums.ApplicationStatus
    createdAt?: Date | string
    updatedAt?: Date | string
    deletedAt?: Date | string | null
  }

  export type OnDemandCreateManyUserInput = {
    id?: string
    guid?: string | null
    pickupAddressId: string
    deliveryAddressId: string
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
  }

  export type SessionCreateManyUserInput = {
    id?: string
    sessionToken: string
    expires: Date | string
  }

  export type UserAddressCreateManyUserInput = {
    id?: string
    addressId: string
    alias?: string | null
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type AccountUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableIntFieldUpdateOperationsInput | number | null
    tokenType?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    sessionState?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableIntFieldUpdateOperationsInput | number | null
    tokenType?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    sessionState?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AccountUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    provider?: StringFieldUpdateOperationsInput | string
    providerAccountId?: StringFieldUpdateOperationsInput | string
    refreshToken?: NullableStringFieldUpdateOperationsInput | string | null
    accessToken?: NullableStringFieldUpdateOperationsInput | string | null
    expiresAt?: NullableIntFieldUpdateOperationsInput | number | null
    tokenType?: NullableStringFieldUpdateOperationsInput | string | null
    scope?: NullableStringFieldUpdateOperationsInput | string | null
    idToken?: NullableStringFieldUpdateOperationsInput | string | null
    sessionState?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type AddressUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cateringDeliveryRequests?: CateringRequestUpdateManyWithoutDeliveryAddressNestedInput
    cateringPickupRequests?: CateringRequestUpdateManyWithoutPickupAddressNestedInput
    onDemandDeliveryRequests?: OnDemandUpdateManyWithoutDeliveryAddressNestedInput
    onDemandPickupRequests?: OnDemandUpdateManyWithoutPickupAddressNestedInput
    userAddresses?: UserAddressUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    cateringDeliveryRequests?: CateringRequestUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    cateringPickupRequests?: CateringRequestUncheckedUpdateManyWithoutPickupAddressNestedInput
    onDemandDeliveryRequests?: OnDemandUncheckedUpdateManyWithoutDeliveryAddressNestedInput
    onDemandPickupRequests?: OnDemandUncheckedUpdateManyWithoutPickupAddressNestedInput
    userAddresses?: UserAddressUncheckedUpdateManyWithoutAddressNestedInput
  }

  export type AddressUncheckedUpdateManyWithoutCreatorInput = {
    id?: StringFieldUpdateOperationsInput | string
    county?: NullableStringFieldUpdateOperationsInput | string | null
    street1?: StringFieldUpdateOperationsInput | string
    street2?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    zip?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRestaurant?: BoolFieldUpdateOperationsInput | boolean
    isShared?: BoolFieldUpdateOperationsInput | boolean
    locationNumber?: NullableStringFieldUpdateOperationsInput | string | null
    parkingLoading?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    latitude?: NullableFloatFieldUpdateOperationsInput | number | null
    longitude?: NullableFloatFieldUpdateOperationsInput | number | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CateringRequestUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: AddressUpdateOneRequiredWithoutCateringDeliveryRequestsNestedInput
    pickupAddress?: AddressUpdateOneRequiredWithoutCateringPickupRequestsNestedInput
    dispatches?: DispatchUpdateManyWithoutCateringRequestNestedInput
    fileUploads?: FileUploadUpdateManyWithoutCateringRequestNestedInput
  }

  export type CateringRequestUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUncheckedUpdateManyWithoutCateringRequestNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutCateringRequestNestedInput
  }

  export type CateringRequestUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type DispatchUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateringRequest?: CateringRequestUpdateOneWithoutDispatchesNestedInput
    onDemand?: OnDemandUpdateOneWithoutDispatchesNestedInput
    user?: ProfileUpdateOneWithoutUserDispatchesNestedInput
  }

  export type DispatchUncheckedUpdateWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DispatchUncheckedUpdateManyWithoutDriverInput = {
    id?: StringFieldUpdateOperationsInput | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DispatchUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateringRequest?: CateringRequestUpdateOneWithoutDispatchesNestedInput
    driver?: ProfileUpdateOneWithoutDriverDispatchesNestedInput
    onDemand?: OnDemandUpdateOneWithoutDispatchesNestedInput
  }

  export type DispatchUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DispatchUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FileUploadUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
    cateringRequest?: CateringRequestUpdateOneWithoutFileUploadsNestedInput
    jobApplication?: JobApplicationUpdateOneWithoutFileUploadsNestedInput
    onDemand?: OnDemandUpdateOneWithoutFileUploadsNestedInput
  }

  export type FileUploadUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    jobApplicationId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FileUploadUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    jobApplicationId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
  }

  export type JobApplicationUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    position?: StringFieldUpdateOperationsInput | string
    addressStreet?: StringFieldUpdateOperationsInput | string
    addressCity?: StringFieldUpdateOperationsInput | string
    addressState?: StringFieldUpdateOperationsInput | string
    addressZip?: StringFieldUpdateOperationsInput | string
    education?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    resumeFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driversLicenseFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleRegFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    foodHandlerFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    hipaaFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driverPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    carPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fileUploads?: FileUploadUpdateManyWithoutJobApplicationNestedInput
  }

  export type JobApplicationUncheckedUpdateWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    position?: StringFieldUpdateOperationsInput | string
    addressStreet?: StringFieldUpdateOperationsInput | string
    addressCity?: StringFieldUpdateOperationsInput | string
    addressState?: StringFieldUpdateOperationsInput | string
    addressZip?: StringFieldUpdateOperationsInput | string
    education?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    resumeFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driversLicenseFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleRegFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    foodHandlerFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    hipaaFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driverPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    carPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    fileUploads?: FileUploadUncheckedUpdateManyWithoutJobApplicationNestedInput
  }

  export type JobApplicationUncheckedUpdateManyWithoutProfileInput = {
    id?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    position?: StringFieldUpdateOperationsInput | string
    addressStreet?: StringFieldUpdateOperationsInput | string
    addressCity?: StringFieldUpdateOperationsInput | string
    addressState?: StringFieldUpdateOperationsInput | string
    addressZip?: StringFieldUpdateOperationsInput | string
    education?: NullableStringFieldUpdateOperationsInput | string | null
    workExperience?: NullableStringFieldUpdateOperationsInput | string | null
    skills?: NullableStringFieldUpdateOperationsInput | string | null
    coverLetter?: NullableStringFieldUpdateOperationsInput | string | null
    resumeFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driversLicenseFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    insuranceFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleRegFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    foodHandlerFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    hipaaFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    driverPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    carPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    equipmentPhotoFilePath?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumApplicationStatusFieldUpdateOperationsInput | $Enums.ApplicationStatus
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OnDemandUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUpdateManyWithoutOnDemandNestedInput
    fileUploads?: FileUploadUpdateManyWithoutOnDemandNestedInput
    deliveryAddress?: AddressUpdateOneRequiredWithoutOnDemandDeliveryRequestsNestedInput
    pickupAddress?: AddressUpdateOneRequiredWithoutOnDemandPickupRequestsNestedInput
  }

  export type OnDemandUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUncheckedUpdateManyWithoutOnDemandNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutOnDemandNestedInput
  }

  export type OnDemandUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type SessionUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SessionUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    sessionToken?: StringFieldUpdateOperationsInput | string
    expires?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserAddressUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    address?: AddressUpdateOneRequiredWithoutUserAddressesNestedInput
  }

  export type UserAddressUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserAddressUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CateringRequestCreateManyDeliveryAddressInput = {
    id?: string
    guid?: string | null
    userId: string
    pickupAddressId: string
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
  }

  export type CateringRequestCreateManyPickupAddressInput = {
    id?: string
    guid?: string | null
    userId: string
    deliveryAddressId: string
    brokerage?: string | null
    orderNumber: string
    pickupDateTime?: Date | string | null
    arrivalDateTime?: Date | string | null
    completeDateTime?: Date | string | null
    headcount?: number | null
    needHost?: $Enums.CateringNeedHost
    hoursNeeded?: number | null
    numberOfHosts?: number | null
    clientAttention?: string | null
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.CateringStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
  }

  export type OnDemandCreateManyDeliveryAddressInput = {
    id?: string
    guid?: string | null
    userId: string
    pickupAddressId: string
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
  }

  export type OnDemandCreateManyPickupAddressInput = {
    id?: string
    guid?: string | null
    userId: string
    deliveryAddressId: string
    orderNumber: string
    pickupDateTime: Date | string
    arrivalDateTime: Date | string
    completeDateTime?: Date | string | null
    hoursNeeded?: number | null
    itemDelivered?: string | null
    vehicleType?: $Enums.VehicleType
    clientAttention: string
    pickupNotes?: string | null
    specialNotes?: string | null
    image?: string | null
    status?: $Enums.OnDemandStatus
    orderTotal?: Decimal | DecimalJsLike | number | string | null
    tip?: Decimal | DecimalJsLike | number | string | null
    length?: number | null
    width?: number | null
    height?: number | null
    weight?: number | null
    createdAt?: Date | string
    updatedAt?: Date | string
    driverStatus?: $Enums.DriverStatus | null
    deletedAt?: Date | string | null
  }

  export type UserAddressCreateManyAddressInput = {
    id?: string
    userId: string
    alias?: string | null
    isDefault?: boolean
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type CateringRequestUpdateWithoutDeliveryAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    pickupAddress?: AddressUpdateOneRequiredWithoutCateringPickupRequestsNestedInput
    user?: ProfileUpdateOneRequiredWithoutCateringRequestsNestedInput
    dispatches?: DispatchUpdateManyWithoutCateringRequestNestedInput
    fileUploads?: FileUploadUpdateManyWithoutCateringRequestNestedInput
  }

  export type CateringRequestUncheckedUpdateWithoutDeliveryAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUncheckedUpdateManyWithoutCateringRequestNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutCateringRequestNestedInput
  }

  export type CateringRequestUncheckedUpdateManyWithoutDeliveryAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type CateringRequestUpdateWithoutPickupAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    deliveryAddress?: AddressUpdateOneRequiredWithoutCateringDeliveryRequestsNestedInput
    user?: ProfileUpdateOneRequiredWithoutCateringRequestsNestedInput
    dispatches?: DispatchUpdateManyWithoutCateringRequestNestedInput
    fileUploads?: FileUploadUpdateManyWithoutCateringRequestNestedInput
  }

  export type CateringRequestUncheckedUpdateWithoutPickupAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUncheckedUpdateManyWithoutCateringRequestNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutCateringRequestNestedInput
  }

  export type CateringRequestUncheckedUpdateManyWithoutPickupAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    brokerage?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    arrivalDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    headcount?: NullableIntFieldUpdateOperationsInput | number | null
    needHost?: EnumCateringNeedHostFieldUpdateOperationsInput | $Enums.CateringNeedHost
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    numberOfHosts?: NullableIntFieldUpdateOperationsInput | number | null
    clientAttention?: NullableStringFieldUpdateOperationsInput | string | null
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumCateringStatusFieldUpdateOperationsInput | $Enums.CateringStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OnDemandUpdateWithoutDeliveryAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUpdateManyWithoutOnDemandNestedInput
    fileUploads?: FileUploadUpdateManyWithoutOnDemandNestedInput
    pickupAddress?: AddressUpdateOneRequiredWithoutOnDemandPickupRequestsNestedInput
    user?: ProfileUpdateOneRequiredWithoutOnDemandRequestsNestedInput
  }

  export type OnDemandUncheckedUpdateWithoutDeliveryAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUncheckedUpdateManyWithoutOnDemandNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutOnDemandNestedInput
  }

  export type OnDemandUncheckedUpdateManyWithoutDeliveryAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    pickupAddressId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type OnDemandUpdateWithoutPickupAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUpdateManyWithoutOnDemandNestedInput
    fileUploads?: FileUploadUpdateManyWithoutOnDemandNestedInput
    deliveryAddress?: AddressUpdateOneRequiredWithoutOnDemandDeliveryRequestsNestedInput
    user?: ProfileUpdateOneRequiredWithoutOnDemandRequestsNestedInput
  }

  export type OnDemandUncheckedUpdateWithoutPickupAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    dispatches?: DispatchUncheckedUpdateManyWithoutOnDemandNestedInput
    fileUploads?: FileUploadUncheckedUpdateManyWithoutOnDemandNestedInput
  }

  export type OnDemandUncheckedUpdateManyWithoutPickupAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    guid?: NullableStringFieldUpdateOperationsInput | string | null
    userId?: StringFieldUpdateOperationsInput | string
    deliveryAddressId?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    pickupDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    arrivalDateTime?: DateTimeFieldUpdateOperationsInput | Date | string
    completeDateTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    hoursNeeded?: NullableFloatFieldUpdateOperationsInput | number | null
    itemDelivered?: NullableStringFieldUpdateOperationsInput | string | null
    vehicleType?: EnumVehicleTypeFieldUpdateOperationsInput | $Enums.VehicleType
    clientAttention?: StringFieldUpdateOperationsInput | string
    pickupNotes?: NullableStringFieldUpdateOperationsInput | string | null
    specialNotes?: NullableStringFieldUpdateOperationsInput | string | null
    image?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOnDemandStatusFieldUpdateOperationsInput | $Enums.OnDemandStatus
    orderTotal?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    tip?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    length?: NullableFloatFieldUpdateOperationsInput | number | null
    width?: NullableFloatFieldUpdateOperationsInput | number | null
    height?: NullableFloatFieldUpdateOperationsInput | number | null
    weight?: NullableFloatFieldUpdateOperationsInput | number | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverStatus?: NullableEnumDriverStatusFieldUpdateOperationsInput | $Enums.DriverStatus | null
    deletedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type UserAddressUpdateWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: ProfileUpdateOneRequiredWithoutUserAddressesNestedInput
  }

  export type UserAddressUncheckedUpdateWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserAddressUncheckedUpdateManyWithoutAddressInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type DispatchCreateManyCateringRequestInput = {
    id?: string
    createdAt?: Date | string
    driverId?: string | null
    onDemandId?: string | null
    updatedAt?: Date | string
    userId?: string | null
  }

  export type FileUploadCreateManyCateringRequestInput = {
    id?: string
    userId?: string | null
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    onDemandId?: string | null
    jobApplicationId?: string | null
    category?: string | null
    isTemporary?: boolean
  }

  export type DispatchUpdateWithoutCateringRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driver?: ProfileUpdateOneWithoutDriverDispatchesNestedInput
    onDemand?: OnDemandUpdateOneWithoutDispatchesNestedInput
    user?: ProfileUpdateOneWithoutUserDispatchesNestedInput
  }

  export type DispatchUncheckedUpdateWithoutCateringRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DispatchUncheckedUpdateManyWithoutCateringRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FileUploadUpdateWithoutCateringRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
    jobApplication?: JobApplicationUpdateOneWithoutFileUploadsNestedInput
    onDemand?: OnDemandUpdateOneWithoutFileUploadsNestedInput
    user?: ProfileUpdateOneWithoutFileUploadsNestedInput
  }

  export type FileUploadUncheckedUpdateWithoutCateringRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    jobApplicationId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FileUploadUncheckedUpdateManyWithoutCateringRequestInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    jobApplicationId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
  }

  export type DispatchCreateManyOnDemandInput = {
    id?: string
    cateringRequestId?: string | null
    createdAt?: Date | string
    driverId?: string | null
    updatedAt?: Date | string
    userId?: string | null
  }

  export type FileUploadCreateManyOnDemandInput = {
    id?: string
    userId?: string | null
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    cateringRequestId?: string | null
    jobApplicationId?: string | null
    category?: string | null
    isTemporary?: boolean
  }

  export type DispatchUpdateWithoutOnDemandInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateringRequest?: CateringRequestUpdateOneWithoutDispatchesNestedInput
    driver?: ProfileUpdateOneWithoutDriverDispatchesNestedInput
    user?: ProfileUpdateOneWithoutUserDispatchesNestedInput
  }

  export type DispatchUncheckedUpdateWithoutOnDemandInput = {
    id?: StringFieldUpdateOperationsInput | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type DispatchUncheckedUpdateManyWithoutOnDemandInput = {
    id?: StringFieldUpdateOperationsInput | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    driverId?: NullableStringFieldUpdateOperationsInput | string | null
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type FileUploadUpdateWithoutOnDemandInput = {
    id?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
    cateringRequest?: CateringRequestUpdateOneWithoutFileUploadsNestedInput
    jobApplication?: JobApplicationUpdateOneWithoutFileUploadsNestedInput
    user?: ProfileUpdateOneWithoutFileUploadsNestedInput
  }

  export type FileUploadUncheckedUpdateWithoutOnDemandInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    jobApplicationId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FileUploadUncheckedUpdateManyWithoutOnDemandInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    jobApplicationId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FileUploadCreateManyJobApplicationInput = {
    id?: string
    userId?: string | null
    fileName: string
    fileType: string
    fileSize: number
    fileUrl: string
    uploadedAt?: Date | string
    updatedAt?: Date | string
    cateringRequestId?: string | null
    onDemandId?: string | null
    category?: string | null
    isTemporary?: boolean
  }

  export type FileUploadUpdateWithoutJobApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
    cateringRequest?: CateringRequestUpdateOneWithoutFileUploadsNestedInput
    onDemand?: OnDemandUpdateOneWithoutFileUploadsNestedInput
    user?: ProfileUpdateOneWithoutFileUploadsNestedInput
  }

  export type FileUploadUncheckedUpdateWithoutJobApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
  }

  export type FileUploadUncheckedUpdateManyWithoutJobApplicationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    fileName?: StringFieldUpdateOperationsInput | string
    fileType?: StringFieldUpdateOperationsInput | string
    fileSize?: IntFieldUpdateOperationsInput | number
    fileUrl?: StringFieldUpdateOperationsInput | string
    uploadedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    cateringRequestId?: NullableStringFieldUpdateOperationsInput | string | null
    onDemandId?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    isTemporary?: BoolFieldUpdateOperationsInput | boolean
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}